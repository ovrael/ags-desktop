#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/Ly8gLi-ags.js"

cat <<EOF | base64 --decode > $file
// ../../../../usr/share/ags/js/src/gtk4/app.ts
import GLib from "gi://GLib?version=2.0";
import Gtk from "gi://Gtk?version=4.0";
import Astal from "gi://Astal?version=4.0";

// ../../../../usr/share/ags/js/src/overrides.ts
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod2, patch2) {
  return mod2.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland, Monitor, Workspace }) => {
  patch(Hyprland.prototype, "binds");
  patch(Hyprland.prototype, "monitors");
  patch(Hyprland.prototype, "workspaces");
  patch(Hyprland.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd: Notifd2, Notification }) => {
  patch(Notifd2.prototype, "notifications");
  patch(Notification.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp: Wp3, Audio, Video }) => {
  patch(Wp3.prototype, "endpoints");
  patch(Wp3.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../../usr/share/ags/js/src/_app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";

// ../../../../usr/share/ags/js/gnim/src/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    delete this.parent;
    delete this.context;
  }
};
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../usr/share/ags/js/src/_app.ts
import IO from "gi://AstalIO";
import GObject from "gi://GObject";
function mkApp(App) {
  return new class AstalJS extends App {
    static {
      GObject.registerClass({ GTypeName: "AstalJS" }, this);
    }
    eval(body) {
      return new Promise((res, rej) => {
        try {
          const fn = Function(`return (async function() {
                        ${body.includes(";") ? body : `return ${body};`}
                    })`);
          fn()().then(res).catch(rej);
        } catch (error) {
          rej(error);
        }
      });
    }
    vfunc_shutdown() {
      super.vfunc_shutdown();
      this.disposeRoot?.();
    }
    vfunc_request(msg, conn) {
      if (typeof this.requestHandler === "function") {
        this.requestHandler(msg, (response) => {
          IO.write_sock(conn, String(response), (_, res) => IO.write_sock_finish(res));
        });
      } else {
        super.vfunc_request(msg, conn);
      }
    }
    apply_css(style, reset = false) {
      super.apply_css(style, reset);
    }
    quit(code) {
      super.quit();
      exit(code ?? 0);
    }
    start({ requestHandler, css, hold, main, client, icons: icons2, ...cfg } = {}) {
      const app = this;
      client ??= () => {
        print(`Astal instance "${app.instanceName}" already running`);
        exit(1);
      };
      Object.assign(this, cfg);
      setConsoleLogDomain(app.instanceName);
      this.requestHandler = requestHandler;
      app.connect("activate", () => {
        createRoot((dispose) => {
          this.disposeRoot = dispose;
          main?.(...programArgs);
        });
      });
      try {
        app.acquire_socket();
      } catch {
        return client((msg) => IO.send_request(app.instanceName, msg), ...programArgs);
      }
      if (css) this.apply_css(css, false);
      if (icons2) app.add_icons(icons2);
      hold ??= true;
      if (hold) app.hold();
      app.runAsync([]);
    }
  }();
}

// ../../../../usr/share/ags/js/src/gtk4/app.ts
Gtk.init();
GLib.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw2 }) => Adw2.init()).catch(() => void 0);
var app_default = mkApp(Astal.Application);

// sass:/home/jacek/.config/ags/styles/main.scss
var main_default = '.weather-button {\n  margin: 0px;\n  padding: 0px;\n}\n\n.weather-button-label-container {\n  transition: color 1s ease, background-color 1s ease, border 1s ease;\n}\n\n.weather-button-status-label {\n  font-size: 44px;\n  line-height: 22px;\n  margin: 0px;\n  padding: 0px;\n}\n\n.weather-button-sun {\n  color: rgba(230, 230, 120, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(230, 230, 120, 0.2);\n  background-color: rgba(230, 230, 120, 0.1);\n}\n\n.weather-button-sun:hover {\n  background-color: rgba(230, 230, 120, 0.215);\n}\n\n.weather-button-moon {\n  color: rgba(160, 160, 160, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(160, 160, 160, 0.2);\n  background-color: rgba(160, 160, 160, 0.1);\n}\n\n.weather-button-moon:hover {\n  background-color: rgba(160, 160, 160, 0.215);\n}\n\n.weather-button-cloud-mid {\n  color: rgba(180, 180, 140, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(180, 180, 140, 0.2);\n  background-color: rgba(180, 180, 140, 0.1);\n}\n\n.weather-button-cloud-mid:hover {\n  background-color: rgba(180, 180, 140, 0.215);\n}\n\n.weather-button-cloud-full {\n  color: rgba(115, 115, 115, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(115, 115, 115, 0.2);\n  background-color: rgba(115, 115, 115, 0.1);\n}\n\n.weather-button-cloud-full:hover {\n  background-color: rgba(115, 115, 115, 0.215);\n}\n\n.weather-button-rain {\n  color: rgba(130, 180, 250, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(130, 180, 250, 0.2);\n  background-color: rgba(130, 180, 250, 0.1);\n}\n\n.weather-button-rain:hover {\n  background-color: rgba(130, 180, 250, 0.215);\n}\n\n.weather-button-snow {\n  color: rgba(230, 230, 230, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(230, 230, 230, 0.2);\n  background-color: rgba(230, 230, 230, 0.1);\n}\n\n.weather-button-snow:hover {\n  background-color: rgba(230, 230, 230, 0.215);\n}\n\n.weather-button-thunderstorm {\n  color: rgba(50, 90, 135, 0.9);\n  border-radius: 4px;\n  border: 2px solid rgba(50, 90, 135, 0.2);\n  background-color: rgba(50, 90, 135, 0.1);\n}\n\n.weather-button-thunderstorm:hover {\n  background-color: rgba(50, 90, 135, 0.215);\n}\n\n.current-weather-icon {\n  line-height: 0.5;\n  font-size: 160px;\n  padding: 4px 12px;\n}\n\n.weather-icon-hourly {\n  line-height: 0.5;\n  font-size: 90px;\n  padding: 4px;\n}\n\n.weather-icon-daily {\n  line-height: 60px;\n  font-size: 120px;\n  padding: 4px;\n}\n\n.weather-icon-sun {\n  color: rgba(180, 180, 80, 0.8);\n}\n\n.weather-icon-moon {\n  color: rgba(160, 160, 160, 0.8);\n}\n\n.weather-icon-cloud-mid {\n  color: rgba(180, 180, 140, 0.8);\n}\n\n.weather-icon-cloud-full {\n  color: rgba(115, 115, 115, 0.8);\n}\n\n.weather-icon-rain {\n  color: rgba(90, 120, 170, 0.8);\n}\n\n.weather-icon-snow {\n  color: rgba(210, 210, 210, 0.8);\n}\n\n.weather-icon-thunderstorm {\n  color: rgba(40, 75, 115, 0.8);\n}\n\n.weather-localization-button {\n  border-radius: 0px;\n  border: 1px solid rgb(128, 128, 128);\n  color: rgb(200, 200, 200);\n  background-color: rgb(0, 0, 0);\n}\n\n.weather-localization-button.weather-current-localization {\n  color: rgb(0, 0, 0);\n  background-color: rgb(200, 200, 200);\n}\n\n.weather-panel-label {\n  color: rgb(200, 200, 200);\n}\n\n.weather-panel {\n  padding: 6px;\n  border-radius: 0px;\n  border: 1px solid rgb(200, 200, 200);\n}\n\n.weather-time-panel {\n  color: rgb(173, 173, 173);\n  background-color: rgba(255, 255, 255, 0.1);\n  padding: 4px;\n}\n\n.weather-temperature-label {\n  line-height: 0.5;\n  font-size: 16px;\n  padding: 0px;\n}\n\n.current-weather-temperature-label {\n  line-height: 0.5;\n  font-size: 90px;\n  padding: 4px;\n}\n\n.network-button {\n  margin: 0px;\n  padding: 0px;\n}\n\n.network-button-good {\n  color: rgba(50, 180, 100, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(50, 180, 100, 0.2);\n  background-color: rgba(50, 180, 100, 0.1);\n}\n\n.network-button-good:hover {\n  background-color: rgba(50, 180, 100, 0.215);\n}\n\n.network-button-medium {\n  color: rgba(200, 170, 35, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(200, 170, 35, 0.2);\n  background-color: rgba(200, 170, 35, 0.1);\n}\n\n.network-button-medium:hover {\n  background-color: rgba(200, 170, 35, 0.215);\n}\n\n.network-button-bad {\n  color: rgba(200, 60, 35, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(200, 60, 35, 0.2);\n  background-color: rgba(200, 60, 35, 0.1);\n}\n\n.network-button-bad:hover {\n  background-color: rgba(200, 60, 35, 0.215);\n}\n\n.access-point-container {\n  padding: 8px 6px;\n  background-color: transparent;\n}\n\n.access-point-label-container {\n  padding: 2px 8px;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n}\n\n.access-point-label-icon-good {\n  color: rgba(120, 255, 110, 0.3);\n}\n\n.access-point-label-icon-bad {\n  color: rgba(250, 150, 130, 0.3);\n}\n\n.network-connect-button {\n  color: rgba(50, 170, 110, 0.95);\n  border-radius: 0px;\n  border: 2px solid rgba(50, 170, 110, 0.2);\n  background-color: rgba(50, 170, 110, 0.1);\n  padding: 2px 8px;\n}\n\n.network-connect-button:hover {\n  background-color: rgba(50, 170, 110, 0.215);\n}\n\n.current-connection-container {\n  padding: 2px 8px;\n}\n\n.current-connection-data-container {\n  padding: 2px 8px;\n}\n\n.current-connection-icon {\n  font-size: 64px;\n}\n\n.current-network-label {\n  font-size: 20px;\n}\n\n.network-strength-bar {\n  border-radius: 0px;\n  background-color: transparent;\n}\n\n.network-strength-bar > trough {\n  border-radius: 0px;\n  background-color: transparent;\n}\n\n.network-strength-bar > trough > block.empty {\n  background-color: transparent;\n  border-radius: 0px;\n}\n\n.network-strength-bar > trough > block.filled.low {\n  background-color: rgba(200, 0, 0, 0.25);\n  border-radius: 0px;\n}\n\n.network-strength-bar > trough > block.filled.high {\n  background-color: rgba(255, 210, 0, 0.25);\n  border-radius: 0px;\n}\n\n.network-strength-bar > trough > block.filled.full {\n  background-color: rgba(30, 255, 0, 0.25);\n  border-radius: 0px;\n}\n\n.network-wifi-switch {\n  border-radius: 0px;\n  background-color: rgba(200, 50, 30, 0.5);\n}\n\n.network-wifi-switch:checked {\n  background-color: rgba(30, 200, 80, 0.5);\n}\n\n.network-wifi-switch > slider {\n  background-color: rgb(150, 150, 150);\n  border-radius: 0px;\n}\n\n.notification-history-button {\n  margin: 0px;\n  padding: 0px;\n  color: rgba(150, 150, 150, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(150, 150, 150, 0.2);\n  background-color: rgba(150, 150, 150, 0.1);\n}\n\n.notification-history-button:hover {\n  background-color: rgba(150, 150, 150, 0.215);\n}\n\n.notification {\n  background-color: black;\n  border-radius: 0px;\n  color: white;\n}\n\n.notification-low {\n  border: 1px green solid;\n}\n\n.notification-normal {\n  border: 1px orange solid;\n}\n\n.notification-critical {\n  border: 1px red solid;\n}\n\n.separate-bar-low {\n  background-color: green;\n  border-radius: 0px;\n}\n\n.separate-bar-normal {\n  background-color: orange;\n  border-radius: 0px;\n}\n\n.separate-bar-critical {\n  background-color: red;\n  border-radius: 0px;\n}\n\n.timeout-bar {\n  border-radius: 0px;\n  background-color: transparent;\n}\n\n.timeout-bar > trough > block.empty {\n  background-color: transparent;\n  border-radius: 0px;\n}\n\n.timeout-bar-low > trough > block.filled {\n  background-color: green;\n  border-radius: 0px;\n}\n\n.timeout-bar-normal > trough > block.filled {\n  background-color: orange;\n  border-radius: 0px;\n}\n\n.timeout-bar-critical > trough > block.filled {\n  background-color: red;\n  border-radius: 0px;\n}\n\n.sound-status-button {\n  margin: 0px;\n  padding: 0px;\n  color: rgba(150, 150, 150, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(150, 150, 150, 0.2);\n  background-color: rgba(150, 150, 150, 0.1);\n}\n\n.sound-status-button:hover {\n  background-color: rgba(150, 150, 150, 0.215);\n}\n\n.sound-level-mute-button {\n  font-size: 40px;\n  line-height: 20px;\n}\n\n.audio-button {\n  border-radius: 0px;\n  border: 1px solid rgb(128, 128, 128);\n  color: rgb(200, 200, 200);\n  background-color: rgb(0, 0, 0);\n}\n\n.audio-button.active {\n  color: rgb(0, 0, 0);\n  background-color: rgb(200, 200, 200);\n}\n\n.volume-slider > trough > highlight {\n  background-color: rgb(180, 180, 180);\n  border-radius: 0px;\n}\n\n.volume-slider > trough > slider {\n  background-color: black;\n  border: solid 1px rgb(200, 200, 200);\n  border-radius: 0px;\n}\n\n.volume-slider > trough {\n  background-color: rgb(110, 110, 110);\n  border-radius: 0px;\n}\n\n.devices-dropdown {\n  border: 1px solid rgba(180, 180, 180, 0.5);\n  border-radius: 0px;\n}\n\n.devices-dropdown > popover > contents > box {\n  border: 0px solid transparent;\n  border-radius: 0px;\n}\n\n.devices-dropdown > popover > contents > box > scrolledwindow {\n  border: 0px solid transparent;\n  border-radius: 0px;\n}\n\n.devices-dropdown > popover > contents > box > scrolledwindow > listview {\n  border: 0px solid transparent;\n  border-radius: 0px;\n  padding: 0px;\n}\n\n.devices-dropdown > popover > contents > box > scrolledwindow > listview > row {\n  background-color: rgb(0, 0, 0);\n  border: 1px solid rgba(170, 170, 170, 0.5);\n  border-radius: 0px;\n  margin: 0;\n}\n\n.devices-dropdown > popover > contents > box > scrolledwindow > listview > row:hover {\n  filter: brightness(1.3);\n  background-color: rgb(10, 10, 10);\n}\n\n.timer-button {\n  margin: 0px;\n  padding: 0px;\n}\n\n.timer-button-free {\n  color: rgba(100, 40, 180, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(100, 40, 180, 0.2);\n  background-color: rgba(100, 40, 180, 0.1);\n}\n\n.timer-button-free:hover {\n  background-color: rgba(100, 40, 180, 0.215);\n}\n\n.timer-button-running {\n  color: rgba(200, 35, 35, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(200, 35, 35, 0.2);\n  background-color: rgba(200, 35, 35, 0.1);\n}\n\n.timer-button-running:hover {\n  background-color: rgba(200, 35, 35, 0.215);\n}\n\n.timer-button-running-as-left {\n  color: rgba(200, 35, 35, 0.95);\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n  border-top-right-radius: 0px;\n  border-bottom-right-radius: 0px;\n  border-left: 2px solid rgba(200, 35, 35, 0.2);\n  border-top: 2px solid rgba(200, 35, 35, 0.2);\n  border-bottom: 2px solid rgba(200, 35, 35, 0.2);\n  border-right: 0px none transparent;\n  background-color: rgba(200, 35, 35, 0.1);\n}\n\n.timer-button:hover .timer-button-running-as-left {\n  background-color: rgba(230, 40, 40, 0.215);\n}\n\n.timer-button-done {\n  color: rgba(80, 200, 35, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(80, 200, 35, 0.2);\n  background-color: rgba(80, 200, 35, 0.1);\n}\n\n.timer-button-done:hover {\n  background-color: rgba(80, 200, 35, 0.215);\n}\n\n.timer-button-done-as-right {\n  color: rgba(81, 196, 36, 0.95);\n  border: 2px solid rgba(80, 200, 35, 0.2);\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-right: 2px solid rgba(80, 200, 35, 0.2);\n  border-top: 2px solid rgba(80, 200, 35, 0.2);\n  border-bottom: 2px solid rgba(80, 200, 35, 0.2);\n  border-left: 0px none transparent;\n  background-color: rgba(80, 200, 35, 0.1);\n}\n\n.timer-button:hover .timer-button-done-as-right {\n  background-color: rgba(80, 200, 35, 0.215);\n}\n\n.small-button {\n  padding: 1px 2px;\n}\n\n.small-button > label {\n  font-size: 18px;\n}\n\n.timer-popover-label-digit-container {\n  background-color: rgba(40, 0, 0, 0.4);\n}\n\n.timer-popover-label-digit {\n  font-family: "FS Sevegment", sans-serif;\n  font-weight: 200;\n  font-size: 50px;\n  color: rgba(175, 5, 5, 0.7);\n  background-color: transparent;\n}\n\n.timer-popover-label-digit-background {\n  font-family: "FS Sevegment", sans-serif;\n  font-weight: 200;\n  font-size: 50px;\n  color: rgb(40, 5, 5);\n  background-color: transparent;\n}\n\n.timer-popover-start-button {\n  color: rgba(50, 200, 35, 0.95);\n  border-radius: 0px;\n  border: 2px solid rgba(50, 200, 35, 0.2);\n  background-color: rgba(50, 200, 35, 0.1);\n}\n\n.timer-popover-start-button:hover {\n  background-color: rgba(50, 200, 35, 0.215);\n}\n\n.timer-popover-pause-timer-button {\n  color: rgba(235, 190, 50, 0.95);\n  border-radius: 0px;\n  border: 2px solid rgba(235, 190, 50, 0.2);\n  background-color: rgba(235, 190, 50, 0.1);\n}\n\n.timer-popover-pause-timer-button:hover {\n  background-color: rgba(235, 190, 50, 0.215);\n}\n\n.timer-popover-add-timer-button {\n  color: rgba(70, 230, 250, 0.95);\n  border-radius: 0px;\n  border: 2px solid rgba(70, 230, 250, 0.2);\n  background-color: rgba(70, 230, 250, 0.1);\n}\n\n.timer-popover-add-timer-button:hover {\n  background-color: rgba(70, 230, 250, 0.215);\n}\n\n.timer-popover-edit-timers-button {\n  color: rgba(255, 160, 35, 0.95);\n  border-radius: 0px;\n  border: 2px solid rgba(255, 160, 35, 0.2);\n  background-color: rgba(255, 160, 35, 0.1);\n}\n\n.timer-popover-edit-timers-button:hover {\n  background-color: rgba(255, 160, 35, 0.215);\n}\n\n.timer-popover-remove-timer-button {\n  color: rgba(210, 20, 20, 0.95);\n  border-radius: 0px;\n  border: 2px solid rgba(210, 20, 20, 0.2);\n  background-color: rgba(210, 20, 20, 0.1);\n}\n\n.timer-popover-remove-timer-button:hover {\n  background-color: rgba(210, 20, 20, 0.215);\n}\n\n.timer-popover-remove-done-timer-button {\n  color: rgba(210, 20, 170, 0.95);\n  border-radius: 0px;\n  border: 2px solid rgba(210, 20, 170, 0.2);\n  background-color: rgba(210, 20, 170, 0.1);\n  padding: 2px;\n}\n\n.timer-popover-remove-done-timer-button:hover {\n  background-color: rgba(210, 20, 170, 0.215);\n}\n\n.timer-popover-move-timer-button {\n  color: rgba(175, 175, 175, 0.95);\n  border-radius: 0px;\n  border: 1px solid rgba(175, 175, 175, 0.2);\n  background-color: rgba(175, 175, 175, 0.1);\n  margin-right: 6px;\n  padding: 0px;\n}\n\n.timer-popover-move-timer-button:hover {\n  background-color: rgba(175, 175, 175, 0.215);\n}\n\n.saved-timer-container {\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 0px;\n  padding: 4px 12px;\n}\n\n.running-timer-bar {\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  border-radius: 0px;\n  background-color: transparent;\n}\n\n.running-timer-bar > trough > block.empty {\n  background-color: transparent;\n  border-radius: 0px;\n}\n\n.running-timer-bar > trough > block.filled.low {\n  background-color: rgba(200, 0, 0, 0.25);\n  border-radius: 0px;\n}\n\n.running-timer-bar > trough > block.filled.high {\n  background-color: rgba(255, 210, 0, 0.25);\n  border-radius: 0px;\n}\n\n.running-timer-bar > trough > block.filled.full {\n  background-color: rgba(30, 255, 0, 0.25);\n  border-radius: 0px;\n}\n\n.running-timer-label {\n  background-color: transparent;\n  border-radius: 0px;\n}\n\n@keyframes morph {\n  0% {\n    background-color: rgba(30, 255, 0, 0.25);\n  }\n  50% {\n    background-color: rgba(30, 255, 0, 0.5);\n  }\n  100% {\n    background-color: rgba(30, 255, 0, 0.25);\n  }\n}\n.timer-done > trough > block.filled.full {\n  border-radius: 0px;\n  animation: morph 2s ease-in-out infinite;\n}\n\n.create-save-timer-window {\n  background-color: rgba(0, 0, 0, 0.75);\n  color: rgba(255, 255, 255, 0.45);\n  padding: 16px;\n}\n\n.bg-white {\n  background-color: white;\n}\n\n.bg-black {\n  background-color: black;\n}\n\n.bg-gray {\n  background-color: gray;\n}\n\n.bg-red {\n  background-color: red;\n}\n\n.bg-green {\n  background-color: green;\n}\n\n.bg-blue {\n  background-color: blue;\n}\n\n.bg-yellow {\n  background-color: yellow;\n}\n\n.bg-purple {\n  background-color: purple;\n}\n\n.bg-orange {\n  background-color: orange;\n}\n\n.fg-white {\n  color: white;\n}\n\n.fg-black {\n  color: black;\n}\n\n.fg-gray {\n  color: gray;\n}\n\n.fg-red {\n  color: red;\n}\n\n.fg-green {\n  color: green;\n}\n\n.fg-blue {\n  color: blue;\n}\n\n.fg-yellow {\n  color: yellow;\n}\n\n.fg-purple {\n  color: purple;\n}\n\n.fg-orange {\n  color: orange;\n}\n\n* {\n  font-family: "FiraCode Nerd Font Mono", "FiraCode Nerd Font Bold", monospace;\n  font-feature-settings: "liga" on;\n  font-size: 14px;\n}\n\nwindow.Bar {\n  background: transparent;\n  color: @theme_fg_color;\n  font-weight: bold;\n}\nwindow.Bar > centerbox {\n  background: transparent;\n  margin: 0px;\n  padding: 0px;\n}\nwindow.Bar centerbox > box {\n  background-color: transparent;\n}\nwindow.Bar .clock {\n  color: rgb(160, 160, 160);\n  background: rgb(0, 0, 0);\n  padding: 0px 10px;\n  border-radius: 4px;\n  font-family: "Fira Code";\n}\n\nbutton {\n  padding: 1px 4px;\n}\n\nmenubutton > button {\n  margin: 0px;\n  padding: 0px;\n}\n\n.bar-button-label {\n  line-height: 0.5;\n  font-size: 34px;\n  font-weight: 700;\n  padding: 4px;\n}\n\n.bar-button-label-warn {\n  color: rgba(240, 160, 10, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(240, 160, 10, 0.2);\n  background-color: rgba(240, 160, 10, 0.1);\n}\n\n.bar-button-label-warn:hover {\n  background-color: rgba(240, 160, 10, 0.215);\n}\n\n.bar-button-label-error {\n  color: rgba(215, 30, 30, 0.95);\n  border-radius: 4px;\n  border: 2px solid rgba(215, 30, 30, 0.2);\n  background-color: rgba(215, 30, 30, 0.1);\n}\n\n.bar-button-label-error:hover {\n  background-color: rgba(215, 30, 30, 0.215);\n}\n\n.widget-popover {\n  border: 1px rgba(255, 255, 255, 0.2) solid;\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 0px;\n}\n\npopover.widget-popover contents {\n  background-color: transparent;\n  color: rgba(255, 255, 255, 0.45);\n  border-radius: 0px;\n  padding: 0px;\n}\n\n.container-label {\n  font-size: medium;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  font-family: "FiraCode Nerd Font";\n}\n\n.label-text {\n  font-size: 14px;\n}\n\n.label-icon {\n  font-size: 28px;\n}\n\n.label-icon-no-padding {\n  font-size: 28px;\n  line-height: 0.5em;\n}';

// ../../../../usr/share/ags/js/src/gtk4/index.ts
import Astal2 from "gi://Astal?version=4.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";

// ../../../../usr/share/ags/js/src/process.ts
import AstalIO from "gi://AstalIO";

// ../../../../usr/share/ags/js/gnim/src/jsx/jsx.ts
import GObject3 from "gi://GObject";

// ../../../../usr/share/ags/js/gnim/src/jsx/state.ts
import GObject2 from "gi://GObject";
import Gio from "gi://Gio";
import GLib2 from "gi://GLib";

// ../../../../usr/share/ags/js/gnim/src/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function set(obj, prop, value) {
  const key = snakeify2(prop);
  const getter = `get_${key}`;
  const setter = `set_${key}`;
  let current;
  if (getter in obj && typeof obj[getter] === "function") {
    current = obj[getter]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter in obj && typeof obj[setter] === "function") {
      ;
      obj[setter](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../usr/share/ags/js/gnim/src/jsx/state.ts
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject2.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    _Accessor.evaluating?.add(this);
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    return this.as(transform);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      subscribers.forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
function createComputed(deps, transform) {
  let dispose;
  const subscribers = /* @__PURE__ */ new Set();
  const cache = new Array(deps.length);
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      dispose = deps.map(
        (dep, i) => dep.subscribe(() => {
          const value = dep.get();
          if (cache[i] !== value) {
            cache[i] = dep.get();
            subscribers.forEach((cb) => cb());
          }
        })
      );
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        dispose.map((cb) => cb());
        dispose.length = 0;
        cache.length = 0;
      }
    };
  };
  const get = () => {
    const args = deps.map((dep, i) => {
      if (!cache[i]) {
        cache[i] = dep.get();
      }
      return cache[i];
    });
    return transform ? transform(...args) : args;
  };
  return new Accessor(get, subscribe);
}
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio.Settings) {
      return object.get_value(key).recursiveUnpack();
    } else {
      const getter = `get_${prop.replaceAll("-", "_")}`;
      if (getter in object && typeof object[getter] === "function") {
        return object[getter]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
      throw Error(`cannot get property ${key}`);
    }
  };
  return new Accessor(get, subscribe);
}

// ../../../../usr/share/ags/js/gnim/src/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  addChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../usr/share/ags/js/gnim/src/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject3.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children = [], ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  env.initProps(props);
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) delete props[key2];
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2.slice(2), value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (const child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn("Trying to add boolean value of `true` as a child.");
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        env.addChild(object, ch, -1);
      }
    } else if (child) {
      env.addChild(object, child, -1);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const name = kebabify(sig);
    const id = name.startsWith("notify-") ? object.connect(`notify::${name.slice(7)}`, handler) : object.connect(kebabify(sig), handler);
    return () => object.disconnect(id);
  });
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../usr/share/ags/js/gnim/src/jsx/Fragment.ts
import GObject4 from "gi://GObject";

// ../../../../usr/share/ags/js/gnim/src/gnome/signalTracker.ts
var mod = import("resource:///org/gnome/shell/misc/signalTracker.js");
var registerDestroyableType = await mod.then((mod2) => mod2.registerDestroyableType).catch(() => () => void 0);

// ../../../../usr/share/ags/js/gnim/src/jsx/Fragment.ts
var _a, _b, _c;
var Fragment = class _Fragment extends (_c = GObject4.Object, _b = GObject4.signals, _a = GObject4.properties, _c) {
  constructor({ children = [] } = {}) {
    super();
    this.connectionIds = /* @__PURE__ */ new Set();
    this._children = Array.isArray(children) ? children : [children];
  }
  static {
    this[_b] = {
      "destroy": {},
      "child-added": {
        param_types: [GObject4.TYPE_OBJECT, GObject4.TYPE_UINT]
      },
      "child-removed": {
        param_types: [GObject4.TYPE_OBJECT, GObject4.TYPE_UINT]
      }
    };
  }
  static {
    this[_a] = {
      children: GObject4.ParamSpec.jsobject("children", "", "", GObject4.ParamFlags.READABLE)
    };
  }
  static {
    GObject4.registerClass(this);
    registerDestroyableType(this);
  }
  static new(children = []) {
    return new _Fragment({ children });
  }
  get children() {
    return [...this._children];
  }
  addChild(child, index = -1) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    if (index > 0) {
      this._children = [
        ...this._children.slice(0, index),
        child,
        ...this._children.slice(index)
      ];
    } else {
      this._children.push(child);
      index = this._children.length - 1;
    }
    this.emit("child-added", child, index);
    this.notify("children");
  }
  hasChild(child) {
    return this._children.findIndex((ch) => ch === child) > -1;
  }
  removeChild(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("child-removed", child, index);
    this.notify("children");
  }
  connect(signal, callback) {
    const id = super.connect(signal, callback);
    this.connectionIds.add(id);
    return id;
  }
  disconnect(id) {
    super.disconnect(id);
    this.connectionIds.delete(id);
  }
  destroy() {
    this.emit("destroy");
    for (const id of this.connectionIds.values()) {
      super.disconnect(id);
    }
  }
};

// ../../../../usr/share/ags/js/gnim/src/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
    scope.dispose();
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.removeChild(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if (fragment.hasChild(child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.addChild(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(Scope.current);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.addChild(child);
      }
    });
  }
  callback(each.get());
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../usr/share/ags/js/gnim/src/jsx/With.ts
function With({
  value,
  children: mkChild,
  cleanup
}) {
  const fragment = new Fragment();
  let scope;
  function callback(v) {
    for (const child of fragment.children) {
      fragment.removeChild(child);
      if (typeof cleanup === "function") {
        cleanup(child);
      } else if (cleanup !== null) {
        env.defaultCleanup(child);
      }
      if (scope) scope.dispose();
    }
    scope = new Scope(Scope.current);
    const ch = scope.run(() => mkChild(v));
    if (ch !== "" && ch !== false && ch !== null && ch !== void 0) {
      fragment.addChild(ch);
    }
  }
  const dispose = value.subscribe(() => {
    callback(value.get());
  });
  callback(value.get());
  onCleanup(() => {
    scope.dispose();
    dispose();
  });
  return fragment;
}

// ../../../../usr/share/ags/js/src/process.ts
var Process = AstalIO.Process;
function subprocess(argsOrCmd, onOut = print, onErr = printerr) {
  const args = Array.isArray(argsOrCmd) || typeof argsOrCmd === "string";
  const { cmd, err, out } = {
    cmd: args ? argsOrCmd : argsOrCmd.cmd,
    err: args ? onErr : argsOrCmd.err || onErr,
    out: args ? onOut : argsOrCmd.out || onOut
  };
  const proc = Array.isArray(cmd) ? AstalIO.Process.subprocessv(cmd) : AstalIO.Process.subprocess(cmd);
  proc.connect("stdout", (_, stdout) => out(stdout));
  proc.connect("stderr", (_, stderr) => err(stderr));
  return proc;
}
function execAsync(cmd) {
  return new Promise((resolve, reject) => {
    if (Array.isArray(cmd)) {
      AstalIO.Process.exec_asyncv(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_asyncv_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    } else {
      AstalIO.Process.exec_async(cmd, (_, res) => {
        try {
          resolve(AstalIO.Process.exec_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    }
  });
}

// ../../../../usr/share/ags/js/src/time.ts
import AstalIO2 from "gi://AstalIO";
var Time = AstalIO2.Time;
function interval(interval2, callback) {
  return AstalIO2.Time.interval(interval2, () => void callback?.());
}
function timeout(timeout2, callback) {
  return AstalIO2.Time.timeout(timeout2, () => void callback?.());
}
function createPoll(init, ival, execOrFn, transform) {
  let currentValue = init;
  let timer = null;
  const subscribers = /* @__PURE__ */ new Set();
  function subscribe(callback) {
    function set2(value) {
      if (value !== currentValue) {
        currentValue = value;
        subscribers.forEach((cb) => cb());
      }
    }
    if (subscribers.size === 0) {
      timer = interval(ival, () => {
        if (typeof execOrFn === "function") {
          const value = execOrFn(currentValue);
          if (value instanceof Promise) {
            value.then(set2);
          } else {
            set2(value);
          }
        } else {
          execAsync(execOrFn).then((stdout) => {
            set2(transform ? transform(stdout, currentValue) : stdout);
          });
        }
      });
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        timer?.cancel();
        timer = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// widget/timer/timers_data.tsx
var TimersData = class _TimersData {
  constructor() {
    this.runningTimers = 0;
    this.doneTimers = 0;
  }
  getUndoneCount() {
    return this.runningTimers - this.doneTimers;
  }
  updateRunningTimers(change) {
    if (Math.abs(change) !== 1) return this;
    const newData = new _TimersData();
    newData.runningTimers = this.runningTimers + change;
    newData.doneTimers = this.doneTimers;
    return newData;
  }
  updateDoneTimers(change) {
    if (Math.abs(change) !== 1) return this;
    const newData = new _TimersData();
    newData.runningTimers = this.runningTimers;
    newData.doneTimers = this.doneTimers + change;
    return newData;
  }
};

// widget/timer/timer_variables.tsx
var timerVariables = {
  runningTimers: createState([]),
  // 0 running timers at the beggining
  savedTimers: createState([]),
  timersData: createState(new TimersData())
};

// widget/timer/timer_helper_functions.ts
function createTimeLeft(timeInSeconds) {
  const hours = timeInSeconds / 3600;
  timeInSeconds = timeInSeconds % 3600;
  const minutes = timeInSeconds / 60;
  const seconds = timeInSeconds % 60;
  return `${formatTimeNumber(hours)}:${formatTimeNumber(minutes)}:${formatTimeNumber(seconds)}`;
}
function formatTimeNumber(timeNumber) {
  return Math.floor(timeNumber).toString().padStart(2, "0");
}

// ../../../../usr/share/ags/js/src/file.ts
import Astal3 from "gi://AstalIO";
function readFile(path) {
  return Astal3.read_file(path) || "";
}
function readFileAsync(path) {
  return new Promise((resolve, reject) => {
    Astal3.read_file_async(path, (_, res) => {
      try {
        resolve(Astal3.read_file_finish(res) || "");
      } catch (error) {
        reject(error);
      }
    });
  });
}
function writeFileAsync(path, content) {
  return new Promise((resolve, reject) => {
    Astal3.write_file_async(path, content, (_, res) => {
      try {
        resolve(Astal3.write_file_finish(res));
      } catch (error) {
        reject(error);
      }
    });
  });
}
function monitorFile(path, callback) {
  return Astal3.monitor_file(path, (file, event) => {
    callback(file, event);
  });
}

// models/utils/communication.ts
var Communication = class _Communication {
  static printInfo(message, file = void 0) {
    _Communication.printMessage("\u2139\uFE0F", message, file);
  }
  static printSuccess(message, file = void 0) {
    _Communication.printMessage("\u2705", message, file);
  }
  static printWarning(message, file = void 0) {
    _Communication.printMessage("\u26A0\uFE0F", message, file);
  }
  static printError(message, file = void 0) {
    _Communication.printMessage("\u{1F4A5}", message, file);
  }
  static printMessage(icon, message, file = void 0) {
    const fileText = file === void 0 ? "" : `[${file}]`;
    console.log(`[${icon}]${fileText} ${message}`);
  }
};

// models/utils/sound_player.ts
var SoundPlayer = class _SoundPlayer {
  static {
    this.playerCommand = null;
  }
  static async init() {
    const candidates = ["mpv", "ffplay", "paplay", "pw-play", "aplay"];
    for (const cmd of candidates) {
      try {
        const result = await execAsync(["which", cmd]);
        if (result.trim()) {
          _SoundPlayer.playerCommand = cmd;
          break;
        }
      } catch {
      }
    }
    if (!_SoundPlayer.playerCommand) {
      Communication.printError(`Cannot find any sound player package, please install one of those: mpv, ffplay, paplay`, "SoundPlayer");
    } else {
      Communication.printSuccess(`Package '${_SoundPlayer.playerCommand}' was chosen to manage sounds`, "SoundPlayer");
    }
  }
  static playSound(filePath) {
    if (!_SoundPlayer.playerCommand) {
      Communication.printError(`Cannot play. Player is not found, please ensure one of those packages is installed: mpv, ffplay, paplay`, "SoundPlayer");
      return void 0;
    }
    const cmd = _SoundPlayer.playerCommand;
    let args = [];
    switch (cmd) {
      case "paplay":
      case "pw-play":
      case "aplay":
        args = [cmd, filePath];
        break;
      case "mpv":
        args = [cmd, "--no-terminal", "--volume=100", "--loop-file=inf", filePath];
        break;
      case "ffplay":
        args = [cmd, "-nodisp", "-autoexit", "-loglevel", "quiet", "-loop", "9999", filePath];
        break;
      default:
        Communication.printError(`Cannot play. Player is not found, please ensure one of those packages is installed: mpv, ffplay, paplay`, "SoundPlayer");
        return;
    }
    return subprocess(
      args,
      (out) => console.log(out),
      (err) => console.error(err)
      // optional
    );
  }
};

// models/constants/timer_constants.ts
var TIMER_CONSTANTS = {
  NAME_LENGTH: 12,
  TIME_LENGTH: 12,
  LABEL_SAFESPACE_CHARS: 2
};

// models/utils/notification_sender.ts
var NotificationSender = class {
  static {
    this.cmd = "notify-send";
  }
  static {
    this.pwd = void 0;
  }
  static async send(title, body = void 0, icon = "info.svg" /* Info */, urgency = "normal") {
    Communication.printInfo(`Notification: ${title} - ${body}`);
    const iconPath = await configuration.getPwd() + "/icons/" + icon;
    const args = [this.cmd, `--icon=${iconPath}`, `--urgency=${urgency}`, "--app-name=OVRAEL_GTK_BAR", title];
    if (body !== void 0 && body.length == 0) args.push(body);
    try {
      await execAsync(args);
    } catch (error) {
      Communication.printError(`Can't send notification ${title} - ${body}, ERROR=${error}`, "NotificationSender");
    }
  }
};

// models/utils/tools.ts
var Tools = class {
  static formatString(text, ...args) {
    if (args.length === 0)
      return text;
    for (let i = 0; i < args.length; i++) {
      text = text.replace(`{${i}}`, args[i]);
    }
    return text;
  }
  static randomInt(min, max) {
    return Math.floor(Math.random() * max) + min;
  }
};

// models/texts/text_icons.ts
var TextIcons = class {
  constructor() {
    //#region General
    this.plus = "\uF067";
    this.close = "\uF00D";
    this.play = "\uF04B";
    this.pause = "\uF04C";
    this.arrowUp = "\uF0D8";
    this.arrowDown = "\uF0D7";
    this.back = "\u{F0B5C}";
    this.edit = "\uEA73";
    this.save = "\u{F0193}";
    this.warn = "\uF071";
    //#endregion
    //#region Timer
    this.alarmFinished = "\u{F171E}";
    this.alarmOn = "\u{F078F}";
    this.alarmClock = "\u{F051B}";
    this.hourglass = "\u{F051F}";
    //#endregion
    //#region Network status
    this.searchNetworks = "\u{F070F}";
    // State
    this.wifiConnectionMax = "\uF1EB";
    this.wiredConnection = "\u{F0200}";
    this.noConnection = "\u{F015B}";
    // Properties
    this.unknownNetwork = "\u{F1643}";
    this.lock = "\uF023";
    this.lockOpen = "\uF2FC";
    this.networkSpeedSlow = "\u{F0F86}";
    this.networkSpeedFast = "\u{F04C5}";
    // Speeds
    this.signalStrength0 = "\u{F08BF}";
    this.signalStrength1 = "\u{F08BC}";
    this.signalStrength2 = "\u{F08BD}";
    this.signalStrength3 = "\u{F08BE}";
    // Stats
    this.download = "\uF409";
    this.upload = "\uF40A";
    //#endregion
    //#region Weahter
    // nf-weather-
    this.cloudyFull = "\uE312";
    this.precipitationProbability = "\uE34A";
    // DAY
    this.daySun = "\uE30D";
    this.dayCloudyMid = "\uE302";
    this.dayRain = "\uE308";
    this.daySnow = "\uE30A";
    this.dayThunderstorm = "\uE305";
    // NIGHT
    this.nightMoon = "\uE32B";
    this.nightCloudyMid = "\uE37E";
    this.nightRain = "\uE325";
    this.nightSnow = "\uE327";
    this.nightThunderstorm = "\uE322";
    //#endregion
    //#region
    this.volumeMute = "\uEEE8";
    this.volumeLow = "\uF026";
    this.volumeMid = "\uF027";
    this.volumeHigh = "\uF028";
    this.speakerTab = "\u{F04C3}";
    this.microphoneTab = "\uED03";
    this.microphone = "\uF130";
    this.microphoneMute = "\uF131";
  }
  //#endregion
};
var icons = new TextIcons();

// ../../../../usr/share/ags/js/src/gtk4/jsx-runtime.ts
import Gtk4 from "gi://Gtk?version=4.0";
import Astal4 from "gi://Astal?version=4.0";

// ../../../../usr/share/ags/js/gnim/src/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Gio2 from "gi://Gio?version=2.0";
import GObject5 from "gi://GObject";
var dummyBuilder = new Gtk3.Builder();
function add(parent, child, _) {
  if (!specialAdd(parent, child, _)) {
    parent.vfunc_add_child(dummyBuilder, child, getType(child));
  }
}
function specialRemove(_parent, _child) {
  return false;
}
function specialAdd(parent, child, _) {
  if (child instanceof Gtk3.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
    parent.set_adjustment(child);
    return true;
  }
  if (child instanceof Gtk3.Widget && parent instanceof Gtk3.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
    parent.add_named(child, child.name);
    return true;
  }
  if (child instanceof Gtk3.Popover && parent instanceof Gtk3.MenuButton) {
    parent.set_popover(child);
    return true;
  }
  if (child instanceof Gio2.MenuModel && (parent instanceof Gtk3.MenuButton || parent instanceof Gtk3.PopoverMenu)) {
    parent.set_menu_model(child);
    return true;
  }
  if (child instanceof Gio2.MenuItem && parent instanceof Gio2.Menu) {
  }
  if (child instanceof Gtk3.Window && parent instanceof Gtk3.Application) {
    parent.add_window(child);
    return true;
  }
  if (child instanceof Gtk3.TextBuffer && parent instanceof Gtk3.TextView) {
    parent.set_buffer(child);
    return true;
  }
  return false;
}
function remove(parent, child) {
  if (specialRemove(parent, child)) return;
  if ("set_child" in parent && typeof parent.set_child == "function") {
    return parent.set_child(null);
  }
  if ("remove" in parent && typeof parent.remove == "function") {
    return parent.remove(child);
  }
  throw Error(`cannot remove ${child} from ${parent}`);
}
var { addChild, intrinsicElements } = configue({
  setCss(object, css) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk3.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk3.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter(css.get());
      const dispose = css.subscribe(() => setter(css.get()));
      onCleanup(dispose);
    } else {
      setter(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  addChild(parent, child, index = -1) {
    if (!(child instanceof GObject5.Object)) {
      child = Gtk3.Label.new(String(child));
    }
    if (specialAdd(parent, child, index)) return;
    if (parent instanceof Fragment) {
      parent.addChild(child);
      return;
    }
    if (parent instanceof Gtk3.Buildable) {
      if (child instanceof Fragment) {
        for (const ch of child.children) {
          add(parent, ch, index);
        }
        child.connect("child-added", (_, ch, index2) => {
          if (!(ch instanceof GObject5.Object)) {
            console.error(TypeError(`cannot add ${ch} to ${parent}`));
            return;
          }
          addChild(parent, ch, index2);
        });
        child.connect("child-removed", (_, ch) => {
          if (!(ch instanceof GObject5.Object)) {
            console.error(TypeError(`cannot remove ${ch} from ${parent}`));
            return;
          }
          remove(parent, ch);
        });
        onCleanup(() => child.destroy());
        return;
      }
      add(parent, child, index);
      return;
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../usr/share/ags/js/src/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk4.Box,
  button: Gtk4.Button,
  centerbox: Gtk4.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk4.DrawingArea,
  entry: Gtk4.Entry,
  image: Gtk4.Image,
  label: Gtk4.Label,
  levelbar: Gtk4.LevelBar,
  menubutton: Gtk4.MenuButton,
  overlay: Gtk4.Overlay,
  popover: Gtk4.Popover,
  revealer: Gtk4.Revealer,
  scrolledwindow: Gtk4.ScrolledWindow,
  slider: Astal4.Slider,
  stack: Gtk4.Stack,
  switch: Gtk4.Switch,
  togglebutton: Gtk4.ToggleButton,
  window: Astal4.Window
});

// widget/timer/running_timer.tsx
var RunningTimer = class {
  constructor(secondsToCount, name = void 0) {
    this.name = void 0;
    this.startSeconds = 0;
    this.secondsLeft = createState(0);
    this.isPaused = createState(false);
    this.alarmSoundProcess = void 0;
    this.progressBarRef = void 0;
    this.name = name;
    this.startSeconds = secondsToCount;
    this.secondsLeft = createState(secondsToCount);
    timerVariables.timersData[1]((v) => v.updateRunningTimers(1));
    this.intervalReference = setInterval(async () => {
      if (!this.isPaused[0].get()) this.changeSecondsLeft(-1);
      if (this.getSecondsLeft() <= 0) {
        this.finishTimer();
      }
    }, 1e3);
  }
  isRunning() {
    return this.intervalReference !== void 0;
  }
  finishTimer() {
    this.intervalReference?.destroy();
    this.intervalReference = void 0;
    timerVariables.timersData[1]((v) => v.updateDoneTimers(1));
    this.alarmSoundProcess = SoundPlayer.playSound(
      configuration.timer.alarmSoundFilePath
    );
    const notificationText = this.name === void 0 ? configuration.getTexts().timer.endNonameNotificationTitle : Tools.formatString(
      configuration.getTexts().timer.endNamedNotificationTitle,
      this.name
    );
    NotificationSender.send(
      notificationText,
      void 0,
      "timer_end.svg" /* Timer */
    );
    if (this.progressBarRef !== void 0) {
      this.progressBarRef.cssClasses = ["timer-done"];
    }
    setTimeout(() => {
      if (this.alarmSoundProcess !== void 0) {
        this.alarmSoundProcess.kill();
        this.alarmSoundProcess = void 0;
      }
    }, configuration.timer.alarmSoundLengthInSeconds * 1e3);
  }
  getStartSeconds() {
    return this.startSeconds;
  }
  getSecondsLeft() {
    return this.secondsLeft[0].get();
  }
  getSecondsLeft2() {
    return this.secondsLeft;
  }
  setSecondsLeft(newTimeLeft) {
    this.secondsLeft[1](newTimeLeft);
  }
  changeSecondsLeft(timeChange) {
    if (timeChange === 0) return;
    this.secondsLeft[1]((v) => v + timeChange);
  }
  toggleTimerPause() {
    this.isPaused[1]((v) => !v);
  }
  createLabel(index) {
    const [secondsGetter, secondsSetter] = this.secondsLeft;
    const [pauseGetter, pauseSetter] = this.isPaused;
    const timerName = this.name ?? `#${index + 1}`;
    return /* @__PURE__ */ jsxs(
      "box",
      {
        orientation: Gtk2.Orientation.HORIZONTAL,
        hexpand: true,
        vexpand: true,
        marginTop: 10,
        children: [
          /* @__PURE__ */ jsx("box", { name: "Pause/Play button container", children: /* @__PURE__ */ jsx(With, { value: secondsGetter, children: (seconds) => seconds > 0 && /* @__PURE__ */ jsx(
            "button",
            {
              name: "Start saved timer btn",
              class: pauseGetter(
                (paused) => paused ? "timer-popover-start-button small-button" : "timer-popover-pause-timer-button small-button"
              ),
              label: pauseGetter(
                (paused) => paused ? icons.play : icons.pause
              ),
              tooltipText: pauseGetter(
                (paused) => paused ? configuration.getTexts().timer.statePaused : configuration.getTexts().timer.stateRunning
              ),
              vexpand: false,
              hexpand: false,
              widthRequest: 40,
              heightRequest: 20,
              marginEnd: 10,
              onClicked: () => {
                this.toggleTimerPause();
              }
            }
          ) }) }),
          /* @__PURE__ */ jsx(
            "box",
            {
              name: "Timer progress container",
              marginEnd: 10,
              widthRequest: 290,
              children: /* @__PURE__ */ jsxs("overlay", { vexpand: true, hexpand: true, children: [
                /* @__PURE__ */ jsx(
                  "levelbar",
                  {
                    vexpand: true,
                    hexpand: true,
                    cssClasses: ["running-timer-bar"],
                    orientation: Gtk2.Orientation.HORIZONTAL,
                    value: secondsGetter((seconds) => {
                      return 1 - seconds / this.startSeconds;
                    }),
                    $: (self) => {
                      this.progressBarRef = self;
                    }
                  }
                ),
                /* @__PURE__ */ jsxs("box", { vexpand: true, hexpand: true, $type: "overlay", children: [
                  /* @__PURE__ */ jsx(
                    "label",
                    {
                      class: "running-timer-label",
                      label: timerName,
                      widthChars: TIMER_CONSTANTS.NAME_LENGTH + TIMER_CONSTANTS.LABEL_SAFESPACE_CHARS,
                      xalign: 1,
                      marginEnd: 10
                    }
                  ),
                  /* @__PURE__ */ jsx(
                    "label",
                    {
                      xalign: 0,
                      widthChars: TIMER_CONSTANTS.TIME_LENGTH + TIMER_CONSTANTS.LABEL_SAFESPACE_CHARS + 8,
                      label: secondsGetter(
                        (seconds) => `${createTimeLeft(seconds)} - ${this.createPercentageDone(
                          seconds
                        )} \uF295`
                      )
                    }
                  )
                ] })
              ] })
            }
          ),
          /* @__PURE__ */ jsx("box", { name: "Remove running timer button container", children: /* @__PURE__ */ jsx(
            "button",
            {
              name: "Start saved timer btn",
              class: secondsGetter(
                (seconds) => seconds > 0 ? "timer-popover-remove-timer-button small-button" : "timer-popover-remove-done-timer-button small-button"
              ),
              label: secondsGetter(
                (seconds) => seconds > 0 ? icons.close : icons.alarmFinished
              ),
              vexpand: false,
              hexpand: false,
              widthRequest: 40,
              heightRequest: 20,
              onClicked: () => {
                this.removeTimer();
              }
            }
          ) })
        ]
      }
    );
  }
  createPercentageDone(secondsLeft) {
    const ratio = secondsLeft / this.startSeconds;
    return Math.floor(100 - ratio * 100);
  }
  removeTimer() {
    if (this.alarmSoundProcess !== void 0) {
      this.alarmSoundProcess.kill();
      this.alarmSoundProcess = void 0;
    }
    if (this.intervalReference !== void 0) {
      this.intervalReference?.destroy();
      this.intervalReference = void 0;
    }
    timerVariables.runningTimers[1]((v) => {
      const index = v.indexOf(this);
      const firstPart = v.slice(0, index);
      const secondPart = v.slice(index + 1);
      return firstPart.concat(secondPart);
    });
    timerVariables.timersData[1]((v) => v.updateRunningTimers(-1));
    if (this.secondsLeft[0].get() <= 0)
      timerVariables.timersData[1]((v) => v.updateDoneTimers(-1));
  }
};

// widget/timer/timer_utils.tsx
var TimerUtils = class {
  static async saveTimersToFile() {
    await writeFileAsync(
      configuration.timer.savedTimersFilePath,
      JSON.stringify(timerVariables.savedTimers[0].get(), void 0, "	")
    );
  }
  static async loadTimersFromFile() {
    const savedTimersJson = await readFileAsync(
      configuration.timer.savedTimersFilePath
    );
    try {
      const savedTimers = JSON.parse(
        savedTimersJson
      );
      timerVariables.savedTimers[1](
        savedTimers.map((t) => new SavedTimer(t.name, t.startSeconds))
      );
    } catch (error) {
      Communication.printError(
        "Cannot create saved timers => error: " + error,
        "TimerUtils"
      );
    }
  }
  static runTimer(timeInSeconds, name = void 0) {
    if (timeInSeconds <= 1) return;
    timerVariables.runningTimers[1]((v) => {
      if (v.length < configuration.timer.maxRunningTimers)
        return v.concat(new RunningTimer(timeInSeconds, name));
      return v;
    });
  }
};

// widget/timer/saved_timer.tsx
var SavedTimer = class {
  constructor(name, secondsToCount) {
    this.name = "";
    this.startSeconds = 0;
    this.name = name;
    this.startSeconds = secondsToCount;
  }
  createLabel() {
    return /* @__PURE__ */ jsx("box", { name: "Saved timer label", orientation: Gtk2.Orientation.HORIZONTAL, children: /* @__PURE__ */ jsxs("box", { cssClasses: ["saved-timer-container"], marginEnd: 8, children: [
      /* @__PURE__ */ jsx(
        "label",
        {
          label: `${this.name}`,
          widthChars: TIMER_CONSTANTS.NAME_LENGTH + TIMER_CONSTANTS.LABEL_SAFESPACE_CHARS,
          xalign: 1,
          marginEnd: 10
        }
      ),
      /* @__PURE__ */ jsx(
        "label",
        {
          label: `\u{F13AB} ${createTimeLeft(this.startSeconds)}`,
          widthChars: TIMER_CONSTANTS.TIME_LENGTH + TIMER_CONSTANTS.LABEL_SAFESPACE_CHARS,
          xalign: 0,
          hexpand: true
        }
      )
    ] }) });
  }
  runTimer() {
    TimerUtils.runTimer(this.startSeconds, this.name);
  }
};

// widget/timer/timer_digit.ts
var TimerDigits = class {
  constructor(defaultTimeSeconds = 0) {
    this.hour1 = 0;
    this.hour2 = 0;
    this.minute1 = 0;
    this.minute2 = 0;
    this.second1 = 0;
    this.second2 = 0;
    const hours = Math.floor(defaultTimeSeconds / 3600);
    const minutes = Math.floor(defaultTimeSeconds % 3600 / 60);
    const seconds = Math.floor(defaultTimeSeconds % 60);
    this.hour1 = Math.floor(hours / 10);
    this.hour2 = Math.floor(hours % 10);
    this.minute1 = Math.floor(minutes / 10);
    this.minute2 = Math.floor(minutes % 10);
    this.second1 = Math.floor(seconds / 10);
    this.second2 = Math.floor(seconds % 10);
  }
  updateTime(digit, scrollChange) {
    const change = 0.1 * Math.sign(scrollChange);
    switch (digit) {
      case "Hour1" /* Hour1 */:
        this.hour1 += change;
        break;
      case "Hour2" /* Hour2 */:
        this.hour2 += change;
        break;
      case "Minute1" /* Minute1 */:
        this.minute1 += change;
        break;
      case "Minute2" /* Minute2 */:
        this.minute2 += change;
        break;
      case "Second1" /* Second1 */:
        this.second1 += change;
        break;
      case "Second2" /* Second2 */:
        this.second2 += change;
        break;
      default:
        break;
    }
    this.second2 = this.limitValue(this.second2, 10);
    this.second1 = this.limitValue(this.second1, 6);
    this.minute2 = this.limitValue(this.minute2, 10);
    this.minute1 = this.limitValue(this.minute1, 6);
    this.hour2 = this.limitValue(this.hour2, 10);
    this.hour1 = this.limitValue(this.hour1, 10);
  }
  limitValue(value, max) {
    if (value >= max) {
      return 0;
    }
    if (value < 0) {
      return max - 0.1;
    }
    return value;
  }
  getDigit(digit) {
    switch (digit) {
      case "Hour1" /* Hour1 */:
        return `${Math.floor(this.hour1)}`;
      case "Hour2" /* Hour2 */:
        return `${Math.floor(this.hour2)}`;
      case "Minute1" /* Minute1 */:
        return `${Math.floor(this.minute1)}`;
      case "Minute2" /* Minute2 */:
        return `${Math.floor(this.minute2)}`;
      case "Second1" /* Second1 */:
        return `${Math.floor(this.second1)}`;
      case "Second2" /* Second2 */:
        return `${Math.floor(this.second2)}`;
      default:
        return `${Math.floor(0)}`;
    }
  }
  getAllSeconds() {
    let allSeconds = Math.floor(this.second1) * 10 + Math.floor(this.second2);
    allSeconds += (Math.floor(this.minute1) * 10 + Math.floor(this.minute2)) * 60;
    allSeconds += (Math.floor(this.hour1) * 10 + Math.floor(this.hour2)) * 3600;
    return Math.floor(allSeconds);
  }
};

// widget/timer/save_timer_window.tsx
var SaveTimerWindow = class _SaveTimerWindow {
  constructor() {
    this.timerName = "";
    this.timerSeconds = new TimerDigits();
    this.digitLabels = [];
    this.window = Gtk2.Window.new();
    this.window.resizable = false;
    this.window.defaultWidth = 400;
    this.window.defaultHeight = 200;
    this.window.widthRequest = 400;
    this.window.heightRequest = 200;
    this.window.title = "Create timer";
    this.window.child = this.createContent();
    this.window.cssClasses = ["create-save-timer-window"];
    const closeHandler = this.window.connect("close-request", () => {
      _SaveTimerWindow.instance = void 0;
      return false;
    });
    onCleanup(() => {
      this.window.disconnect(closeHandler);
    });
    this.window.present();
  }
  static {
    this.instance = void 0;
  }
  static create() {
    if (_SaveTimerWindow.instance === void 0) {
      _SaveTimerWindow.instance = new _SaveTimerWindow();
    } else {
    }
  }
  createContent() {
    const content = new Gtk2.Box({ orientation: Gtk2.Orientation.VERTICAL });
    const askLabel = new Gtk2.Label();
    askLabel.label = configuration.getTexts().timer.saveAskLabel;
    content.append(askLabel);
    const nameEntry = new Gtk2.Entry();
    nameEntry.name = "UserEntry";
    nameEntry.maxLength = 16;
    nameEntry.marginTop = 20;
    nameEntry.placeholderText = configuration.getTexts().timer.saveNamePlaceholder;
    const insertTextHandler = nameEntry.buffer.connect(
      "inserted-text",
      (buffer) => {
        this.timerName = buffer.get_text();
      }
    );
    const deleteTextHandler = nameEntry.buffer.connect(
      "deleted-text",
      (buffer) => {
        this.timerName = buffer.get_text();
      }
    );
    onCleanup(() => {
      nameEntry.buffer.disconnect(insertTextHandler);
      nameEntry.buffer.disconnect(deleteTextHandler);
    });
    content.append(nameEntry);
    const timeEntry = this.createTimeEntry();
    content.append(timeEntry);
    const buttonsBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const addButton = this.createAddButton();
    buttonsBox.append(addButton);
    const cancelButton = this.createCancelButton();
    buttonsBox.append(cancelButton);
    content.append(buttonsBox);
    return content;
  }
  createTimeEntry() {
    const timeEntryContainer = new Gtk2.Box({
      hexpand: true,
      marginTop: 40,
      marginBottom: 40
    });
    const overlay = new Gtk2.Overlay({
      hexpand: true,
      cssClasses: ["timer-popover-label-digit-container"]
    });
    const foregroundTimeEntryContainer = new Gtk2.Box({
      hexpand: true,
      name: "save-window-time-entry-foreground"
    });
    foregroundTimeEntryContainer.append(this.createTimeEntryForeground());
    const backgroundTimeEntryContainer = new Gtk2.Box({
      hexpand: true,
      name: "save-window-time-entry-background"
    });
    backgroundTimeEntryContainer.append(this.createTimeEntryBackground());
    overlay.add_overlay(foregroundTimeEntryContainer);
    overlay.set_child(backgroundTimeEntryContainer);
    timeEntryContainer.append(overlay);
    return timeEntryContainer;
  }
  createTimeEntryForeground() {
    const timeEntryBox = new Gtk2.Box({
      orientation: Gtk2.Orientation.HORIZONTAL,
      hexpand: true,
      halign: Gtk2.Align.CENTER
    });
    const hoursBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const hourLabel1 = this.createTimeEntryDigitLabel("Hour1" /* Hour1 */);
    const hourLabel2 = this.createTimeEntryDigitLabel("Hour2" /* Hour2 */);
    hoursBox.append(hourLabel1);
    hoursBox.append(hourLabel2);
    const minutesBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const minutesLabel1 = this.createTimeEntryDigitLabel("Minute1" /* Minute1 */);
    const minutesLabel2 = this.createTimeEntryDigitLabel("Minute2" /* Minute2 */);
    minutesBox.append(minutesLabel1);
    minutesBox.append(minutesLabel2);
    const secondsBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const secondsLabel1 = this.createTimeEntryDigitLabel("Second1" /* Second1 */);
    const secondsLabel2 = this.createTimeEntryDigitLabel("Second2" /* Second2 */);
    secondsBox.append(secondsLabel1);
    secondsBox.append(secondsLabel2);
    const separatorLabel = new Gtk2.Label({
      label: ":",
      cssClasses: ["timer-popover-label-digit"]
    });
    const separatorLabel2 = new Gtk2.Label({
      label: ":",
      cssClasses: ["timer-popover-label-digit"]
    });
    timeEntryBox.append(hoursBox);
    timeEntryBox.append(separatorLabel);
    timeEntryBox.append(minutesBox);
    timeEntryBox.append(separatorLabel2);
    timeEntryBox.append(secondsBox);
    return timeEntryBox;
  }
  createTimeEntryDigitLabel(digitIndex) {
    const digitLabel = new Gtk2.Label({
      name: digitIndex.toString(),
      label: "0",
      cssClasses: ["timer-popover-label-digit"]
    });
    const scrollController = new Gtk2.EventControllerScroll({
      name: "scrollController",
      flags: Gtk2.EventControllerScrollFlags.VERTICAL
    });
    const scrollHandler = scrollController.connect(
      "scroll",
      (controller, dx, dy) => {
        this.timerSeconds.updateTime(digitIndex, -dy);
        this.digitLabels.forEach((label) => {
          label.label = this.timerSeconds.getDigit(
            label.name
          );
        });
      }
    );
    onCleanup(() => {
      scrollController.disconnect(scrollHandler);
    });
    digitLabel.add_controller(scrollController);
    this.digitLabels.push(digitLabel);
    return digitLabel;
  }
  createTimeEntryBackground() {
    const timeEntryBox = new Gtk2.Box({
      orientation: Gtk2.Orientation.HORIZONTAL,
      hexpand: true,
      halign: Gtk2.Align.CENTER
    });
    const hoursBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const hourLabel1 = new Gtk2.Label({
      label: "0",
      cssClasses: ["timer-popover-label-digit-background"]
    });
    const hourLabel2 = new Gtk2.Label({
      label: "0",
      cssClasses: ["timer-popover-label-digit-background"]
    });
    hoursBox.append(hourLabel1);
    hoursBox.append(hourLabel2);
    const minutesBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const minutesLabel1 = new Gtk2.Label({
      label: "0",
      cssClasses: ["timer-popover-label-digit-background"]
    });
    const minutesLabel2 = new Gtk2.Label({
      label: "0",
      cssClasses: ["timer-popover-label-digit-background"]
    });
    minutesBox.append(minutesLabel1);
    minutesBox.append(minutesLabel2);
    const secondsBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const secondsLabel1 = new Gtk2.Label({
      label: "0",
      cssClasses: ["timer-popover-label-digit-background"]
    });
    const secondsLabel2 = new Gtk2.Label({
      label: "0",
      cssClasses: ["timer-popover-label-digit-background"]
    });
    secondsBox.append(secondsLabel1);
    secondsBox.append(secondsLabel2);
    const separatorLabel = new Gtk2.Label({
      label: ":",
      cssClasses: ["timer-popover-label-digit"]
    });
    const separatorLabel2 = new Gtk2.Label({
      label: ":",
      cssClasses: ["timer-popover-label-digit"]
    });
    timeEntryBox.append(hoursBox);
    timeEntryBox.append(separatorLabel);
    timeEntryBox.append(minutesBox);
    timeEntryBox.append(separatorLabel2);
    timeEntryBox.append(secondsBox);
    return timeEntryBox;
  }
  createAddButton() {
    const button = new Gtk2.Button();
    button.label = icons.plus + " " + configuration.getTexts().general.add;
    button.hexpand = true;
    button.marginEnd = 12;
    button.cssClasses = ["timer-popover-start-button"];
    button.connect("clicked", async () => {
      const allSeconds = this.timerSeconds.getAllSeconds();
      if (this.timerName === void 0 || this.timerName.length === 0 || allSeconds === 0) {
        return;
      }
      timerVariables.savedTimers[1]((v) => {
        return v.concat(new SavedTimer(this.timerName, allSeconds));
      });
      await TimerUtils.saveTimersToFile();
      this.window.close();
    });
    return button;
  }
  createCancelButton() {
    const button = new Gtk2.Button();
    button.label = icons.back + " " + configuration.getTexts().general.cancel;
    button.hexpand = true;
    button.cssClasses = ["timer-popover-remove-timer-button"];
    const clickHandler = button.connect("clicked", () => {
      this.window.close();
    });
    onCleanup(() => {
      button.disconnect(clickHandler);
    });
    return button;
  }
};

// widget/timer/timer_popover.tsx
var inEditSavedTimersMode = createState(false);
var timerSeconds = new TimerDigits();
var digitLabels = [];
function TimerPopover() {
  timerSeconds = new TimerDigits(configuration.timer.defaultTimerTimeSeconds);
  return /* @__PURE__ */ jsx(
    "popover",
    {
      autohide: true,
      hasArrow: false,
      class: "widget-popover",
      onClosed: () => {
        inEditSavedTimersMode[1](false);
      },
      hexpand: false,
      widthRequest: 400,
      marginEnd: 60,
      marginBottom: 30,
      children: /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, children: [
        createRunningTimers(),
        createMainInterface(),
        createSavedTimers()
      ] })
    }
  );
  function createTimeEntry() {
    const timeEntryBox = new Gtk2.Box({
      orientation: Gtk2.Orientation.HORIZONTAL,
      hexpand: true,
      halign: Gtk2.Align.CENTER
    });
    const hoursBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const hourLabel1 = createTimeEntryDigitLabel("Hour1" /* Hour1 */);
    const hourLabel2 = createTimeEntryDigitLabel("Hour2" /* Hour2 */);
    hoursBox.append(hourLabel1);
    hoursBox.append(hourLabel2);
    const minutesBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const minutesLabel1 = createTimeEntryDigitLabel("Minute1" /* Minute1 */);
    const minutesLabel2 = createTimeEntryDigitLabel("Minute2" /* Minute2 */);
    minutesBox.append(minutesLabel1);
    minutesBox.append(minutesLabel2);
    const secondsBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const secondsLabel1 = createTimeEntryDigitLabel("Second1" /* Second1 */);
    const secondsLabel2 = createTimeEntryDigitLabel("Second2" /* Second2 */);
    secondsBox.append(secondsLabel1);
    secondsBox.append(secondsLabel2);
    const separatorLabel = new Gtk2.Label({
      label: ":",
      cssClasses: ["timer-popover-label-digit"]
    });
    const separatorLabel2 = new Gtk2.Label({
      label: ":",
      cssClasses: ["timer-popover-label-digit"]
    });
    timeEntryBox.append(hoursBox);
    timeEntryBox.append(separatorLabel);
    timeEntryBox.append(minutesBox);
    timeEntryBox.append(separatorLabel2);
    timeEntryBox.append(secondsBox);
    return timeEntryBox;
  }
  function createTimeEntryDigitLabel(digitIndex) {
    const digitLabel = new Gtk2.Label({
      name: digitIndex.toString(),
      label: timerSeconds.getDigit(digitIndex),
      cssClasses: ["timer-popover-label-digit"]
    });
    const scrollController = new Gtk2.EventControllerScroll({
      name: "scrollController",
      flags: Gtk2.EventControllerScrollFlags.VERTICAL
    });
    const scrollHandler = scrollController.connect(
      "scroll",
      (controller, dx, dy) => {
        timerSeconds.updateTime(digitIndex, -dy);
        digitLabels.forEach((label) => {
          label.label = timerSeconds.getDigit(
            label.name
          );
        });
      }
    );
    onCleanup(() => {
      scrollController.disconnect(scrollHandler);
    });
    digitLabel.add_controller(scrollController);
    digitLabels.push(digitLabel);
    return digitLabel;
  }
  function createTimeEntryBackground() {
    const timeEntryBox = new Gtk2.Box({
      orientation: Gtk2.Orientation.HORIZONTAL,
      hexpand: true,
      halign: Gtk2.Align.CENTER
    });
    const hoursBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const hourLabel1 = new Gtk2.Label({
      label: "0",
      cssClasses: ["timer-popover-label-digit-background"]
    });
    const hourLabel2 = new Gtk2.Label({
      label: "0",
      cssClasses: ["timer-popover-label-digit-background"]
    });
    hoursBox.append(hourLabel1);
    hoursBox.append(hourLabel2);
    const minutesBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const minutesLabel1 = new Gtk2.Label({
      label: "0",
      cssClasses: ["timer-popover-label-digit-background"]
    });
    const minutesLabel2 = new Gtk2.Label({
      label: "0",
      cssClasses: ["timer-popover-label-digit-background"]
    });
    minutesBox.append(minutesLabel1);
    minutesBox.append(minutesLabel2);
    const secondsBox = new Gtk2.Box({ orientation: Gtk2.Orientation.HORIZONTAL });
    const secondsLabel1 = new Gtk2.Label({
      label: "0",
      cssClasses: ["timer-popover-label-digit-background"]
    });
    const secondsLabel2 = new Gtk2.Label({
      label: "0",
      cssClasses: ["timer-popover-label-digit-background"]
    });
    secondsBox.append(secondsLabel1);
    secondsBox.append(secondsLabel2);
    const separatorLabel = new Gtk2.Label({
      label: ":",
      cssClasses: ["timer-popover-label-digit"]
    });
    const separatorLabel2 = new Gtk2.Label({
      label: ":",
      cssClasses: ["timer-popover-label-digit"]
    });
    timeEntryBox.append(hoursBox);
    timeEntryBox.append(separatorLabel);
    timeEntryBox.append(minutesBox);
    timeEntryBox.append(separatorLabel2);
    timeEntryBox.append(secondsBox);
    return timeEntryBox;
  }
  function createSavedTimers() {
    return /* @__PURE__ */ jsxs(
      "box",
      {
        orientation: Gtk2.Orientation.VERTICAL,
        cssClasses: ["timer-popover-saved-timers-container"],
        children: [
          /* @__PURE__ */ jsx("box", { cssClasses: [""], children: /* @__PURE__ */ jsx(With, { value: timerVariables.savedTimers[0], children: (savedTimers) => savedTimers.length > 0 && /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.HORIZONTAL, children: [
            /* @__PURE__ */ jsx(
              "label",
              {
                hexpand: true,
                cssClasses: ["container-label"],
                label: configuration.texts[0]((t) => `${t.timer.saved}`)
              }
            ),
            /* @__PURE__ */ jsx(
              "button",
              {
                name: "Edit saved timers btn",
                class: "timer-popover-edit-timers-button small-button",
                label: inEditSavedTimersMode[0](
                  (v) => v ? icons.back : icons.edit
                ),
                vexpand: false,
                hexpand: false,
                widthRequest: 40,
                heightRequest: 20,
                onClicked: () => {
                  inEditSavedTimersMode[1]((v) => !v);
                },
                tooltipText: inEditSavedTimersMode[0](
                  (v) => v ? configuration.texts[0](
                    (t) => t.timer.exitEditMode
                  ).get() : configuration.texts[0](
                    (t) => t.timer.enterEditMode
                  ).get()
                )
              }
            )
          ] }) }) }),
          /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, children: /* @__PURE__ */ jsx(For, { each: timerVariables.savedTimers[0], children: (item, index) => /* @__PURE__ */ jsxs(
            "box",
            {
              orientation: Gtk2.Orientation.HORIZONTAL,
              cssClasses: ["timer-popover-saved-timer"],
              marginTop: 10,
              children: [
                createMoveSaveTimerButtonBox(item),
                item.createLabel(),
                createSaveTimerActionButton(item)
              ]
            }
          ) }) }),
          /* @__PURE__ */ jsx(
            "button",
            {
              name: "Create saved timers btn",
              class: "timer-popover-add-timer-button",
              label: configuration.texts[0]((t) => `${icons.plus} ${t.timer.add}`),
              marginTop: 10,
              hexpand: true,
              onClicked: () => {
                SaveTimerWindow.create();
              }
            }
          )
        ]
      }
    );
  }
  function createMoveSaveTimerButtonBox(savedTimer) {
    return /* @__PURE__ */ jsx("box", { name: "Move timer btn container outer", children: /* @__PURE__ */ jsx(With, { value: inEditSavedTimersMode[0], children: (canEdit) => canEdit && /* @__PURE__ */ jsx("box", { name: "Move timer btn container inner", children: /* @__PURE__ */ jsx(With, { value: timerVariables.savedTimers[0], children: (timers) => timers.length > 1 && /* @__PURE__ */ jsxs(
      "box",
      {
        name: "Move timer btn container inner inner",
        orientation: Gtk2.Orientation.VERTICAL,
        hexpand: false,
        vexpand: false,
        widthRequest: 30,
        heightRequest: 20,
        children: [
          timers.indexOf(savedTimer) > 0 && /* @__PURE__ */ jsx(
            "button",
            {
              name: "move up button",
              label: icons.arrowUp,
              widthRequest: 30,
              heightRequest: 10,
              valign: Gtk2.Align.FILL,
              vexpand: true,
              cssClasses: [
                "timer-popover-move-timer-button",
                "small-button"
              ],
              onClicked: () => {
                reorderSavedTimers(
                  0 /* UP */,
                  savedTimer
                );
              }
            }
          ),
          timers.indexOf(savedTimer) < timers.length - 1 && /* @__PURE__ */ jsx(
            "button",
            {
              name: "move down button",
              label: icons.arrowDown,
              widthRequest: 30,
              heightRequest: 10,
              valign: Gtk2.Align.FILL,
              vexpand: true,
              cssClasses: [
                "timer-popover-move-timer-button",
                "small-button"
              ],
              onClicked: () => {
                reorderSavedTimers(
                  1 /* DOWN */,
                  savedTimer
                );
              }
            }
          )
        ]
      }
    ) }) }) }) });
  }
  function reorderSavedTimers(direction, savedTimer) {
    timerVariables.savedTimers[1]((timers) => {
      const index = timers.indexOf(savedTimer);
      const firstPartIndex = index - (direction == 0 /* UP */ ? 1 : 0);
      const secondPartIndex = index + (direction == 0 /* UP */ ? 0 : 1);
      let newOrder = [];
      const firstPart = timers.slice(0, firstPartIndex);
      const timer1 = timers[firstPartIndex];
      const timer2 = timers[secondPartIndex];
      const secondPart = timers.slice(secondPartIndex + 1);
      newOrder.push(...firstPart);
      newOrder.push(timer2);
      newOrder.push(timer1);
      newOrder.push(...secondPart);
      return newOrder;
    });
    TimerUtils.saveTimersToFile();
  }
  function createSaveTimerActionButton(savedTimer) {
    return /* @__PURE__ */ jsx("box", { name: "Saved timer action btn container", children: /* @__PURE__ */ jsx(With, { value: inEditSavedTimersMode[0], children: (canEdit) => canEdit ? /* @__PURE__ */ jsx(
      "button",
      {
        name: "Delete saved timer btn",
        class: "timer-popover-remove-timer-button small-button",
        label: icons.close,
        vexpand: false,
        hexpand: false,
        widthRequest: 40,
        heightRequest: 20,
        onClicked: async () => {
          await removeTimer(savedTimer);
        }
      }
    ) : /* @__PURE__ */ jsx(
      "button",
      {
        name: "Start saved timer btn",
        class: "timer-popover-start-button small-button",
        label: icons.play,
        vexpand: false,
        hexpand: false,
        widthRequest: 40,
        heightRequest: 20,
        onClicked: () => {
          savedTimer.runTimer();
        }
      }
    ) }) });
  }
  async function removeTimer(savedTimer) {
    timerVariables.savedTimers[1]((v) => {
      const index = v.indexOf(savedTimer);
      const firstPart = v.slice(0, index);
      const secondPart = v.slice(index + 1);
      return firstPart.concat(secondPart);
    });
    await TimerUtils.saveTimersToFile();
  }
  function createRunningTimers() {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: timerVariables.timersData[0], children: (td) => td.runningTimers > 0 && /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, marginBottom: 30, children: [
      /* @__PURE__ */ jsx(
        "label",
        {
          cssClasses: ["container-label"],
          label: configuration.texts[0]((t) => `${t.timer.running}`)
        }
      ),
      /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, vexpand: true, children: /* @__PURE__ */ jsx(For, { each: timerVariables.runningTimers[0], children: (item, index) => index((i) => item.createLabel(i)).get() }) })
    ] }) }) });
  }
  function createMainInterface() {
    return /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, marginBottom: 30, children: [
      /* @__PURE__ */ jsx("box", { hexpand: true, children: /* @__PURE__ */ jsxs("overlay", { cssClasses: ["timer-popover-label-digit-container"], children: [
        /* @__PURE__ */ jsx("box", { hexpand: true, $type: "overlay", children: createTimeEntry() }),
        /* @__PURE__ */ jsx("box", { hexpand: true, children: createTimeEntryBackground() })
      ] }) }),
      /* @__PURE__ */ jsx(
        "button",
        {
          class: "timer-popover-start-button",
          onClicked: () => {
            TimerUtils.runTimer(timerSeconds.getAllSeconds());
          },
          hexpand: true,
          children: /* @__PURE__ */ jsx(
            "label",
            {
              label: configuration.texts[0](
                (t) => `${icons.play} ${t.timer.run}`
              )
            }
          )
        }
      )
    ] });
  }
}

// widget/timer/timer.tsx
function Timer() {
  return /* @__PURE__ */ jsxs("menubutton", { children: [
    /* @__PURE__ */ jsx(With, { value: timerVariables.timersData[0], children: (td) => /* @__PURE__ */ jsx("box", { cssClasses: ["timer-button"], overflow: Gtk2.Overflow.HIDDEN, children: createLabel(td) }) }),
    /* @__PURE__ */ jsx(TimerPopover, {})
  ] });
  function createLabel(timersData) {
    if (timersData.runningTimers === 0)
      return /* @__PURE__ */ jsx(
        "label",
        {
          class: "timer-button-free bar-button-label",
          label: icons.alarmClock
        }
      );
    if (timersData.doneTimers === 0)
      return /* @__PURE__ */ jsx(
        "label",
        {
          class: "timer-button-running bar-button-label",
          label: `${icons.hourglass} ${timersData.runningTimers}`
        }
      );
    if (timersData.getUndoneCount() === 0)
      return /* @__PURE__ */ jsx(
        "label",
        {
          class: "timer-button-done bar-button-label",
          label: `${icons.alarmOn} ${timersData.doneTimers}`
        }
      );
    return /* @__PURE__ */ jsxs("box", { children: [
      /* @__PURE__ */ jsx(
        "label",
        {
          class: "timer-button-running-as-left bar-button-label",
          label: `${icons.hourglass} ${timersData.getUndoneCount()}`
        }
      ),
      /* @__PURE__ */ jsx(
        "label",
        {
          class: "timer-button-done-as-right bar-button-label",
          label: `${icons.alarmOn} ${timersData.doneTimers}`
        }
      )
    ] });
  }
}

// widget/network_status/network_status.tsx
import Network3 from "gi://AstalNetwork";

// widget/network_status/network_status_popover.tsx
import Network2 from "gi://AstalNetwork";

// widget/network_status/current_connection_status.tsx
import Network from "gi://AstalNetwork";

// widget/network_status/internet_speed.ts
var InternetSpeed = class _InternetSpeed {
  constructor() {
    this.bytes = 0;
    this.bytesHistory = [];
    this.dataPerSecond = 0;
    this.unit = "B/s";
  }
  static {
    this.MaxHistory = 8;
  }
  getSpeed() {
    const data = Math.round((this.dataPerSecond + Number.EPSILON) * 100) / 100;
    return `${data} ${this.unit}`;
  }
  update(newBytes) {
    if (this.bytes > 0) {
      this.bytesHistory.push(newBytes - this.bytes);
      if (this.bytesHistory.length > _InternetSpeed.MaxHistory)
        this.bytesHistory.shift();
      let sum = 0;
      this.bytesHistory.forEach((bytesData) => {
        sum += bytesData;
      });
      const avg = sum / this.bytesHistory.length;
      this.computeSpeedAndUnit(avg);
    }
    const updated = new _InternetSpeed();
    updated.bytes = newBytes;
    updated.bytesHistory = this.bytesHistory;
    updated.dataPerSecond = this.dataPerSecond;
    updated.unit = this.unit;
    return updated;
  }
  computeSpeedAndUnit(data, unitIndex = 0) {
    if (unitIndex < 0) unitIndex = 0;
    const speedUnits = ["B/s", "kB/s", "MB/s", "GB/s"];
    if (data < 1e3 || unitIndex === speedUnits.length - 1) {
      this.unit = speedUnits[unitIndex];
      this.dataPerSecond = data;
      return;
    }
    data /= 1e3;
    unitIndex++;
    this.computeSpeedAndUnit(data, unitIndex);
  }
};

// widget/network_status/current_connection_status.tsx
function CurrentConnectionStatus({ network }) {
  const primaryConnectionType = createBinding(network, "primary");
  const downloadSpeed = createState(new InternetSpeed());
  const uploadSpeed = createState(new InternetSpeed());
  interval(1e3, updateConnectionStats);
  return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: primaryConnectionType, children: (primary) => {
    switch (primary) {
      case Network.Primary.WIFI:
        return createCurrentWifi(network);
      case Network.Primary.WIRED:
        return createCurrentWired(network);
      default:
        return createNoConnection();
    }
  } }) });
  function createCurrentWifi(network2) {
    return /* @__PURE__ */ jsx("box", { cssClasses: ["current-connection-container"], hexpand: true, vexpand: true, children: /* @__PURE__ */ jsxs("box", { cssClasses: ["current-connection-data-container"], hexpand: true, vexpand: true, children: [
      /* @__PURE__ */ jsx(
        "label",
        {
          cssClasses: ["current-connection-icon"],
          label: icons.wifiConnectionMax,
          marginEnd: 20
        }
      ),
      /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, hexpand: true, vexpand: true, children: [
        /* @__PURE__ */ jsx("box", { valign: Gtk2.Align.START, children: /* @__PURE__ */ jsx(With, { value: createBinding(network2.wifi, "ssid"), children: (ssid) => {
          return /* @__PURE__ */ jsx(
            "label",
            {
              valign: Gtk2.Align.START,
              xalign: 0,
              hexpand: true,
              cssClasses: ["current-network-label"],
              label: ssid
            }
          );
        } }) }),
        createDownloadSpeed(),
        createUploadSpeed(),
        /* @__PURE__ */ jsx("box", { hexpand: true, vexpand: true, heightRequest: 20, css: "padding: 2px 0px;", children: /* @__PURE__ */ jsx(With, { value: createBinding(network2.wifi, "strength"), children: (strength) => {
          return /* @__PURE__ */ jsxs(
            "overlay",
            {
              hexpand: true,
              vexpand: true,
              name: "strength levelbar container",
              children: [
                /* @__PURE__ */ jsx(
                  "levelbar",
                  {
                    hexpand: true,
                    vexpand: true,
                    cssClasses: ["network-strength-bar"],
                    orientation: Gtk2.Orientation.HORIZONTAL,
                    value: strength / 100
                  }
                ),
                /* @__PURE__ */ jsx("box", { hexpand: true, vexpand: true, $type: "overlay", children: /* @__PURE__ */ jsx(
                  "label",
                  {
                    css: "font-size: 14px;",
                    hexpand: true,
                    vexpand: true,
                    valign: Gtk2.Align.CENTER,
                    halign: Gtk2.Align.CENTER,
                    label: `${strength} %`
                  }
                ) })
              ]
            }
          );
        } }) })
      ] })
    ] }) });
  }
  function createCurrentWired(network2) {
    return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: createBinding(network2, "wired"), children: (wired) => {
      return /* @__PURE__ */ jsxs("box", { cssClasses: ["current-connection-data-container"], hexpand: true, children: [
        /* @__PURE__ */ jsx(
          "label",
          {
            cssClasses: ["current-connection-icon"],
            label: icons.wiredConnection,
            marginEnd: 20
          }
        ),
        /* @__PURE__ */ jsxs("box", { hexpand: true, orientation: Gtk2.Orientation.VERTICAL, children: [
          /* @__PURE__ */ jsx(
            "label",
            {
              valign: Gtk2.Align.START,
              xalign: 0,
              hexpand: true,
              cssClasses: ["current-network-label"],
              label: wired.device.activeConnection.id
            }
          ),
          createDownloadSpeed(),
          createUploadSpeed()
        ] })
      ] });
    } }) });
  }
  function createNoConnection() {
    return /* @__PURE__ */ jsx("box", { cssClasses: ["current-connection-container"], hexpand: true, vexpand: true, children: /* @__PURE__ */ jsxs("box", { cssClasses: ["current-connection-data-container"], hexpand: true, vexpand: true, children: [
      /* @__PURE__ */ jsx(
        "label",
        {
          cssClasses: ["current-connection-icon"],
          label: icons.noConnection,
          marginEnd: 20
        }
      ),
      /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, hexpand: true, vexpand: true, children: /* @__PURE__ */ jsx("box", { valign: Gtk2.Align.CENTER, children: /* @__PURE__ */ jsx(
        "label",
        {
          valign: Gtk2.Align.CENTER,
          xalign: 0.5,
          yalign: 0.5,
          hexpand: true,
          vexpand: true,
          cssClasses: ["current-network-label"],
          label: configuration.getTexts().network.noCurrentConnection
        }
      ) }) })
    ] }) });
  }
  function createDownloadSpeed() {
    return /* @__PURE__ */ jsx("box", { tooltipText: configuration.getTexts().network.downloadSpeed, children: /* @__PURE__ */ jsx(With, { value: downloadSpeed[0], children: (speed) => {
      return /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.HORIZONTAL, children: [
        /* @__PURE__ */ jsx(
          "label",
          {
            xalign: 0,
            marginEnd: 5,
            cssClasses: ["label-icon-no-padding"],
            label: icons.download
          }
        ),
        /* @__PURE__ */ jsx(
          "label",
          {
            xalign: 1,
            yalign: 0.75,
            widthChars: 11,
            cssClasses: ["label-text"],
            label: speed.getSpeed()
          }
        )
      ] });
    } }) });
  }
  function createUploadSpeed() {
    return /* @__PURE__ */ jsx("box", { tooltipText: configuration.getTexts().network.uploadSpeed, children: /* @__PURE__ */ jsx(With, { value: uploadSpeed[0], children: (speed) => {
      return /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.HORIZONTAL, children: [
        /* @__PURE__ */ jsx(
          "label",
          {
            xalign: 0,
            marginEnd: 5,
            cssClasses: ["label-icon-no-padding"],
            label: icons.upload
          }
        ),
        /* @__PURE__ */ jsx(
          "label",
          {
            xalign: 1,
            yalign: 0.75,
            cssClasses: ["label-text"],
            widthChars: 11,
            label: speed.getSpeed()
          }
        )
      ] });
    } }) });
  }
  function updateConnectionStats() {
    if (network.client == void 0 || network.client.primaryConnection == void 0) {
      return;
    }
    let connectionInterface = "";
    for (let i = 0; i < network.client.primaryConnection.devices.length; i++) {
      const device = network.client.primaryConnection.devices[i];
      if (device.state === Network.DeviceState.ACTIVATED) {
        connectionInterface = device.interface;
        break;
      }
    }
    if (connectionInterface.length === 0) return;
    const netdevFilepath = "/proc/net/dev";
    const content = readFile(netdevFilepath);
    if (content === void 0 || content.length === 0) return;
    const lines = content.split("\n");
    let interfaceLine = "";
    for (let i = 0; i < lines.length; i++) {
      const line = lines[i].trimStart();
      if (line.startsWith(connectionInterface)) {
        interfaceLine = line;
        break;
      }
    }
    const elements = interfaceLine.split(":");
    if (elements.length !== 2) return;
    const stats = elements[1].split(" ").filter((t) => t.length > 0);
    if (stats.length <= 8) return;
    const downloadBytes = parseInt(stats[0], 10);
    const uploadBytes = parseInt(stats[8], 10);
    downloadSpeed[1]((v) => v.update(downloadBytes));
    uploadSpeed[1]((v) => v.update(uploadBytes));
  }
}

// widget/network_status/network_status_popover.tsx
function NetworkStatusPopover({ network }) {
  let scanWifiInterval;
  const wifi = createBinding(network, "wifi");
  const primary = createBinding(network, "primary");
  const useWifi = createComputed(
    [wifi, primary],
    (a, b) => {
      if (a == void 0 || a == null) return false;
      if (b !== Network2.Primary.WIFI) return false;
      return true;
    }
  );
  return /* @__PURE__ */ jsx(
    "popover",
    {
      autohide: false,
      hasArrow: false,
      class: "widget-popover",
      widthRequest: 500,
      marginEnd: 60,
      marginBottom: 30,
      onShow: () => {
        scanWifiInterval = interval(5e3, () => {
          const wifiValue = wifi.get();
          if (wifiValue !== void 0 && wifiValue.enabled) network.wifi.scan();
        });
      },
      onClosed: () => {
        if (scanWifiInterval !== void 0) {
          scanWifiInterval.cancel();
          scanWifiInterval = void 0;
        }
      },
      children: /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, children: [
        /* @__PURE__ */ jsx("box", { children: CurrentConnectionStatus({ network }) }),
        /* @__PURE__ */ jsx("box", { hexpand: true, halign: Gtk2.Align.CENTER, children: createWifiSwitch() }),
        /* @__PURE__ */ jsx("box", { visible: useWifi, marginTop: 10, children: /* @__PURE__ */ jsx(With, { value: wifi, children: (wifi2) => {
          return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: createBinding(wifi2, "state"), children: (state) => {
            if (isWifiOk(state)) {
              return accessPointsList();
            } else {
              return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(
                "label",
                {
                  label: configuration.getTexts().network.wifiUnavailable
                }
              ) });
            }
          } }) });
        } }) })
      ] })
    }
  );
  function createWifiSwitch() {
    const useWifi2 = createComputed(
      [wifi, primary],
      (a, b) => {
        if (a == void 0 || a == null) return false;
        if (b === Network2.Primary.WIRED) return false;
        return true;
      }
    );
    return /* @__PURE__ */ jsxs(
      "box",
      {
        visible: useWifi2,
        orientation: Gtk2.Orientation.HORIZONTAL,
        halign: Gtk2.Align.CENTER,
        marginTop: 20,
        children: [
          /* @__PURE__ */ jsx("label", { label: "Wifi " }),
          /* @__PURE__ */ jsx(
            "switch",
            {
              cssClasses: ["network-wifi-switch"],
              active: wifi((w) => w.enabled),
              onNotifyActive: (self) => {
                network.wifi.set_enabled(self.state);
              }
            }
          )
        ]
      }
    );
  }
  function isWifiOk(state) {
    return state !== null && state !== void 0 && state !== Network2.DeviceState.UNKNOWN && state !== Network2.DeviceState.UNAVAILABLE && state !== Network2.DeviceState.UNMANAGED;
  }
  function accessPointsList() {
    const savedConnections = getSavedConnections();
    const filterAccessPoints = (arr) => {
      return arr.filter((ap) => !!ap.ssid && ap !== network.wifi.activeAccessPoint).sort((a, b) => b.strength - a.strength);
    };
    const wifiAvailableNetworks = createBinding(
      network.wifi,
      "accessPoints"
    )(filterAccessPoints);
    return /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, children: [
      /* @__PURE__ */ jsx(
        "label",
        {
          hexpand: true,
          xalign: 0.5,
          cssClasses: ["container-label"],
          label: configuration.texts[0](
            (t) => `${t.network.availableNetworksLabel}`
          )
        }
      ),
      /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, marginTop: 10, children: /* @__PURE__ */ jsx(With, { value: wifiAvailableNetworks, children: (aps) => aps.length > 0 && /* @__PURE__ */ jsx("scrolledwindow", { heightRequest: 200, children: /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, marginEnd: 6, children: /* @__PURE__ */ jsx(For, { each: wifiAvailableNetworks(filterAccessPoints), children: (ap) => createAccessPointLabel(ap, savedConnections) }) }) }) || /* @__PURE__ */ jsxs("box", { halign: Gtk2.Align.CENTER, valign: Gtk2.Align.CENTER, children: [
        /* @__PURE__ */ jsx(
          "label",
          {
            cssClasses: ["label-text"],
            label: configuration.texts[0](
              (t) => `${t.network.searchNetworks}`
            ),
            marginEnd: 6
          }
        ),
        /* @__PURE__ */ jsx(
          "label",
          {
            cssClasses: ["label-icon"],
            label: icons.searchNetworks
          }
        )
      ] }) }) })
    ] });
  }
  function getSavedConnections() {
    const connections = [];
    network.client.connections.forEach((connection) => {
      if (connection != void 0) {
        let connectionName = "";
        const wirelessSetting = connection.get_setting_wireless();
        if (wirelessSetting != void 0) {
          const ssidByteArray = wirelessSetting.get_ssid();
          const ssidArray = ssidByteArray.toArray();
          connectionName = new TextDecoder("utf-8").decode(
            new Uint8Array(ssidArray)
          );
        }
        const connectionSetting = connection.get_setting_connection();
        if (connectionName !== "" && connectionSetting && connectionSetting.timestamp > 0) {
          connections.push(connectionName);
        }
      }
    });
    return connections;
  }
  function createAccessPointLabel(ap, savedConnections) {
    const signalStrengthThreshold = Math.floor(ap.strength / 25);
    let strengthIcon = icons.signalStrength0;
    switch (signalStrengthThreshold) {
      case 0:
        strengthIcon = icons.signalStrength0;
        break;
      case 1:
        strengthIcon = icons.signalStrength1;
        break;
      case 2:
        strengthIcon = icons.signalStrength2;
        break;
      case 3:
      case 4:
        strengthIcon = icons.signalStrength3;
        break;
      default:
        strengthIcon = icons.signalStrength0;
        break;
    }
    const passwordIcon = ap.requiresPassword ? icons.lock : icons.lockOpen;
    const passwordIconColor = "access-point-label-icon-" + (passwordIcon === icons.lock ? "bad" : "good");
    const speedIcon = ap.frequency < 4e3 ? icons.networkSpeedSlow : icons.networkSpeedFast;
    const speedIconColor = "access-point-label-icon-" + (speedIcon === icons.networkSpeedSlow ? "bad" : "good");
    const savedIcon = savedConnections.includes(ap.ssid) ? icons.save : icons.unknownNetwork;
    const savedIconColor = "access-point-label-icon-" + (savedIcon === icons.unknownNetwork ? "bad" : "good");
    return /* @__PURE__ */ jsxs(
      "box",
      {
        vexpand: false,
        cssClasses: ["access-point-container"],
        tooltipText: `${ap.ssid} ${ap.strength}/100`,
        children: [
          /* @__PURE__ */ jsxs("box", { cssClasses: ["access-point-label-container"], marginEnd: 10, children: [
            /* @__PURE__ */ jsx(
              "label",
              {
                xalign: 0,
                marginEnd: 6,
                cssClasses: ["label-icon"],
                label: `${strengthIcon}`
              }
            ),
            /* @__PURE__ */ jsx(
              "label",
              {
                xalign: 0,
                yalign: 0.6,
                hexpand: true,
                marginEnd: 6,
                cssClasses: ["label-text"],
                label: `${ap.ssid}`
              }
            ),
            /* @__PURE__ */ jsx(
              "label",
              {
                xalign: 0,
                marginEnd: 6,
                cssClasses: ["label-icon", speedIconColor],
                label: `${speedIcon}`
              }
            ),
            /* @__PURE__ */ jsx(
              "label",
              {
                xalign: 0,
                marginEnd: 6,
                cssClasses: ["label-icon", savedIconColor],
                label: `${savedIcon}`
              }
            ),
            /* @__PURE__ */ jsx(
              "label",
              {
                xalign: 0,
                marginEnd: 6,
                cssClasses: ["label-icon", passwordIconColor],
                label: `${passwordIcon}`
              }
            )
          ] }),
          /* @__PURE__ */ jsx(
            "button",
            {
              cssClasses: ["network-connect-button"],
              label: configuration.texts[0]((t) => t.network.connectButtonLabel),
              onClicked: async () => {
                connectToAccessPoint(ap);
              }
            }
          )
        ]
      }
    );
  }
  async function connectToAccessPoint(ap) {
    let pw = null;
    if (ap.get_connections().length == 0 && ap.requiresPassword) {
    }
    return new Promise((resolve, reject) => {
      ap.activate(pw, (_, res) => {
        try {
          resolve(ap.activate_finish(res));
        } catch (error) {
          reject(error);
        }
      });
    });
  }
}

// widget/network_status/network_status.tsx
function NetworkStatus() {
  const network = Network3.get_default();
  const networkState = createBinding(network, "primary");
  return /* @__PURE__ */ jsxs("menubutton", { children: [
    /* @__PURE__ */ jsx("box", { cssClasses: ["network-button"], overflow: Gtk2.Overflow.HIDDEN, children: /* @__PURE__ */ jsx(With, { value: networkState, children: (state) => {
      if (state === null || state === void 0) {
        return null;
      }
      return createLabel(state);
    } }) }),
    /* @__PURE__ */ jsx(NetworkStatusPopover, { network })
  ] });
  function createLabel(networkType) {
    try {
      let icon = icons.noConnection;
      switch (networkType) {
        case Network3.Primary.UNKNOWN:
          icon = icons.noConnection;
          break;
        case Network3.Primary.WIFI:
          icon = icons.wifiConnectionMax;
          break;
        case Network3.Primary.WIRED:
          icon = icons.wiredConnection;
          break;
        default:
          icon = icons.noConnection;
          break;
      }
      return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(
        "label",
        {
          class: "network-button-good bar-button-label",
          label: `${icon}`
        }
      ) });
    } catch (error) {
      Communication.printError(`ERROR create label: ${error}`), "network_status";
      return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(
        "label",
        {
          class: "network-button-good bar-button-label",
          label: `${icons.noConnection} error`
        }
      ) });
    }
  }
}

// ../../../../usr/share/ags/js/gnim/src/fetch.ts
import GLib3 from "gi://GLib";
import Gio3 from "gi://Gio";
import Soup from "gi://Soup?version=3.0";
var Headers = class _Headers {
  constructor(init = {}) {
    this.headers = /* @__PURE__ */ new Map();
    if (Array.isArray(init)) {
      for (const [name, value] of init) {
        this.append(name, value);
      }
    } else if (init instanceof _Headers) {
      init.forEach((value, name) => this.set(name, value));
    } else if (typeof init === "object") {
      for (const name in init) {
        this.set(name, init[name]);
      }
    }
  }
  append(name, value) {
    name = name.toLowerCase();
    if (!this.headers.has(name)) {
      this.headers.set(name, []);
    }
    this.headers.get(name).push(value);
  }
  delete(name) {
    this.headers.delete(name.toLowerCase());
  }
  get(name) {
    const values = this.headers.get(name.toLowerCase());
    return values ? values.join(", ") : null;
  }
  getAll(name) {
    return this.headers.get(name.toLowerCase()) || [];
  }
  has(name) {
    return this.headers.has(name.toLowerCase());
  }
  set(name, value) {
    this.headers.set(name.toLowerCase(), [value]);
  }
  forEach(callbackfn, thisArg) {
    for (const [name, values] of this.headers.entries()) {
      callbackfn.call(thisArg, values.join(", "), name, this);
    }
  }
  *entries() {
    for (const [name, values] of this.headers.entries()) {
      yield [name, values.join(", ")];
    }
  }
  *keys() {
    for (const name of this.headers.keys()) {
      yield name;
    }
  }
  *values() {
    for (const values of this.headers.values()) {
      yield values.join(", ");
    }
  }
  [Symbol.iterator]() {
    return this.entries();
  }
};
var URLSearchParams = class _URLSearchParams {
  constructor(init = "") {
    this.params = /* @__PURE__ */ new Map();
    if (typeof init === "string") {
      this.parseString(init);
    } else if (Array.isArray(init)) {
      for (const [key, value] of init) {
        this.append(key, value);
      }
    } else if (init instanceof _URLSearchParams) {
      init.forEach((value, key) => this.append(key, value));
    } else if (typeof init === "object") {
      for (const key in init) {
        this.set(key, init[key]);
      }
    }
  }
  parseString(query) {
    query.replace(/^\?/, "").split("&").forEach((pair) => {
      if (!pair) return;
      const [key, value] = pair.split("=").map(decodeURIComponent);
      this.append(key, value ?? "");
    });
  }
  get size() {
    return this.params.size;
  }
  append(name, value) {
    if (!this.params.has(name)) {
      this.params.set(name, []);
    }
    this.params.get(name).push(value);
  }
  delete(name, value) {
    if (value === void 0) {
      this.params.delete(name);
    } else {
      const values = this.params.get(name) || [];
      this.params.set(
        name,
        values.filter((v) => v !== value)
      );
      if (this.params.get(name).length === 0) {
        this.params.delete(name);
      }
    }
  }
  get(name) {
    const values = this.params.get(name);
    return values ? values[0] : null;
  }
  getAll(name) {
    return this.params.get(name) || [];
  }
  has(name, value) {
    if (!this.params.has(name)) return false;
    if (value === void 0) return true;
    return this.params.get(name)?.includes(value) || false;
  }
  set(name, value) {
    this.params.set(name, [value]);
  }
  sort() {
    this.params = new Map([...this.params.entries()].sort());
  }
  toString() {
    return [...this.params.entries()].flatMap(
      ([key, values]) => values.map((value) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)
    ).join("&");
  }
  forEach(callbackfn, thisArg) {
    for (const [key, values] of this.params.entries()) {
      for (const value of values) {
        callbackfn.call(thisArg, value, key, this);
      }
    }
  }
  [Symbol.iterator]() {
    return this.params.entries();
  }
};
var URL = class _URL {
  constructor(url, base) {
    if (base) {
      url = GLib3.Uri.resolve_relative(
        base instanceof _URL ? base.toString() : base,
        url instanceof _URL ? url.toString() : url,
        GLib3.UriFlags.HAS_PASSWORD
      );
    }
    this.uri = GLib3.Uri.parse(
      url instanceof _URL ? url.toString() : url,
      GLib3.UriFlags.HAS_PASSWORD
    );
    this.searchParams = new URLSearchParams(this.uri.get_query() ?? "");
  }
  get href() {
    const uri = GLib3.Uri.build_with_user(
      GLib3.UriFlags.HAS_PASSWORD,
      this.uri.get_scheme(),
      this.uri.get_user(),
      this.uri.get_password(),
      null,
      this.uri.get_host(),
      this.uri.get_port(),
      this.uri.get_path(),
      this.searchParams.toString(),
      this.uri.get_fragment()
    );
    return uri.to_string();
  }
  get origin() {
    return "null";
  }
  get protocol() {
    return this.uri.get_scheme() + ":";
  }
  get username() {
    return this.uri.get_user() ?? "";
  }
  get password() {
    return this.uri.get_password() ?? "";
  }
  get host() {
    const host = this.hostname;
    const port = this.port;
    return host ? host + (port ? ":" + port : "") : "";
  }
  get hostname() {
    return this.uri.get_host() ?? "";
  }
  get port() {
    const p = this.uri.get_port();
    return p >= 0 ? p.toString() : "";
  }
  get pathname() {
    return this.uri.get_path();
  }
  get hash() {
    const frag = this.uri.get_fragment();
    return frag ? "#" + frag : "";
  }
  get search() {
    const q = this.searchParams.toString();
    return q ? "?" + q : "";
  }
  toString() {
    return this.href;
  }
  toJSON() {
    return this.href;
  }
};
var Response = class {
  constructor(body = null, options = {}) {
    this.body = null;
    this.bodyUsed = false;
    this.redirected = false;
    this.type = "default";
    this.url = "";
    this.body = body;
    this.headers = new Headers(options.headers ?? {});
    this.status = options.status ?? 200;
    this.statusText = options.statusText ?? "";
    this.ok = this.status >= 200 && this.status < 300;
  }
  static error() {
    throw Error("Not yet implemented");
  }
  static json(_data, _init) {
    throw Error("Not yet implemented");
  }
  static redirect(_url, _status) {
    throw Error("Not yet implemented");
  }
  async blob() {
    throw Error("Not implemented");
  }
  async bytes() {
    const { CLOSE_SOURCE, CLOSE_TARGET } = Gio3.OutputStreamSpliceFlags;
    const outputStream = Gio3.MemoryOutputStream.new_resizable();
    if (!this.body) return null;
    await new Promise((resolve, reject) => {
      outputStream.splice_async(
        this.body,
        CLOSE_TARGET | CLOSE_SOURCE,
        GLib3.PRIORITY_DEFAULT,
        null,
        (_, res) => {
          try {
            resolve(outputStream.splice_finish(res));
          } catch (error) {
            reject(error);
          }
        }
      );
    });
    Object.assign(this, { bodyUsed: true });
    return outputStream.steal_as_bytes();
  }
  async formData() {
    throw Error("Not yet implemented");
  }
  async arrayBuffer() {
    const blob = await this.bytes();
    if (!blob) return null;
    return blob.toArray().buffer;
  }
  async text() {
    const blob = await this.bytes();
    return blob ? new TextDecoder().decode(blob.toArray()) : "";
  }
  async json() {
    const text = await this.text();
    return JSON.parse(text);
  }
  clone() {
    throw Error("Not yet implemented");
  }
};
async function fetch(url, { method, headers, body } = {}) {
  const session = new Soup.Session();
  const message = new Soup.Message({
    method: method || "GET",
    uri: url instanceof URL ? url.uri : GLib3.Uri.parse(url, GLib3.UriFlags.NONE)
  });
  if (headers) {
    for (const [key, value] of Object.entries(headers))
      message.get_request_headers().append(key, String(value));
  }
  if (typeof body === "string") {
    message.set_request_body_from_bytes(null, new GLib3.Bytes(new TextEncoder().encode(body)));
  }
  const inputStream = await new Promise((resolve, reject) => {
    session.send_async(message, 0, null, (_, res) => {
      try {
        resolve(session.send_finish(res));
      } catch (error) {
        reject(error);
      }
    });
  });
  return new Response(inputStream, {
    statusText: message.reason_phrase,
    status: message.status_code
  });
}
var fetch_default = fetch;

// widget/weather/weather_data.ts
var WeatherData = class {
  constructor() {
    this.time = "";
    this.time2 = "";
    // f.q. day name
    this.isDay = true;
    this.code = -1;
    this.icon = "";
    this.temperature = 0;
    this.temperatureUnit = "";
    this.precipitationProbability = 0;
    this.cssClass = "";
  }
  getClass(forButton = false) {
    return forButton ? this.cssClass : this.cssClass.replace("button", "icon");
  }
  updateStyle() {
    this.icon = this.isDay ? icons.daySun : icons.nightMoon;
    this.cssClass = this.isDay ? "weather-button-sun" : "weather-button-moon";
    if (this.code >= 90) {
      this.icon = this.isDay ? icons.dayThunderstorm : icons.nightThunderstorm;
      this.cssClass = "weather-button-thunderstorm";
      return;
    }
    if (this.code >= 70 && this.code < 80 || this.code >= 85 && this.code < 90) {
      this.icon = this.isDay ? icons.daySnow : icons.nightSnow;
      this.cssClass = "weather-button-snow";
      return;
    }
    if (this.code >= 80 && this.code < 85 || this.code >= 50 && this.code < 70) {
      this.icon = this.isDay ? icons.dayRain : icons.nightRain;
      this.cssClass = "weather-button-rain";
      return;
    }
    if (this.code === 3) {
      this.icon = icons.cloudyFull;
      this.cssClass = "weather-button-cloud-full";
      return;
    }
    if (this.code === 2) {
      this.icon = this.isDay ? icons.dayCloudyMid : icons.nightCloudyMid;
      this.cssClass = "weather-button-cloud-mid";
      return;
    }
    if (this.code <= 1) {
      this.icon = this.isDay ? icons.daySun : icons.nightMoon;
      this.cssClass = this.isDay ? "weather-button-sun" : "weather-button-moon";
      return;
    }
  }
};

// widget/weather/localization_weather_data.ts
var LocalizationWeatherData = class {
  constructor(name, isMain) {
    this.name = "";
    this.isMain = false;
    this.current = new WeatherData();
    this.hourly = [];
    this.daily = [];
    this.name = name;
    this.isMain = isMain;
  }
  updateWeather(current, hourly, daily) {
    this.current = current;
    this.hourly = hourly;
    this.daily = daily;
  }
};

// widget/weather/weather_api.ts
var WeatherApi = class {
  constructor() {
    this.localizations = [];
    this.temperatureUnit = "C";
    this.fetchIntervalTimeMs = 5 * 6e4;
    this.localizationWeathers = createState([]);
    this.fetchInterval = interval(this.fetchIntervalTimeMs, async () => {
      await this.fetchData();
    });
  }
  async init() {
    const weatherConfig = configuration.weather;
    this.localizations = weatherConfig.localizations;
    this.temperatureUnit = weatherConfig.temperatureUnit;
    this.localizationWeathers[1](weatherConfig.localizations.map((l) => new LocalizationWeatherData(l.name, l.isMain)));
    await this.fetchData();
    configuration.weatherState[0].subscribe(async () => {
      const currentState = configuration.weatherState[0].get();
      this.localizations = currentState.localizations;
      this.temperatureUnit = currentState.temperatureUnit;
      this.localizationWeathers[1](weatherConfig.localizations.map((l) => new LocalizationWeatherData(l.name, l.isMain)));
      await this.fetchData();
    });
  }
  async fetchData() {
    if (this.localizations.length === 0) {
      console.log("weather_api - fetchData() - no localizations");
      return;
    }
    const baseUrl = "https://api.open-meteo.com/v1/forecast";
    const latitudes = this.localizations.map((l) => l.latitude).join(",");
    const longitudes = this.localizations.map((l) => l.longitude).join(",");
    const currentParams = "&current=weather_code,temperature_2m,precipitation_probability,is_day";
    const hourlyParams = "&forecast_hours=21&past_hours=0&hourly=weather_code,temperature_2m,precipitation_probability,is_day";
    const dailyParams = "&daily=weather_code,temperature_2m_mean,precipitation_probability_mean";
    let tempUnitParam = this.temperatureUnit === "F" ? "&temperature_unit=fahrenheit" : "";
    const timezone = "&timezone=auto";
    const url = `${baseUrl}?latitude=${latitudes}&longitude=${longitudes}${currentParams}${hourlyParams}${dailyParams}${tempUnitParam}${timezone}`;
    let json = void 0;
    try {
      const response = await fetch(url);
      json = await response.json();
    } catch (error) {
      Communication.printError(`Cannot fetch weather data: ${error}`, "weather_api");
      return;
    }
    if (!Array.isArray(json)) {
      json = [json];
    }
    if (json.length !== this.localizations.length) {
      console.log(`json length (${json.length}) is different than localizations (${this.localizations.length}) `);
      console.log(json);
      return [];
    }
    const localizationWeathers = [];
    for (let i = 0; i < json.length; i++) {
      const current = this.createCurrentWeatherData(json[i].current);
      const hourly = this.createMultipleWeatherData(json[i].hourly);
      const daily = this.createMultipleWeatherData(json[i].daily);
      const name = configuration.weather.localizations.length > i ? configuration.weather.localizations[i].name : "";
      const isMain = configuration.weather.localizations.length > i ? configuration.weather.localizations[i].isMain : false;
      const forecast = new LocalizationWeatherData(name, isMain);
      forecast.updateWeather(current, hourly, daily);
      localizationWeathers.push(forecast);
    }
    this.localizationWeathers[1](localizationWeathers);
  }
  createCurrentWeatherData(jsonField) {
    const weather = new WeatherData();
    if (jsonField === void 0)
      return weather;
    weather.time = jsonField.time;
    weather.code = jsonField.weather_code;
    weather.isDay = jsonField.is_day;
    weather.temperature = jsonField.temperature_2m;
    weather.precipitationProbability = jsonField.precipitation_probability;
    weather.temperatureUnit = configuration.weather.temperatureUnit === "F" ? "\xB0F" : "\xB0C";
    weather.updateStyle();
    return weather;
  }
  createMultipleWeatherData(jsonField) {
    const weatherForecast = [];
    if (jsonField === void 0)
      return weatherForecast;
    if (jsonField.weather_code === void 0 || !Array.isArray(jsonField.weather_code))
      return weatherForecast;
    const length = jsonField.weather_code.length;
    for (let i = 0; i < length; i++) {
      const weather = new WeatherData();
      weather.time = jsonField.time[i];
      weather.code = jsonField.weather_code[i];
      weather.isDay = jsonField.is_day !== void 0 ? jsonField.is_day[i] : 1;
      weather.temperature = jsonField.temperature_2m !== void 0 ? jsonField.temperature_2m[i] : jsonField.temperature_2m_mean[i];
      weather.precipitationProbability = jsonField.precipitation_probability !== void 0 ? jsonField.precipitation_probability[i] : jsonField.precipitation_probability_mean[i];
      weather.temperatureUnit = configuration.weather.temperatureUnit === "F" ? "\xB0F" : "\xB0C";
      weather.updateStyle();
      weatherForecast.push(weather);
    }
    return weatherForecast;
  }
};
var weatherApi = new WeatherApi();

// models/utils/date_tools.ts
var DateTools = class {
  static formatDate(date, format) {
    const yyyy = String(date.getFullYear());
    const mm = String(date.getMonth() + 1).padStart(2, "0");
    const dd = String(date.getDate()).padStart(2, "0");
    format = format.toUpperCase();
    const isValidFormat = /YYYY/.test(format) && /MM/.test(format) && /DD/.test(format);
    if (!isValidFormat) {
      format = "DD-MM-YYYY";
    }
    return format.replace("YYYY", yyyy).replace("MM", mm).replace("DD", dd);
  }
  static toShortFormatDate(date, format) {
    const mm = String(date.getMonth() + 1).padStart(2, "0");
    const dd = String(date.getDate()).padStart(2, "0");
    format = format.toUpperCase();
    const isValidFormat = /YYYY/.test(format) && /MM/.test(format) && /DD/.test(format) && format.length === 10;
    if (!isValidFormat) {
      format = "DD-MM";
    }
    const yearIndex = format.indexOf("YYYY");
    if (yearIndex === 0) {
      format = format.slice(6);
    } else if (yearIndex === format.length - 4) {
      format = format.slice(0, format.length - 5);
    } else {
      format = format.replace("YYYY", "");
      format = format.slice(0, 3) + format.slice(4);
    }
    return format.replace("MM", mm).replace("DD", dd);
  }
  static getDayName(date) {
    const names = configuration.getTexts().general.daysOfWeek;
    const dayIndex = (date.getDay() + 6) % 7;
    return names[dayIndex];
  }
  static formatTime(time2, format) {
    if (format === "24")
      return time2;
    const timeParts = time2.split(":");
    const hour = parseInt(timeParts[0]);
    if (hour >= 12) {
      const hourText = `${hour - 12}`.padStart(2, "0");
      return `${hourText}:${timeParts[1]} PM`;
    } else {
      const hourText = `${hour}`.padStart(2, "0");
      return `${hourText}:${timeParts[1]} AM`;
    }
  }
};

// widget/weather/weather_popover.tsx
function WeatherPopover() {
  const currentLocalization = createState("LocalizationTab0");
  const tabNameTemplate = "LocalizationTab{0}";
  return /* @__PURE__ */ jsx(
    "popover",
    {
      name: "Weather popover",
      autohide: true,
      hasArrow: false,
      class: "widget-popover",
      marginBottom: 30,
      children: /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, children: /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, children: [
        /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.HORIZONTAL, marginBottom: 10, children: /* @__PURE__ */ jsx(For, { each: weatherApi.localizationWeathers[0], children: (localization, index) => /* @__PURE__ */ jsx("box", { children: createWeatherStackPageButton(index.get(), localization) }) }) }),
        /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(For, { each: weatherApi.localizationWeathers[0], children: (localization, index) => /* @__PURE__ */ jsx(
          "box",
          {
            visible: createComputed([index, currentLocalization[0]])(
              (v) => Tools.formatString(tabNameTemplate, v[0]) === v[1]
            ),
            children: /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.HORIZONTAL, spacing: 12, children: [
              /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, spacing: 4, children: [
                /* @__PURE__ */ jsx(
                  "label",
                  {
                    cssClasses: ["weather-panel-label"],
                    label: "Current",
                    xalign: 0
                  }
                ),
                /* @__PURE__ */ jsx("box", { cssClasses: ["weather-panel"], vexpand: true, children: createCurrentWeather(localization) })
              ] }),
              /* @__PURE__ */ jsxs(
                "box",
                {
                  orientation: Gtk2.Orientation.VERTICAL,
                  spacing: 12,
                  vexpand: true,
                  children: [
                    /* @__PURE__ */ jsxs(
                      "box",
                      {
                        orientation: Gtk2.Orientation.VERTICAL,
                        spacing: 4,
                        vexpand: true,
                        children: [
                          /* @__PURE__ */ jsx(
                            "label",
                            {
                              cssClasses: ["weather-panel-label"],
                              label: "Hourly",
                              xalign: 0
                            }
                          ),
                          /* @__PURE__ */ jsx(
                            "box",
                            {
                              vexpand: true,
                              cssClasses: ["weather-panel"],
                              overflow: Gtk2.Overflow.HIDDEN,
                              children: /* @__PURE__ */ jsx(
                                "scrolledwindow",
                                {
                                  vexpand: true,
                                  hexpand: true,
                                  minContentHeight: 100,
                                  minContentWidth: 100,
                                  vscrollbarPolicy: Gtk2.PolicyType.NEVER,
                                  hscrollbarPolicy: Gtk2.PolicyType.ALWAYS,
                                  children: createHourlyWeather(localization.hourly)
                                }
                              )
                            }
                          )
                        ]
                      }
                    ),
                    /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, spacing: 4, children: [
                      /* @__PURE__ */ jsx(
                        "label",
                        {
                          cssClasses: ["weather-panel-label"],
                          label: "Daily",
                          xalign: 0
                        }
                      ),
                      /* @__PURE__ */ jsx("box", { cssClasses: ["weather-panel"], children: createDailyWeather(localization.daily) })
                    ] })
                  ]
                }
              )
            ] })
          }
        ) }) }) })
      ] }) })
    }
  );
  function createWeatherStackPageButton(index, localization) {
    const button = new Gtk2.Button({ hexpand: true });
    const tabName = Tools.formatString(tabNameTemplate, index);
    button.label = localization.name.length === 0 ? `${configuration.getTexts().weather.defaultLocationName} #${index + 1}` : localization.name;
    currentLocalization[0].subscribe(() => {
      button.cssClasses = currentLocalization[0].get() === tabName ? ["weather-localization-button", "weather-current-localization"] : ["weather-localization-button"];
    });
    button.cssClasses = currentLocalization[0].get() === tabName ? ["weather-localization-button", "weather-current-localization"] : ["weather-localization-button"];
    const clickHandler = button.connect("clicked", () => {
      currentLocalization[1](tabName);
    });
    onCleanup(() => {
      button.disconnect(clickHandler);
    });
    return button;
  }
  function createCurrentWeather(localization) {
    const box = new Gtk2.Box({
      orientation: Gtk2.Orientation.VERTICAL,
      valign: Gtk2.Align.CENTER
    });
    const iconLabel = new Gtk2.Label();
    iconLabel.label = localization.current.icon;
    iconLabel.cssClasses = [
      "current-weather-icon",
      localization.current.getClass()
    ];
    box.append(iconLabel);
    const temperatureLabel = new Gtk2.Label();
    temperatureLabel.label = `${localization.current.temperature} ${localization.current.temperatureUnit}`;
    box.append(temperatureLabel);
    const precipitationLabel = new Gtk2.Label();
    precipitationLabel.label = `${icons.precipitationProbability} ${localization.current.precipitationProbability} %`;
    box.append(precipitationLabel);
    return box;
  }
  function createHourlyWeather(forecast) {
    const box = new Gtk2.Box({
      orientation: Gtk2.Orientation.HORIZONTAL,
      spacing: 12,
      cssClasses: [""]
    });
    for (let i = 0; i < forecast.length; i++) {
      const hourBox = new Gtk2.Box({
        orientation: Gtk2.Orientation.VERTICAL,
        cssClasses: ["weather-time-panel"]
      });
      const timeParts = forecast[i].time.split("T");
      if (timeParts.length == 2) {
        const timeLabel = new Gtk2.Label();
        const time2 = DateTools.formatTime(
          timeParts[1],
          configuration.general.timeFormat
        );
        timeLabel.label = `${time2}`;
        hourBox.append(timeLabel);
      }
      const iconLabel = new Gtk2.Label();
      iconLabel.label = forecast[i].icon;
      iconLabel.cssClasses = ["weather-icon-hourly", forecast[i].getClass()];
      hourBox.append(iconLabel);
      const temperatureLabel = new Gtk2.Label();
      temperatureLabel.label = `${forecast[i].temperature} ${forecast[i].temperatureUnit}`;
      hourBox.append(temperatureLabel);
      const precipitationLabel = new Gtk2.Label();
      precipitationLabel.label = `${icons.precipitationProbability} ${forecast[i].precipitationProbability} %`;
      hourBox.append(precipitationLabel);
      box.append(hourBox);
    }
    return box;
  }
  function createDailyWeather(forecast) {
    const box = new Gtk2.Box({
      orientation: Gtk2.Orientation.HORIZONTAL,
      spacing: 6
    });
    for (let i = 0; i < forecast.length; i++) {
      const dayBox = new Gtk2.Box({
        orientation: Gtk2.Orientation.VERTICAL,
        cssClasses: ["weather-time-panel"],
        width_request: 100
      });
      const date = new Date(forecast[i].time);
      const dayName = new Gtk2.Label();
      dayName.label = DateTools.getDayName(date);
      dayBox.append(dayName);
      const dateLabel = new Gtk2.Label();
      dateLabel.label = DateTools.toShortFormatDate(
        date,
        configuration.general.dateFormat
      );
      dayBox.append(dateLabel);
      const iconLabel = new Gtk2.Label();
      iconLabel.label = forecast[i].icon;
      iconLabel.cssClasses = ["weather-icon-daily", forecast[i].getClass()];
      dayBox.append(iconLabel);
      const temperatureLabel = new Gtk2.Label();
      temperatureLabel.label = `${forecast[i].temperature} ${forecast[i].temperatureUnit}`;
      dayBox.append(temperatureLabel);
      const precipitationLabel = new Gtk2.Label();
      precipitationLabel.label = `${icons.precipitationProbability} ${forecast[i].precipitationProbability} %`;
      dayBox.append(precipitationLabel);
      box.append(dayBox);
    }
    return box;
  }
}

// widget/weather/weather.tsx
function Weather() {
  const mainLocalization = weatherApi.localizationWeathers[0](
    (v) => v.find((l) => l.isMain) ?? v[0]
  );
  return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsxs("menubutton", { children: [
    /* @__PURE__ */ jsx("box", { cssClasses: ["weather-button"], overflow: Gtk2.Overflow.HIDDEN, children: /* @__PURE__ */ jsxs(
      "box",
      {
        heightRequest: 20,
        widthRequest: 20,
        cssClasses: mainLocalization((v) => [
          "weather-button-label-container",
          v.current.getClass(true)
        ]),
        children: [
          /* @__PURE__ */ jsx("box", { overflow: Gtk2.Overflow.HIDDEN, marginEnd: 4, children: /* @__PURE__ */ jsx(
            "label",
            {
              valign: Gtk2.Align.CENTER,
              halign: Gtk2.Align.CENTER,
              cssClasses: ["weather-button-status-label"],
              label: mainLocalization((v) => v.current.icon)
            }
          ) }),
          /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: configuration.weatherState[0], children: (state) => {
            if (state.showLocationName === true) {
              return /* @__PURE__ */ jsx(
                "label",
                {
                  marginEnd: 6,
                  cssClasses: ["weather-button-name-label"],
                  label: mainLocalization((v) => v.name)
                }
              );
            } else return /* @__PURE__ */ jsx("box", {});
          } }) }),
          /* @__PURE__ */ jsx(
            "label",
            {
              cssClasses: ["weather-button-temperature-label"],
              label: mainLocalization(
                (v) => `${v.current.temperature} ${v.current.temperatureUnit}`
              )
            }
          )
        ]
      }
    ) }),
    /* @__PURE__ */ jsx(WeatherPopover, {})
  ] }) });
  function checkLocalizations(localizations) {
    const badLocalizations = [];
    for (let i = 0; i < localizations.length; i++) {
      if (!localizationIsGood(localizations[i])) {
        badLocalizations.push(localizations[i].name ?? `Localization ${i + 1}`);
      }
    }
    return badLocalizations;
  }
  function localizationIsGood(localization) {
    if (Math.abs(localization.latitude) > 90) return false;
    if (Math.abs(localization.longitude) > 180) return false;
    return true;
  }
}

// widget/audio_manager/audio_manager_popover.tsx
import Wp from "gi://AstalWp";
import AstalWp from "gi://AstalWp?version=0.1";
import Pango from "gi://Pango?version=1.0";
function AudioManagerPopover() {
  let TabName;
  ((TabName2) => {
    TabName2[TabName2["OUTPUT"] = 0] = "OUTPUT";
    TabName2[TabName2["INPUT"] = 1] = "INPUT";
  })(TabName || (TabName = {}));
  const wpReady = createState(false);
  const wp = Wp.get_default();
  const currentTabName = createState(0 /* OUTPUT */);
  const texts = configuration.getTexts().audioManager;
  const readyHandler = wp.connect("ready", () => {
    console.log("ready");
    wpReady[1](true);
  });
  onCleanup(() => {
    wp.disconnect(readyHandler);
  });
  return /* @__PURE__ */ jsx(
    "popover",
    {
      name: "Sound status popover",
      autohide: false,
      hasArrow: false,
      class: "widget-popover",
      marginEnd: 60,
      marginBottom: 30,
      children: /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, children: /* @__PURE__ */ jsx(With, { value: wpReady[0], children: (ready) => {
        if (!ready) {
          return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx("label", { label: texts.waitingForDevice }) });
        }
        return /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, children: [
          /* @__PURE__ */ jsxs("box", { children: [
            /* @__PURE__ */ jsx(
              "button",
              {
                label: `${icons.speakerTab} ${texts.output}`,
                class: currentTabName[0](
                  (t) => t === 0 /* OUTPUT */ ? "audio-button active" : "audio-button"
                ),
                hexpand: true,
                onClicked: () => currentTabName[1](0 /* OUTPUT */)
              }
            ),
            /* @__PURE__ */ jsx(
              "button",
              {
                label: `${icons.microphoneTab} ${texts.input}`,
                class: currentTabName[0](
                  (t) => t === 1 /* INPUT */ ? "audio-button active" : "audio-button"
                ),
                hexpand: true,
                onClicked: () => currentTabName[1](1 /* INPUT */)
              }
            )
          ] }),
          /* @__PURE__ */ jsxs("box", { widthRequest: 300, heightRequest: 400, children: [
            /* @__PURE__ */ jsxs(
              "box",
              {
                visible: currentTabName[0]((t) => t === 0 /* OUTPUT */),
                orientation: Gtk2.Orientation.VERTICAL,
                children: [
                  createOutputStreamsCustomization(),
                  createOutputDevicesCustomization()
                ]
              }
            ),
            /* @__PURE__ */ jsxs(
              "box",
              {
                visible: currentTabName[0]((t) => t === 1 /* INPUT */),
                orientation: Gtk2.Orientation.VERTICAL,
                children: [
                  createInputStreamsCustomization(),
                  createInputDevicesCustomization()
                ]
              }
            )
          ] })
        ] });
      } }) })
    }
  );
  function getVolumeIcon(isMuted, volume) {
    if (isMuted === true) return icons.volumeMute;
    if (volume < 0.3) return icons.volumeLow;
    if (volume < 0.7) return icons.volumeMid;
    return icons.volumeHigh;
  }
  function createOutputStreamsCustomization() {
    const streams = createBinding(
      wp.audio,
      "streams"
    )(
      (all) => all.filter((s) => s.mediaRole !== AstalWp.MediaRole.NOTIFICATION).sort((a, b) => a.id - b.id)
    );
    const speakers = createBinding(wp.audio, "speakers");
    const speakersListModel = speakers(
      (all) => new Gtk2.StringList({
        strings: all.map((s) => `${s.description}`)
      })
    );
    return /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, marginTop: 20, children: [
      /* @__PURE__ */ jsx("label", { css: "font-size: 28px;", label: texts.streams }),
      /* @__PURE__ */ jsx(
        "label",
        {
          css: "font-size: 16px;",
          label: texts.noStreams,
          visible: streams((all) => all.length === 0)
        }
      ),
      /* @__PURE__ */ jsx(
        "scrolledwindow",
        {
          vexpand: true,
          hexpand: true,
          propagateNaturalHeight: true,
          minContentHeight: 200,
          maxContentHeight: 300,
          minContentWidth: 100,
          vscrollbarPolicy: Gtk2.PolicyType.AUTOMATIC,
          hscrollbarPolicy: Gtk2.PolicyType.NEVER,
          children: /* @__PURE__ */ jsx(
            "box",
            {
              orientation: Gtk2.Orientation.VERTICAL,
              vexpand: true,
              hexpand: true,
              marginEnd: 30,
              children: /* @__PURE__ */ jsx(For, { each: streams, children: (stream) => {
                const mute = createBinding(stream, "mute");
                const volume = createBinding(stream, "volume");
                const muteVolumeControl = createComputed([mute, volume]);
                const targetEndpoint = createBinding(stream, "targetEndpoint");
                let autoChange = false;
                return /* @__PURE__ */ jsxs(
                  "box",
                  {
                    orientation: Gtk2.Orientation.VERTICAL,
                    marginTop: 20,
                    vexpand: true,
                    children: [
                      /* @__PURE__ */ jsx(
                        "label",
                        {
                          xalign: 0,
                          widthChars: 30,
                          maxWidthChars: 30,
                          ellipsize: Pango.EllipsizeMode.END,
                          tooltipText: `${configuration.getTexts().general.name}: ${stream.name}
${configuration.getTexts().general.description}: ${stream.description}`,
                          label: `${stream.description} - ${stream.name}`
                        }
                      ),
                      /* @__PURE__ */ jsxs("box", { children: [
                        /* @__PURE__ */ jsx("button", { onClicked: () => stream.set_mute(!stream.mute), children: /* @__PURE__ */ jsx(With, { value: muteVolumeControl, children: (value) => /* @__PURE__ */ jsx(
                          "label",
                          {
                            cssClasses: ["sound-level-mute-button"],
                            label: getVolumeIcon(value[0], value[1])
                          }
                        ) }) }),
                        /* @__PURE__ */ jsx(
                          "slider",
                          {
                            sensitive: mute((m) => !m),
                            hexpand: true,
                            min: 0,
                            max: 1,
                            value: volume,
                            class: "volume-slider",
                            onChangeValue: ({ value }) => stream.set_volume(value),
                            marginEnd: 6
                          }
                        ),
                        /* @__PURE__ */ jsx(
                          "label",
                          {
                            widthChars: 3,
                            label: volume.as((v) => (v * 100).toFixed())
                          }
                        )
                      ] }),
                      /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: targetEndpoint, children: (target) => {
                        if (target == void 0) target = wp.defaultSpeaker;
                        if (target == void 0) return /* @__PURE__ */ jsx("box", {});
                        autoChange = true;
                        const selectedIndex = speakers(
                          (all) => all.findIndex((s) => s.id === target.id)
                        );
                        setTimeout(() => autoChange = false, 0);
                        return /* @__PURE__ */ jsxs("box", { children: [
                          /* @__PURE__ */ jsx("label", { label: `${texts.outputDevice}:` }),
                          /* @__PURE__ */ jsx(
                            Gtk2.DropDown,
                            {
                              model: speakersListModel,
                              cssClasses: ["devices-dropdown"],
                              selected: selectedIndex,
                              onNotifySelected: (dropdown, y) => {
                                if (autoChange) return;
                                const selected = dropdown.selected;
                                const all = speakers.get();
                                if (all.length <= selected || selected < 0)
                                  return;
                                const selectedDevice = all[selected];
                                if (!selectedDevice) return;
                                if (stream.targetEndpoint == void 0 || stream.targetEndpoint.id !== selectedDevice.id) {
                                  stream.set_target_endpoint(selectedDevice);
                                }
                              }
                            }
                          )
                        ] });
                      } }) })
                    ]
                  }
                );
              } })
            }
          )
        }
      )
    ] });
  }
  function createOutputDevicesCustomization() {
    const speakers = createBinding(wp.audio, "speakers");
    return /* @__PURE__ */ jsxs(
      "box",
      {
        orientation: Gtk2.Orientation.VERTICAL,
        marginTop: 30,
        marginBottom: 15,
        children: [
          /* @__PURE__ */ jsx("label", { css: "font-size: 28px;", label: texts.devices }),
          /* @__PURE__ */ jsx(
            "scrolledwindow",
            {
              vexpand: true,
              hexpand: true,
              propagateNaturalHeight: true,
              minContentHeight: 120,
              maxContentHeight: 180,
              minContentWidth: 100,
              vscrollbarPolicy: Gtk2.PolicyType.AUTOMATIC,
              hscrollbarPolicy: Gtk2.PolicyType.NEVER,
              children: /* @__PURE__ */ jsx(
                "box",
                {
                  orientation: Gtk2.Orientation.VERTICAL,
                  vexpand: true,
                  hexpand: true,
                  marginEnd: 30,
                  children: /* @__PURE__ */ jsx(For, { each: speakers((s) => s.sort((a, b) => a.id - b.id)), children: (speaker) => {
                    const volume = createBinding(speaker, "volume");
                    const mute = createBinding(speaker, "mute");
                    const muteVolumeControl = createComputed([mute, volume]);
                    return /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, marginTop: 10, children: [
                      /* @__PURE__ */ jsx(
                        "label",
                        {
                          widthChars: 30,
                          maxWidthChars: 30,
                          ellipsize: Pango.EllipsizeMode.END,
                          tooltipText: `${configuration.getTexts().general.name}: ${speaker.name}
${configuration.getTexts().general.description}: ${speaker.description}`,
                          xalign: 0,
                          label: `${speaker.description}`
                        }
                      ),
                      /* @__PURE__ */ jsxs("box", { children: [
                        /* @__PURE__ */ jsx("button", { onClicked: () => speaker.set_mute(!speaker.mute), children: /* @__PURE__ */ jsx(With, { value: muteVolumeControl, children: (value) => /* @__PURE__ */ jsx(
                          "label",
                          {
                            cssClasses: ["sound-level-mute-button"],
                            label: getVolumeIcon(value[0], value[1])
                          }
                        ) }) }),
                        /* @__PURE__ */ jsx(
                          "slider",
                          {
                            sensitive: mute((m) => !m),
                            class: "volume-slider",
                            hexpand: true,
                            min: 0,
                            max: 1,
                            value: volume.as((v) => Math.round(v * 100) / 100),
                            onChangeValue: ({ value }) => speaker.set_volume(value),
                            marginEnd: 6
                          }
                        ),
                        /* @__PURE__ */ jsx(
                          "label",
                          {
                            widthChars: 3,
                            label: volume.as((v) => (v * 100).toFixed())
                          }
                        )
                      ] })
                    ] });
                  } })
                }
              )
            }
          )
        ]
      }
    );
  }
  function createInputStreamsCustomization() {
    const recorders = createBinding(
      wp.audio,
      "recorders"
    )(
      (all) => all.filter((s) => s.mediaRole !== AstalWp.MediaRole.NOTIFICATION).sort((a, b) => a.id - b.id)
    );
    const microphones = createBinding(wp.audio, "microphones");
    const microphonesListModel = microphones(
      (all) => new Gtk2.StringList({
        strings: all.map((m) => `${m.description}`)
      })
    );
    return /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, marginTop: 20, children: [
      /* @__PURE__ */ jsx("label", { css: "font-size: 28px;", label: texts.records }),
      /* @__PURE__ */ jsx(
        "label",
        {
          css: "font-size: 16px;",
          label: texts.noRecords,
          visible: recorders((all) => all.length === 0)
        }
      ),
      /* @__PURE__ */ jsx(
        "scrolledwindow",
        {
          vexpand: true,
          hexpand: true,
          propagateNaturalHeight: true,
          minContentHeight: 200,
          maxContentHeight: 300,
          minContentWidth: 100,
          vscrollbarPolicy: Gtk2.PolicyType.AUTOMATIC,
          hscrollbarPolicy: Gtk2.PolicyType.NEVER,
          children: /* @__PURE__ */ jsx(
            "box",
            {
              orientation: Gtk2.Orientation.VERTICAL,
              vexpand: true,
              hexpand: true,
              marginEnd: 30,
              children: /* @__PURE__ */ jsx(For, { each: recorders, children: (record) => {
                const mute = createBinding(record, "mute");
                const volume = createBinding(record, "volume");
                const targetEndpoint = createBinding(record, "targetEndpoint");
                let autoChange = false;
                return /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, marginTop: 20, children: [
                  /* @__PURE__ */ jsx(
                    "label",
                    {
                      xalign: 0,
                      widthChars: 30,
                      maxWidthChars: 30,
                      ellipsize: Pango.EllipsizeMode.END,
                      tooltipText: `${configuration.getTexts().general.name}: ${record.name}
${configuration.getTexts().general.description}: ${record.description}`,
                      label: `${record.description} - ${record.name}`
                    }
                  ),
                  /* @__PURE__ */ jsxs("box", { children: [
                    /* @__PURE__ */ jsx("button", { onClicked: () => record.set_mute(!record.mute), children: /* @__PURE__ */ jsx(
                      "label",
                      {
                        cssClasses: ["sound-level-mute-button"],
                        label: mute(
                          (m) => m === true ? icons.microphoneMute : icons.microphone
                        )
                      }
                    ) }),
                    /* @__PURE__ */ jsx(
                      "slider",
                      {
                        sensitive: mute((m) => !m),
                        class: "volume-slider",
                        hexpand: true,
                        min: 0,
                        max: 1,
                        value: volume,
                        onChangeValue: ({ value }) => record.set_volume(value),
                        marginEnd: 6
                      }
                    ),
                    /* @__PURE__ */ jsx(
                      "label",
                      {
                        widthChars: 3,
                        label: volume.as((v) => (v * 100).toFixed())
                      }
                    )
                  ] }),
                  /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx(With, { value: targetEndpoint, children: (target) => {
                    if (target == void 0)
                      target = wp.defaultMicrophone;
                    if (target == void 0) return /* @__PURE__ */ jsx("box", {});
                    autoChange = true;
                    const selectedIndex = microphones(
                      (all) => all.findIndex((s) => s.id === target.id)
                    );
                    setTimeout(() => autoChange = false, 0);
                    return /* @__PURE__ */ jsxs("box", { children: [
                      /* @__PURE__ */ jsx("label", { label: `${texts.inputDevice}:` }),
                      /* @__PURE__ */ jsx(
                        Gtk2.DropDown,
                        {
                          model: microphonesListModel,
                          cssClasses: ["devices-dropdown"],
                          selected: selectedIndex,
                          onNotifySelected: (dropdown, y) => {
                            if (autoChange) return;
                            const selected = dropdown.selected;
                            const all = microphones.get();
                            if (all.length <= selected || selected < 0)
                              return;
                            const selectedDevice = all[selected];
                            if (!selectedDevice) return;
                            if (record.targetEndpoint == void 0 || record.targetEndpoint.id !== selectedDevice.id) {
                              record.set_target_endpoint(selectedDevice);
                            }
                          }
                        }
                      )
                    ] });
                  } }) })
                ] });
              } })
            }
          )
        }
      )
    ] });
  }
  function createInputDevicesCustomization() {
    const microphones = createBinding(wp.audio, "microphones");
    return /* @__PURE__ */ jsxs(
      "box",
      {
        orientation: Gtk2.Orientation.VERTICAL,
        marginTop: 30,
        marginBottom: 15,
        children: [
          /* @__PURE__ */ jsx("label", { css: "font-size: 28px;", label: texts.devices }),
          /* @__PURE__ */ jsx(
            "scrolledwindow",
            {
              vexpand: true,
              hexpand: true,
              propagateNaturalHeight: true,
              minContentHeight: 120,
              maxContentHeight: 180,
              minContentWidth: 100,
              vscrollbarPolicy: Gtk2.PolicyType.AUTOMATIC,
              hscrollbarPolicy: Gtk2.PolicyType.NEVER,
              children: /* @__PURE__ */ jsx(
                "box",
                {
                  orientation: Gtk2.Orientation.VERTICAL,
                  vexpand: true,
                  hexpand: true,
                  marginEnd: 30,
                  children: /* @__PURE__ */ jsx(For, { each: microphones((s) => s.sort((a, b) => a.id - b.id)), children: (speaker) => {
                    const volume = createBinding(speaker, "volume");
                    const mute = createBinding(speaker, "mute");
                    return /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, marginTop: 20, children: [
                      /* @__PURE__ */ jsx(
                        "label",
                        {
                          widthChars: 30,
                          maxWidthChars: 30,
                          ellipsize: Pango.EllipsizeMode.END,
                          tooltipText: `${configuration.getTexts().general.name}: ${speaker.name}
${configuration.getTexts().general.description}: ${speaker.description}`,
                          xalign: 0,
                          label: `${speaker.description}`
                        }
                      ),
                      /* @__PURE__ */ jsxs("box", { children: [
                        /* @__PURE__ */ jsx("button", { onClicked: () => speaker.set_mute(!speaker.mute), children: /* @__PURE__ */ jsx(
                          "label",
                          {
                            cssClasses: ["sound-level-mute-button"],
                            label: mute(
                              (m) => m === true ? icons.microphoneMute : icons.microphone
                            )
                          }
                        ) }),
                        /* @__PURE__ */ jsx(
                          "slider",
                          {
                            sensitive: mute((m) => !m),
                            hexpand: true,
                            class: "volume-slider",
                            min: 0,
                            max: 1,
                            value: volume.as((v) => Math.round(v * 100) / 100),
                            onChangeValue: ({ value }) => speaker.set_volume(value),
                            marginEnd: 6
                          }
                        ),
                        /* @__PURE__ */ jsx(
                          "label",
                          {
                            widthChars: 3,
                            label: volume.as((v) => (v * 100).toFixed())
                          }
                        )
                      ] })
                    ] });
                  } })
                }
              )
            }
          )
        ]
      }
    );
  }
}

// widget/audio_manager/audio_manager.tsx
import Wp2 from "gi://AstalWp";
function AudioManager() {
  const wp = Wp2.get_default();
  const default_speaker = wp.audio.default_speaker;
  let systemVolume = createBinding(default_speaker, "volume");
  wp.connect("ready", () => {
    systemVolume = createBinding(default_speaker, "volume");
  });
  return /* @__PURE__ */ jsxs("menubutton", { children: [
    /* @__PURE__ */ jsx("box", { cssClasses: ["sound-status-button"], overflow: Gtk2.Overflow.HIDDEN, children: /* @__PURE__ */ jsx(With, { value: systemVolume, children: (volume) => createLabel(volume) }) }),
    /* @__PURE__ */ jsx(AudioManagerPopover, {})
  ] });
  function createLabel(volume) {
    const volumeInt = (volume * 100).toFixed();
    if (volume < 0.3)
      return /* @__PURE__ */ jsxs("box", { children: [
        /* @__PURE__ */ jsx("label", { class: "bar-button-label", label: `${icons.volumeLow}` }),
        /* @__PURE__ */ jsx("label", { label: volumeInt })
      ] });
    if (volume < 0.7)
      return /* @__PURE__ */ jsxs("box", { children: [
        /* @__PURE__ */ jsx("label", { class: "bar-button-label", label: `${icons.volumeMid}` }),
        /* @__PURE__ */ jsx("label", { label: volumeInt })
      ] });
    return /* @__PURE__ */ jsxs("box", { children: [
      /* @__PURE__ */ jsx("label", { class: "bar-button-label", label: `${icons.volumeHigh}` }),
      /* @__PURE__ */ jsx("label", { label: volumeInt })
    ] });
  }
}

// widget/notification_history/notification_history_popover.tsx
import Notifd from "gi://AstalNotifd";
function NotificationHistoryPopover() {
  const notifd = Notifd.get_default();
  const notifications = createBinding(notifd, "notifications");
  return /* @__PURE__ */ jsx(
    "popover",
    {
      name: "notification history popover",
      autohide: false,
      hasArrow: false,
      class: "widget-popover",
      marginEnd: 60,
      marginBottom: 30,
      children: /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, children: [
        /* @__PURE__ */ jsx("label", { label: "NOTIFICATIONS LIST" }),
        /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, children: /* @__PURE__ */ jsx(For, { each: notifications((n) => n.sort((a, b) => a.time - b.time)), children: (notification) => {
          return /* @__PURE__ */ jsxs("box", { orientation: Gtk2.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx("label", { label: notification.body }),
            /* @__PURE__ */ jsx("label", { label: notification.summary })
          ] });
        } }) })
      ] })
    }
  );
}

// widget/notification_history/notification_history.tsx
function NotificationHistory() {
  return /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsxs("menubutton", { children: [
    /* @__PURE__ */ jsx(
      "box",
      {
        cssClasses: ["notification-history-button"],
        overflow: Gtk2.Overflow.HIDDEN,
        children: /* @__PURE__ */ jsx("box", { children: /* @__PURE__ */ jsx("label", { class: "bar-button-label", label: `\u{F021A}` }) })
      }
    ),
    /* @__PURE__ */ jsx(NotificationHistoryPopover, {})
  ] }) });
}

// widget/bar.tsx
function bar(monitor) {
  if (monitor.description.includes("AW3423DWF")) {
    return mainBar(monitor);
  } else {
    return secondBar(monitor);
  }
}
function mainBar(monitor) {
  const time2 = createPoll("", 1e3, "date");
  const { BOTTOM, LEFT, RIGHT } = Astal2.WindowAnchor;
  return /* @__PURE__ */ jsx(
    "window",
    {
      visible: true,
      name: "bar",
      class: "Bar",
      gdkmonitor: monitor,
      exclusivity: Astal2.Exclusivity.EXCLUSIVE,
      anchor: BOTTOM | LEFT | RIGHT,
      application: app_default,
      children: /* @__PURE__ */ jsxs("centerbox", { cssName: "centerbox", children: [
        /* @__PURE__ */ jsxs("box", { $type: "start", halign: Gtk2.Align.START, children: [
          /* @__PURE__ */ jsx(Weather, {}),
          /* @__PURE__ */ jsx(Timer, {})
        ] }),
        /* @__PURE__ */ jsx("box", { $type: "center", children: /* @__PURE__ */ jsxs("menubutton", { class: "clock", hexpand: true, halign: Gtk2.Align.CENTER, children: [
          /* @__PURE__ */ jsx("label", { label: time2 }),
          /* @__PURE__ */ jsx("popover", { children: /* @__PURE__ */ jsx(Gtk2.Calendar, {}) })
        ] }) }),
        /* @__PURE__ */ jsxs("box", { $type: "end", halign: Gtk2.Align.END, children: [
          /* @__PURE__ */ jsx(NotificationHistory, {}),
          /* @__PURE__ */ jsx(AudioManager, {}),
          /* @__PURE__ */ jsx(NetworkStatus, {})
        ] })
      ] })
    }
  );
}
function secondBar(monitor) {
  const time2 = createPoll("", 1e3, "date");
  const { BOTTOM, LEFT, RIGHT } = Astal2.WindowAnchor;
  let content = `${monitor.model} ${monitor.description}`;
  return /* @__PURE__ */ jsx(
    "window",
    {
      visible: true,
      name: "bar",
      class: "Bar",
      gdkmonitor: monitor,
      exclusivity: Astal2.Exclusivity.EXCLUSIVE,
      anchor: BOTTOM | LEFT | RIGHT,
      application: app_default,
      children: /* @__PURE__ */ jsxs("centerbox", { cssName: "centerbox", children: [
        /* @__PURE__ */ jsx(
          "button",
          {
            $type: "start",
            onClicked: () => execAsync("echo hello").then(console.log),
            hexpand: true,
            halign: Gtk2.Align.CENTER,
            children: /* @__PURE__ */ jsx("label", { label: "Welcome to AGS!" })
          }
        ),
        /* @__PURE__ */ jsx(
          "box",
          {
            $type: "center",
            class: "monitor-info",
            hexpand: true,
            halign: Gtk2.Align.CENTER,
            children: /* @__PURE__ */ jsx("label", { label: content })
          }
        ),
        /* @__PURE__ */ jsxs("menubutton", { $type: "end", hexpand: true, halign: Gtk2.Align.CENTER, children: [
          /* @__PURE__ */ jsx("label", { label: time2 }),
          /* @__PURE__ */ jsx("popover", { children: /* @__PURE__ */ jsx(Gtk2.Calendar, {}) })
        ] })
      ] })
    }
  );
}

// models/configuration/timer_configuration.ts
var TimerConfiguration = class {
  constructor() {
    this.defaultTimerTimeSeconds = 600;
    this.maxRunningTimers = 10;
    this.savedTimersFilePath = `data/timer/saved_timers.json`;
    this.alarmSoundFilePath = "data/timer/timer_alarm_sound.mp3";
    this.alarmSoundLengthInSeconds = 60;
  }
};

// models/configuration/general_configuration.ts
var GeneralConfiguration = class {
  constructor() {
    this.languageCode = "en";
    this.timeFormat = "24";
    this.dateFormat = "DD-MM-YYYY";
  }
};

// models/texts/timer_texts.ts
var TimerTexts = class {
  constructor() {
    // Timer popover
    this.add = "Add timer";
    this.run = "Run";
    this.enterEditMode = "Enter edit mode";
    this.exitEditMode = "Exit edit mode";
    this.saved = "Saved timers";
    this.running = "Runnings timers";
    this.stateRunning = "Timer is currently running";
    this.statePaused = "Timer is currently paused";
    // Save timer window
    this.saveAskLabel = "Set timer's time and name to save it. MAX 16 CHARACTERS.";
    this.saveNamePlaceholder = "Provide timer name eg. pizza, lesson, nap";
    // Timer notification
    this.endNonameNotificationTitle = "Timer finished!";
    this.endNamedNotificationTitle = "Timer {0} finished!";
  }
};

// models/texts/general_texts.ts
var GeneralTexts = class {
  constructor() {
    this.add = "Add";
    this.cancel = "Cancel";
    this.name = "Name";
    this.description = "Description";
    this.daysOfWeek = [
      "Monday",
      "Tuesday",
      "Wednesday",
      "Thursday",
      "Friday",
      "Saturday",
      "Sunday"
    ];
  }
};

// models/texts/network_texts.ts
var NetworkTexts = class {
  constructor() {
    this.availableNetworksLabel = "Available wireless networks";
    this.searchNetworks = "Searching";
    this.connectButtonLabel = "Connect";
    this.wifiUnavailable = "Wifi is currently unavailable";
    this.downloadSpeed = "Current download speed";
    this.uploadSpeed = "Current upload speed";
    this.noCurrentConnection = "No Internet connection";
  }
};

// models/texts/weather_texts.ts
var WeatherTexts = class {
  constructor() {
    this.badLocalizationsTooltip = "Your configuration file contains bad localizations coordinates: ";
    this.defaultLocationName = "Localization";
  }
};

// models/texts/audio_manager_texts.ts
var AudioManagerTexts = class {
  constructor() {
    this.waitingForDevice = "Waiting for audio device";
    this.streams = "Streams";
    this.records = "Records";
    this.devices = "Devices";
    this.output = "Output";
    this.input = "Input";
    this.outputDevice = "Output device";
    this.inputDevice = "Input device";
    this.noStreams = "Nothing is streaming audio";
    this.noRecords = "Nothing is recording audio";
  }
};

// models/texts/localization_texts.ts
var LocaliztionTexts = class {
  constructor(language = "en") {
    this.general = new GeneralTexts();
    this.timer = new TimerTexts();
    this.network = new NetworkTexts();
    this.weather = new WeatherTexts();
    this.audioManager = new AudioManagerTexts();
    if (language.length !== 2)
      return;
    const texts = readFile(`data/localization/${language}.json`);
    return JSON.parse(texts);
  }
};

// models/configuration/configuration.ts
import Gio4 from "gi://Gio";

// models/configuration/weather_configuration.ts
var WeatherConfiguration = class _WeatherConfiguration {
  constructor() {
    this.temperatureUnit = "C";
    // C or F
    this.showLocationName = true;
    this.autogetLocalizationName = false;
    this.savedAutogetNamesPath = `data/weather/found_localizations.json`;
    this.localizations = [];
  }
  static {
    this.MAX_LOCALIZATIONS = 10;
  }
  static fromConfigFile(configFileWeather) {
    const weather = new _WeatherConfiguration();
    weather.showLocationName = configFileWeather.showLocationName;
    weather.autogetLocalizationName = configFileWeather.autogetLocalizationName;
    weather.localizations = configFileWeather.localizations;
    const MAX = _WeatherConfiguration.MAX_LOCALIZATIONS;
    if (weather.localizations.length > MAX) {
      weather.localizations.splice(MAX, weather.localizations.length - MAX);
    }
    return weather;
  }
  async checkLocalizationNames() {
    try {
      if (this.autogetLocalizationName === false)
        return;
      const autogetLocalizations = await this.checkLocalizationNamesFromFile();
      for (let i = 0; i < this.localizations.length; i++) {
        const loc = this.localizations[i];
        if (loc.name.length > 0) {
          continue;
        }
        const baseUrl = "https://nominatim.openstreetmap.org/reverse";
        const params = `lat=${loc.latitude}&lon=${loc.longitude}&format=json`;
        const url = `${baseUrl}?${params}`;
        const response = await fetch_default(url, { headers: { "User-Agent": "ovrael-astal-bar" } });
        const json = await response.json();
        if (json === void 0 || json.error !== void 0 && json.error.length > 0 || json.address === void 0) {
          continue;
        }
        const address = json.address;
        if (address.city) {
          this.localizations[i].name = address.city;
        } else if (address.town) {
          this.localizations[i].name = address.town;
        } else if (address.village) {
          this.localizations[i].name = address.village;
        }
        if (this.localizations[i].name.length > 0)
          autogetLocalizations.push(new AutogetLocalization(this.localizations[i], i));
      }
      await this.saveNamesToFile(autogetLocalizations);
    } catch (error) {
      console.log("checkLocalizationNames");
      console.log(error);
    }
  }
  async checkLocalizationNamesFromFile() {
    const autogetLocalizations = await this.loadNamesFromFile();
    for (let i = 0; i < this.localizations.length; i++) {
      const loc = this.localizations[i];
      if (loc.name.length > 0) {
        continue;
      }
      const autogetLocalization = autogetLocalizations.find((l) => l.index === i);
      if (autogetLocalization === void 0)
        continue;
      if (autogetLocalization.latitude === loc.latitude && autogetLocalization.longitude === loc.longitude) {
        this.localizations[i].name = autogetLocalization.name;
      } else {
        autogetLocalizations.splice(i, 1);
      }
    }
    return autogetLocalizations;
  }
  async saveNamesToFile(autogetLocalizations) {
    await writeFileAsync(
      this.savedAutogetNamesPath,
      JSON.stringify(autogetLocalizations, void 0, "	")
    );
  }
  async loadNamesFromFile() {
    try {
      const savedNames = await readFileAsync(this.savedAutogetNamesPath);
      return JSON.parse(savedNames);
    } catch (error) {
      Communication.printError(
        "Cannot load autoget localization names from file => error: " + error,
        "WeatherConfiguration"
      );
    }
    return [];
  }
};
var AutogetLocalization = class {
  constructor(localization, index) {
    this.name = "";
    this.index = -1;
    this.latitude = -1;
    this.longitude = -1;
    this.name = localization.name;
    this.index = index;
    this.latitude = localization.latitude;
    this.longitude = localization.longitude;
  }
};

// models/configuration/notification_configuration.ts
var NotificationConfiguration = class {
  constructor() {
    this.historyEntries = 100;
    this.historyPath = `data/notification/history.json`;
  }
};

// models/configuration/configuration.ts
var CONFIG_PATH = "config/config.json";
var Configuration = class _Configuration {
  constructor() {
    this.pwd = void 0;
    this.general = new GeneralConfiguration();
    this.timer = new TimerConfiguration();
    this.weather = new WeatherConfiguration();
    this.weatherState = createState(new WeatherConfiguration());
    this.notifiaction = new NotificationConfiguration();
    this.texts = createState(new LocaliztionTexts(""));
    this.fileMonitor = void 0;
  }
  static {
    this.instance = void 0;
  }
  getTexts() {
    return this.texts[0].get();
  }
  static async create() {
    if (_Configuration.instance !== void 0)
      return _Configuration.instance;
    const configJson = await readFileAsync(`${CONFIG_PATH}`);
    const fileConfig = JSON.parse(configJson);
    const config = new _Configuration();
    config.texts[1](new LocaliztionTexts(config.general.languageCode));
    config.general.languageCode = fileConfig.general.languageCode;
    config.general.dateFormat = fileConfig.general.dateFormat;
    config.general.timeFormat = fileConfig.general.timeFormat;
    config.timer.defaultTimerTimeSeconds = fileConfig.timer.defaultTimerTimeSeconds;
    config.timer.maxRunningTimers = fileConfig.timer.maxRunningTimers;
    config.timer.alarmSoundFilePath = fileConfig.timer.alarmSoundFilePath;
    config.timer.alarmSoundLengthInSeconds = fileConfig.timer.alarmSoundLengthInSeconds;
    const weatherConfig = WeatherConfiguration.fromConfigFile(fileConfig.weather);
    weatherConfig.checkLocalizationNames();
    config.weather = weatherConfig;
    config.weatherState = createState(weatherConfig);
    config.notifiaction.historyEntries = config.notifiaction.historyEntries;
    config.notifiaction.historyPath = config.notifiaction.historyPath;
    config.addFileMonitorHandler();
    _Configuration.instance = config;
    return config;
  }
  async getPwd() {
    if (this.pwd !== void 0)
      return this.pwd;
    try {
      const output = await execAsync(["pwd"]);
      if (output === void 0)
        return "";
      this.pwd = output.trim();
      return this.pwd;
    } catch (err) {
      Communication.printError("Cannot get pwd");
    }
    return "";
  }
  addFileMonitorHandler() {
    if (this.fileMonitor !== void 0)
      return;
    this.fileMonitor = monitorFile(`${CONFIG_PATH}`, async (file, event) => {
      switch (event) {
        // Can read file, update configuration
        case Gio4.FileMonitorEvent.CHANGES_DONE_HINT:
        case Gio4.FileMonitorEvent.CREATED:
        case Gio4.FileMonitorEvent.MOVED_IN:
          await this.update();
          break;
        // Do nothing
        case Gio4.FileMonitorEvent.CHANGED:
        case Gio4.FileMonitorEvent.ATTRIBUTE_CHANGED:
        case Gio4.FileMonitorEvent.DELETED:
        case Gio4.FileMonitorEvent.MOVED:
        case Gio4.FileMonitorEvent.MOVED_OUT:
        case Gio4.FileMonitorEvent.PRE_UNMOUNT:
        case Gio4.FileMonitorEvent.RENAMED:
        case Gio4.FileMonitorEvent.UNMOUNTED:
          break;
        default:
          Communication.printWarning("Config file changed but event is not handled.");
          break;
      }
    });
  }
  async update() {
    try {
      const configJson = await readFileAsync(`${CONFIG_PATH}`);
      const fileConfig = JSON.parse(configJson);
      this.texts[1](new LocaliztionTexts(fileConfig.general.languageCode));
      const weatherConfig = WeatherConfiguration.fromConfigFile(fileConfig.weather);
      await weatherConfig.checkLocalizationNames();
      this.weather = weatherConfig;
      this.weatherState[1](weatherConfig);
    } catch (error) {
      Communication.printError("Cannot update configuration, please reload AGS");
    }
  }
};

// widget/notification_manager/notification_manager.tsx
import AstalNotifd2 from "gi://AstalNotifd";

// widget/notification_manager/notification_popup.tsx
import Gtk5 from "gi://Gtk?version=4.0";
import Gdk3 from "gi://Gdk?version=4.0";
import Adw from "gi://Adw";
import GLib4 from "gi://GLib";
import AstalNotifd from "gi://AstalNotifd";
import Pango2 from "gi://Pango";
function isIcon(icon) {
  const iconTheme = Gtk5.IconTheme.get_for_display(Gdk3.Display.get_default());
  return icon && iconTheme.has_icon(icon);
}
function fileExists(path) {
  return GLib4.file_test(path, GLib4.FileTest.EXISTS);
}
function time(time2, format = "%H:%M") {
  return GLib4.DateTime.new_from_unix_local(time2).format(format);
}
function getUrgency(n) {
  const { LOW, NORMAL, CRITICAL } = AstalNotifd.Urgency;
  switch (n.urgency) {
    case LOW:
      return "low";
    case NORMAL:
      return "normal";
    case CRITICAL:
      return "critical";
    default:
      return "normal";
  }
}
function NotificationPopup({
  notification: n
}) {
  const urgency = getUrgency(n);
  let timeoutInterval = void 0;
  let [getLeftTimeout, setLeftTimeout] = createState(-1);
  if (n.expireTimeout > 0) {
    setLeftTimeout(n.expireTimeout);
    timeoutInterval = interval(20, () => {
      setLeftTimeout((v) => v - 20);
    });
    timeout(n.expireTimeout, () => {
      if (timeoutInterval) timeoutInterval.cancel();
    });
  }
  return /* @__PURE__ */ jsx(Adw.Clamp, { maximumSize: 400, children: /* @__PURE__ */ jsxs(
    "box",
    {
      widthRequest: 400,
      class: `notification notification-${urgency}`,
      orientation: Gtk5.Orientation.VERTICAL,
      children: [
        /* @__PURE__ */ jsxs("box", { class: "header", children: [
          (n.appIcon || isIcon(n.desktopEntry)) && /* @__PURE__ */ jsx(
            "image",
            {
              class: "app-icon",
              visible: Boolean(n.appIcon || n.desktopEntry),
              iconName: n.appIcon || n.desktopEntry
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              class: "app-name",
              halign: Gtk5.Align.START,
              ellipsize: Pango2.EllipsizeMode.END,
              label: n.appName || "Unknown"
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              class: "time",
              hexpand: true,
              halign: Gtk5.Align.END,
              label: time(n.time)
            }
          ),
          /* @__PURE__ */ jsx("button", { onClicked: () => n.dismiss(), label: icons.close })
        ] }),
        /* @__PURE__ */ jsx(
          Gtk5.Separator,
          {
            visible: true,
            heightRequest: 2,
            marginBottom: 6,
            class: `separate-bar-${urgency}`
          }
        ),
        /* @__PURE__ */ jsxs("box", { class: "content", children: [
          n.image && fileExists(n.image) && /* @__PURE__ */ jsx("image", { valign: Gtk5.Align.START, class: "image", file: n.image }),
          n.image && isIcon(n.image) && /* @__PURE__ */ jsx("box", { valign: Gtk5.Align.START, class: "icon-image", children: /* @__PURE__ */ jsx(
            "image",
            {
              iconName: n.image,
              halign: Gtk5.Align.CENTER,
              valign: Gtk5.Align.CENTER
            }
          ) }),
          /* @__PURE__ */ jsxs("box", { orientation: Gtk5.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx(
              "label",
              {
                class: "summary",
                halign: Gtk5.Align.START,
                xalign: 0,
                label: n.summary,
                ellipsize: Pango2.EllipsizeMode.END
              }
            ),
            n.body && /* @__PURE__ */ jsx(
              "label",
              {
                class: "body",
                wrap: true,
                useMarkup: true,
                halign: Gtk5.Align.START,
                xalign: 0,
                justify: Gtk5.Justification.FILL,
                label: n.body
              }
            ),
            n.expireTimeout > 0 && /* @__PURE__ */ jsx("box", { marginTop: 5, children: /* @__PURE__ */ jsx(
              "levelbar",
              {
                cssClasses: [`timeout-bar-${urgency}`],
                heightRequest: 7,
                hexpand: true,
                minValue: 0,
                maxValue: n.expireTimeout,
                value: getLeftTimeout
              }
            ) })
          ] })
        ] }),
        n.actions.length > 0 && /* @__PURE__ */ jsxs("box", { class: "actions", orientation: Gtk5.Orientation.VERTICAL, children: [
          /* @__PURE__ */ jsx(
            Gtk5.Separator,
            {
              visible: true,
              heightRequest: 2,
              marginBottom: 6,
              class: `separate-bar-${urgency}`
            }
          ),
          n.actions.map(({ label, id }) => /* @__PURE__ */ jsx("button", { hexpand: true, onClicked: () => n.invoke(id), children: /* @__PURE__ */ jsx("label", { label, halign: Gtk5.Align.CENTER, hexpand: true }) }))
        ] })
      ]
    }
  ) });
}

// widget/notification_manager/notification_manager.tsx
function NotificationManager() {
  const monitors2 = createBinding(app_default, "monitors");
  const notifd = AstalNotifd2.get_default();
  notifd.ignoreTimeout = false;
  const [notifications, setNotifications] = createState(
    new Array()
  );
  const notifiedHandler = notifd.connect("notified", (_, id, replaced) => {
    console.log("NOTIFIED");
    const notification = notifd.get_notification(id);
    console.log(`${notification.summary} ${notification.body}`);
    if (replaced && notifications.get().some((n) => n.id === id)) {
      setNotifications((ns) => ns.map((n) => n.id === id ? notification : n));
    } else {
      setNotifications((ns) => [notification, ...ns]);
    }
  });
  function getReason(reason) {
    switch (reason) {
      case AstalNotifd2.ClosedReason.CLOSED:
        return "closed";
      case AstalNotifd2.ClosedReason.DISMISSED_BY_USER:
        return "dismissed";
      case AstalNotifd2.ClosedReason.EXPIRED:
        return "expired";
      case AstalNotifd2.ClosedReason.UNDEFINED:
      default:
        return "undefined";
    }
  }
  const resolvedHandler = notifd.connect("resolved", (n, id, reason) => {
    console.log(
      `Reason: ${getReason(
        reason
      )}, Resolving id: ${id}, notifications: ${n.notifications.map((n3) => n3.id).join(", ")}`
    );
    const x = notifications((n3) => n3.find((n22) => n22.id === id));
    const n2 = x.get();
    console.log(`${n2?.summary} ${n2?.body}`);
    setNotifications((ns) => ns.filter((n3) => n3.id !== id));
  });
  onCleanup(() => {
    notifd.disconnect(notifiedHandler);
    notifd.disconnect(resolvedHandler);
  });
  return /* @__PURE__ */ jsx(For, { each: monitors2, children: (monitor) => /* @__PURE__ */ jsx(
    "window",
    {
      $: (self) => onCleanup(() => self.destroy()),
      gdkmonitor: monitor,
      css: `
            background-color: transparent;
          `,
      visible: notifications((ns) => ns.length > 0),
      anchor: Astal2.WindowAnchor.TOP | Astal2.WindowAnchor.RIGHT,
      children: /* @__PURE__ */ jsx(
        "box",
        {
          orientation: Gtk2.Orientation.VERTICAL,
          css: `
              background-color: transparent;
            `,
          spacing: 10,
          children: /* @__PURE__ */ jsx(For, { each: notifications, children: (notification) => /* @__PURE__ */ jsx(NotificationPopup, { notification }) })
        }
      )
    }
  ) });
}

// app.ts
var monitors = app_default.get_monitors();
var mainMonitor = monitors.filter((m) => m.description?.includes("AW3423DWF"))[0];
if (mainMonitor == void 0)
  mainMonitor = monitors[monitors.length - 1];
var configuration = await Configuration.create();
await weatherApi.init();
await TimerUtils.loadTimersFromFile();
await SoundPlayer.init();
app_default.start({
  css: main_default,
  main() {
    bar(mainMonitor);
    NotificationManager();
  }
});
export {
  configuration
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9zcmMvZ3RrNC9hcHAudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9zcmMvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvc3JjL19hcHAudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9nbmltL3NyYy9qc3gvc2NvcGUudHMiLCAic2FzczovaG9tZS9qYWNlay8uY29uZmlnL2Fncy9zdHlsZXMvbWFpbi5zY3NzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvc3JjL2d0azQvaW5kZXgudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9zcmMvcHJvY2Vzcy50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2duaW0vc3JjL2pzeC9qc3gudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9nbmltL3NyYy9qc3gvc3RhdGUudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9nbmltL3NyYy91dGlsLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvZ25pbS9zcmMvanN4L2Vudi50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2duaW0vc3JjL2pzeC9GcmFnbWVudC50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2duaW0vc3JjL2dub21lL3NpZ25hbFRyYWNrZXIudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9nbmltL3NyYy9qc3gvRm9yLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvZ25pbS9zcmMvanN4L1dpdGgudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9zcmMvdGltZS50cyIsICJ3aWRnZXQvdGltZXIvdGltZXJzX2RhdGEudHN4IiwgIndpZGdldC90aW1lci90aW1lcl92YXJpYWJsZXMudHN4IiwgIndpZGdldC90aW1lci90aW1lcl9oZWxwZXJfZnVuY3Rpb25zLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvc3JjL2ZpbGUudHMiLCAibW9kZWxzL3V0aWxzL2NvbW11bmljYXRpb24udHMiLCAibW9kZWxzL3V0aWxzL3NvdW5kX3BsYXllci50cyIsICJtb2RlbHMvY29uc3RhbnRzL3RpbWVyX2NvbnN0YW50cy50cyIsICJtb2RlbHMvdXRpbHMvbm90aWZpY2F0aW9uX3NlbmRlci50cyIsICJtb2RlbHMvdXRpbHMvdG9vbHMudHMiLCAibW9kZWxzL3RleHRzL3RleHRfaWNvbnMudHMiLCAiLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9zcmMvZ3RrNC9qc3gtcnVudGltZS50cyIsICIuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2duaW0vc3JjL2d0azQvanN4LXJ1bnRpbWUudHMiLCAid2lkZ2V0L3RpbWVyL3J1bm5pbmdfdGltZXIudHN4IiwgIndpZGdldC90aW1lci90aW1lcl91dGlscy50c3giLCAid2lkZ2V0L3RpbWVyL3NhdmVkX3RpbWVyLnRzeCIsICJ3aWRnZXQvdGltZXIvdGltZXJfZGlnaXQudHMiLCAid2lkZ2V0L3RpbWVyL3NhdmVfdGltZXJfd2luZG93LnRzeCIsICJ3aWRnZXQvdGltZXIvdGltZXJfcG9wb3Zlci50c3giLCAid2lkZ2V0L3RpbWVyL3RpbWVyLnRzeCIsICJ3aWRnZXQvbmV0d29ya19zdGF0dXMvbmV0d29ya19zdGF0dXMudHN4IiwgIndpZGdldC9uZXR3b3JrX3N0YXR1cy9uZXR3b3JrX3N0YXR1c19wb3BvdmVyLnRzeCIsICJ3aWRnZXQvbmV0d29ya19zdGF0dXMvY3VycmVudF9jb25uZWN0aW9uX3N0YXR1cy50c3giLCAid2lkZ2V0L25ldHdvcmtfc3RhdHVzL2ludGVybmV0X3NwZWVkLnRzIiwgIi4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvZ25pbS9zcmMvZmV0Y2gudHMiLCAid2lkZ2V0L3dlYXRoZXIvd2VhdGhlcl9kYXRhLnRzIiwgIndpZGdldC93ZWF0aGVyL2xvY2FsaXphdGlvbl93ZWF0aGVyX2RhdGEudHMiLCAid2lkZ2V0L3dlYXRoZXIvd2VhdGhlcl9hcGkudHMiLCAibW9kZWxzL3V0aWxzL2RhdGVfdG9vbHMudHMiLCAid2lkZ2V0L3dlYXRoZXIvd2VhdGhlcl9wb3BvdmVyLnRzeCIsICJ3aWRnZXQvd2VhdGhlci93ZWF0aGVyLnRzeCIsICJ3aWRnZXQvYXVkaW9fbWFuYWdlci9hdWRpb19tYW5hZ2VyX3BvcG92ZXIudHN4IiwgIndpZGdldC9hdWRpb19tYW5hZ2VyL2F1ZGlvX21hbmFnZXIudHN4IiwgIndpZGdldC9ub3RpZmljYXRpb25faGlzdG9yeS9ub3RpZmljYXRpb25faGlzdG9yeV9wb3BvdmVyLnRzeCIsICJ3aWRnZXQvbm90aWZpY2F0aW9uX2hpc3Rvcnkvbm90aWZpY2F0aW9uX2hpc3RvcnkudHN4IiwgIndpZGdldC9iYXIudHN4IiwgIm1vZGVscy9jb25maWd1cmF0aW9uL3RpbWVyX2NvbmZpZ3VyYXRpb24udHMiLCAibW9kZWxzL2NvbmZpZ3VyYXRpb24vZ2VuZXJhbF9jb25maWd1cmF0aW9uLnRzIiwgIm1vZGVscy90ZXh0cy90aW1lcl90ZXh0cy50cyIsICJtb2RlbHMvdGV4dHMvZ2VuZXJhbF90ZXh0cy50cyIsICJtb2RlbHMvdGV4dHMvbmV0d29ya190ZXh0cy50cyIsICJtb2RlbHMvdGV4dHMvd2VhdGhlcl90ZXh0cy50cyIsICJtb2RlbHMvdGV4dHMvYXVkaW9fbWFuYWdlcl90ZXh0cy50cyIsICJtb2RlbHMvdGV4dHMvbG9jYWxpemF0aW9uX3RleHRzLnRzIiwgIm1vZGVscy9jb25maWd1cmF0aW9uL2NvbmZpZ3VyYXRpb24udHMiLCAibW9kZWxzL2NvbmZpZ3VyYXRpb24vd2VhdGhlcl9jb25maWd1cmF0aW9uLnRzIiwgIm1vZGVscy9jb25maWd1cmF0aW9uL25vdGlmaWNhdGlvbl9jb25maWd1cmF0aW9uLnRzIiwgIndpZGdldC9ub3RpZmljYXRpb25fbWFuYWdlci9ub3RpZmljYXRpb25fbWFuYWdlci50c3giLCAid2lkZ2V0L25vdGlmaWNhdGlvbl9tYW5hZ2VyL25vdGlmaWNhdGlvbl9wb3B1cC50c3giLCAiYXBwLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJpbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgeyBta0FwcCB9IGZyb20gXCIuLi9fYXBwLmpzXCJcblxuR3RrLmluaXQoKVxuXG4vLyBzdG9wIHRoaXMgZnJvbSBsZWFraW5nIGludG8gc3VicHJvY2Vzc2VzXG4vLyBhbmQgZ2lvIGxhdW5jaCBpbnZvY2F0aW9uc1xuR0xpYi51bnNldGVudihcIkxEX1BSRUxPQURcIilcblxuLy8gdXNlcnMgbWlnaHQgd2FudCB0byB1c2UgQWR3YWl0YSBpbiB3aGljaCBjYXNlIGl0IGhhcyB0byBiZSBpbml0aWFsaXplZFxuLy8gaXQgbWlnaHQgYmUgY29tbW9uIHBpdGZhbGwgdG8gZm9yZ2V0IGl0IGJlY2F1c2UgYEFwcGAgaXMgbm90IGBBZHcuQXBwbGljYXRpb25gXG5hd2FpdCBpbXBvcnQoXCJnaTovL0Fkdz92ZXJzaW9uPTFcIikudGhlbigoeyBkZWZhdWx0OiBBZHcgfSkgPT4gQWR3LmluaXQoKSkuY2F0Y2goKCkgPT4gdm9pZCAwKVxuXG5leHBvcnQgZGVmYXVsdCBta0FwcChBc3RhbC5BcHBsaWNhdGlvbilcbiIsICIvKipcbiAqIFdvcmthcm91bmQgZm9yIFwiQ2FuJ3QgY29udmVydCBub24tbnVsbCBwb2ludGVyIHRvIEpTIHZhbHVlIFwiXG4gKi9cblxuZXhwb3J0IHt9XG5cbmZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMV8kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHN1cHByZXNzPFQ+KG1vZDogUHJvbWlzZTx7IGRlZmF1bHQ6IFQgfT4sIHBhdGNoOiAobTogVCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBtb2QudGhlbigobSkgPT4gcGF0Y2gobS5kZWZhdWx0KSkuY2F0Y2goKCkgPT4gdm9pZCAwKVxufVxuXG5mdW5jdGlvbiBwYXRjaDxQIGV4dGVuZHMgb2JqZWN0Pihwcm90bzogUCwgcHJvcDogRXh0cmFjdDxrZXlvZiBQLCBzdHJpbmc+KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvLCBwcm9wLCB7XG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzW2BnZXRfJHtzbmFrZWlmeShwcm9wKX1gXSgpXG4gICAgICAgIH0sXG4gICAgfSlcbn1cblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEFwcHNcIiksICh7IEFwcHMsIEFwcGxpY2F0aW9uIH0pID0+IHtcbiAgICBwYXRjaChBcHBzLnByb3RvdHlwZSwgXCJsaXN0XCIpXG4gICAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCBcImtleXdvcmRzXCIpXG4gICAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCBcImNhdGVnb3JpZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxCYXR0ZXJ5XCIpLCAoeyBVUG93ZXIgfSkgPT4ge1xuICAgIHBhdGNoKFVQb3dlci5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJsdWV0b290aFwiKSwgKHsgQWRhcHRlciwgQmx1ZXRvb3RoLCBEZXZpY2UgfSkgPT4ge1xuICAgIHBhdGNoKEFkYXB0ZXIucHJvdG90eXBlLCBcInV1aWRzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJhZGFwdGVyc1wiKVxuICAgIHBhdGNoKEJsdWV0b290aC5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKERldmljZS5wcm90b3R5cGUsIFwidXVpZHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxIeXBybGFuZFwiKSwgKHsgSHlwcmxhbmQsIE1vbml0b3IsIFdvcmtzcGFjZSB9KSA9PiB7XG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcImJpbmRzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcIm1vbml0b3JzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcIndvcmtzcGFjZXNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiY2xpZW50c1wiKVxuICAgIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCBcImF2YWlsYWJsZU1vZGVzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlX21vZGVzXCIpXG4gICAgcGF0Y2goV29ya3NwYWNlLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTXByaXNcIiksICh7IE1wcmlzLCBQbGF5ZXIgfSkgPT4ge1xuICAgIHBhdGNoKE1wcmlzLnByb3RvdHlwZSwgXCJwbGF5ZXJzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRfdXJpX3NjaGVtZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZFVyaVNjaGVtZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF9taW1lX3R5cGVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRNaW1lVHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcImNvbW1lbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTmV0d29ya1wiKSwgKHsgV2lmaSB9KSA9PiB7XG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzX3BvaW50c1wiKVxuICAgIHBhdGNoKFdpZmkucHJvdG90eXBlLCBcImFjY2Vzc1BvaW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE5vdGlmZFwiKSwgKHsgTm90aWZkLCBOb3RpZmljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKE5vdGlmZC5wcm90b3R5cGUsIFwibm90aWZpY2F0aW9uc1wiKVxuICAgIHBhdGNoKE5vdGlmaWNhdGlvbi5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFBvd2VyUHJvZmlsZXNcIiksICh7IFBvd2VyUHJvZmlsZXMgfSkgPT4ge1xuICAgIHBhdGNoKFBvd2VyUHJvZmlsZXMucHJvdG90eXBlLCBcImFjdGlvbnNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxXcFwiKSwgKHsgV3AsIEF1ZGlvLCBWaWRlbyB9KSA9PiB7XG4gICAgcGF0Y2goV3AucHJvdG90eXBlLCBcImVuZHBvaW50c1wiKVxuICAgIHBhdGNoKFdwLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInN0cmVhbXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwicmVjb3JkZXJzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcIm1pY3JvcGhvbmVzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInNwZWFrZXJzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic3RyZWFtc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJyZWNvcmRlcnNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic2lua3NcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic291cmNlc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsVHJheVwiKSwgKHsgVHJheSB9KSA9PiB7XG4gICAgcGF0Y2goVHJheS5wcm90b3R5cGUsIFwiaXRlbXNcIilcbn0pXG4iLCAiaW1wb3J0IFwiLi9vdmVycmlkZXMuanNcIlxuaW1wb3J0IHsgc2V0Q29uc29sZUxvZ0RvbWFpbiB9IGZyb20gXCJjb25zb2xlXCJcbmltcG9ydCB7IGV4aXQsIHByb2dyYW1BcmdzIH0gZnJvbSBcInN5c3RlbVwiXG5pbXBvcnQgeyBjcmVhdGVSb290IH0gZnJvbSBcIi4uL2duaW0vc3JjL2pzeC9zY29wZS5qc1wiXG5pbXBvcnQgSU8gZnJvbSBcImdpOi8vQXN0YWxJT1wiXG5pbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcbmltcG9ydCB0eXBlIEFzdGFsMyBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTMuMFwiXG5pbXBvcnQgdHlwZSBBc3RhbDQgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuXG50eXBlIENvbmZpZyA9IFBhcnRpYWw8e1xuICAgIGluc3RhbmNlTmFtZTogc3RyaW5nXG4gICAgY3NzOiBzdHJpbmdcbiAgICBpY29uczogc3RyaW5nXG4gICAgZ3RrVGhlbWU6IHN0cmluZ1xuICAgIGljb25UaGVtZTogc3RyaW5nXG4gICAgY3Vyc29yVGhlbWU6IHN0cmluZ1xuICAgIGhvbGQ6IGJvb2xlYW5cbiAgICByZXF1ZXN0SGFuZGxlcihyZXF1ZXN0OiBzdHJpbmcsIHJlczogKHJlc3BvbnNlOiBhbnkpID0+IHZvaWQpOiB2b2lkXG4gICAgbWFpbiguLi5hcmdzOiBzdHJpbmdbXSk6IHZvaWRcbiAgICBjbGllbnQobWVzc2FnZTogKG1zZzogc3RyaW5nKSA9PiBzdHJpbmcsIC4uLmFyZ3M6IHN0cmluZ1tdKTogdm9pZFxufT5cblxuaW50ZXJmYWNlIEFzdGFsM0pTIGV4dGVuZHMgQXN0YWwzLkFwcGxpY2F0aW9uIHtcbiAgICBldmFsKGJvZHk6IHN0cmluZyk6IFByb21pc2U8YW55PlxuICAgIHJlcXVlc3RIYW5kbGVyOiBDb25maWdbXCJyZXF1ZXN0SGFuZGxlclwiXVxuICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldD86IGJvb2xlYW4pOiB2b2lkXG4gICAgcXVpdChjb2RlPzogbnVtYmVyKTogdm9pZFxuICAgIHN0YXJ0KGNvbmZpZz86IENvbmZpZyk6IHZvaWRcbn1cblxuaW50ZXJmYWNlIEFzdGFsNEpTIGV4dGVuZHMgQXN0YWw0LkFwcGxpY2F0aW9uIHtcbiAgICBldmFsKGJvZHk6IHN0cmluZyk6IFByb21pc2U8YW55PlxuICAgIHJlcXVlc3RIYW5kbGVyPzogQ29uZmlnW1wicmVxdWVzdEhhbmRsZXJcIl1cbiAgICBhcHBseV9jc3Moc3R5bGU6IHN0cmluZywgcmVzZXQ/OiBib29sZWFuKTogdm9pZFxuICAgIHF1aXQoY29kZT86IG51bWJlcik6IHZvaWRcbiAgICBzdGFydChjb25maWc/OiBDb25maWcpOiB2b2lkXG59XG5cbnR5cGUgQXBwMyA9IHR5cGVvZiBBc3RhbDMuQXBwbGljYXRpb25cbnR5cGUgQXBwNCA9IHR5cGVvZiBBc3RhbDQuQXBwbGljYXRpb25cblxuZXhwb3J0IGZ1bmN0aW9uIG1rQXBwPEFwcCBleHRlbmRzIEFwcDM+KEFwcDogQXBwKTogQXN0YWwzSlNcbmV4cG9ydCBmdW5jdGlvbiBta0FwcDxBcHAgZXh0ZW5kcyBBcHA0PihBcHA6IEFwcCk6IEFzdGFsNEpTXG5cbmV4cG9ydCBmdW5jdGlvbiBta0FwcChBcHA6IEFwcDMgfCBBcHA0KSB7XG4gICAgcmV0dXJuIG5ldyAoY2xhc3MgQXN0YWxKUyBleHRlbmRzIEFwcCB7XG4gICAgICAgIHByaXZhdGUgZGlzcG9zZVJvb3Q/OiAoKSA9PiB2b2lkXG5cbiAgICAgICAgc3RhdGljIHtcbiAgICAgICAgICAgIEdPYmplY3QucmVnaXN0ZXJDbGFzcyh7IEdUeXBlTmFtZTogXCJBc3RhbEpTXCIgfSwgdGhpcyBhcyBhbnkpXG4gICAgICAgIH1cblxuICAgICAgICBldmFsKGJvZHk6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlcywgcmVqKSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZm4gPSBGdW5jdGlvbihgcmV0dXJuIChhc3luYyBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICR7Ym9keS5pbmNsdWRlcyhcIjtcIikgPyBib2R5IDogYHJldHVybiAke2JvZHl9O2B9XG4gICAgICAgICAgICAgICAgICAgIH0pYClcbiAgICAgICAgICAgICAgICAgICAgZm4oKSgpLnRoZW4ocmVzKS5jYXRjaChyZWopXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqKGVycm9yKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICByZXF1ZXN0SGFuZGxlcj86IENvbmZpZ1tcInJlcXVlc3RIYW5kbGVyXCJdXG5cbiAgICAgICAgdmZ1bmNfc2h1dGRvd24oKTogdm9pZCB7XG4gICAgICAgICAgICBzdXBlci52ZnVuY19zaHV0ZG93bigpXG4gICAgICAgICAgICB0aGlzLmRpc3Bvc2VSb290Py4oKVxuICAgICAgICB9XG5cbiAgICAgICAgdmZ1bmNfcmVxdWVzdChtc2c6IHN0cmluZywgY29ubjogR2lvLlNvY2tldENvbm5lY3Rpb24pOiB2b2lkIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5yZXF1ZXN0SGFuZGxlciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZXF1ZXN0SGFuZGxlcihtc2csIChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBJTy53cml0ZV9zb2NrKGNvbm4sIFN0cmluZyhyZXNwb25zZSksIChfLCByZXMpID0+IElPLndyaXRlX3NvY2tfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc3VwZXIudmZ1bmNfcmVxdWVzdChtc2csIGNvbm4pXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBhcHBseV9jc3Moc3R5bGU6IHN0cmluZywgcmVzZXQgPSBmYWxzZSkge1xuICAgICAgICAgICAgc3VwZXIuYXBwbHlfY3NzKHN0eWxlLCByZXNldClcbiAgICAgICAgfVxuXG4gICAgICAgIHF1aXQoY29kZT86IG51bWJlcik6IHZvaWQge1xuICAgICAgICAgICAgc3VwZXIucXVpdCgpXG4gICAgICAgICAgICBleGl0KGNvZGUgPz8gMClcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXJ0KHsgcmVxdWVzdEhhbmRsZXIsIGNzcywgaG9sZCwgbWFpbiwgY2xpZW50LCBpY29ucywgLi4uY2ZnIH06IENvbmZpZyA9IHt9KSB7XG4gICAgICAgICAgICBjb25zdCBhcHAgPSB0aGlzIGFzIHVua25vd24gYXMgSW5zdGFuY2VUeXBlPEFwcDMgfCBBcHA0PlxuXG4gICAgICAgICAgICBjbGllbnQgPz89ICgpID0+IHtcbiAgICAgICAgICAgICAgICBwcmludChgQXN0YWwgaW5zdGFuY2UgXCIke2FwcC5pbnN0YW5jZU5hbWV9XCIgYWxyZWFkeSBydW5uaW5nYClcbiAgICAgICAgICAgICAgICBleGl0KDEpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgY2ZnKVxuICAgICAgICAgICAgc2V0Q29uc29sZUxvZ0RvbWFpbihhcHAuaW5zdGFuY2VOYW1lKVxuXG4gICAgICAgICAgICB0aGlzLnJlcXVlc3RIYW5kbGVyID0gcmVxdWVzdEhhbmRsZXJcbiAgICAgICAgICAgIGFwcC5jb25uZWN0KFwiYWN0aXZhdGVcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNyZWF0ZVJvb3QoKGRpc3Bvc2UpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kaXNwb3NlUm9vdCA9IGRpc3Bvc2VcbiAgICAgICAgICAgICAgICAgICAgbWFpbj8uKC4uLnByb2dyYW1BcmdzKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGFwcC5hY3F1aXJlX3NvY2tldCgpXG4gICAgICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2xpZW50KChtc2cpID0+IElPLnNlbmRfcmVxdWVzdChhcHAuaW5zdGFuY2VOYW1lLCBtc2cpISwgLi4ucHJvZ3JhbUFyZ3MpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjc3MpIHRoaXMuYXBwbHlfY3NzKGNzcywgZmFsc2UpXG5cbiAgICAgICAgICAgIGlmIChpY29ucykgYXBwLmFkZF9pY29ucyhpY29ucylcblxuICAgICAgICAgICAgaG9sZCA/Pz0gdHJ1ZVxuICAgICAgICAgICAgaWYgKGhvbGQpIGFwcC5ob2xkKClcblxuICAgICAgICAgICAgYXBwLnJ1bkFzeW5jKFtdKVxuICAgICAgICB9XG4gICAgfSkoKVxufVxuIiwgImV4cG9ydCBjbGFzcyBTY29wZSB7XG4gICAgc3RhdGljIGN1cnJlbnQ6IFNjb3BlIHwgbnVsbFxuXG4gICAgcGFyZW50PzogU2NvcGUgfCBudWxsXG4gICAgY29udGV4dD86IGFueVxuXG4gICAgcHJpdmF0ZSBjbGVhbnVwcyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG4gICAgcHJpdmF0ZSBtb3VudGVkID0gZmFsc2VcblxuICAgIGNvbnN0cnVjdG9yKHBhcmVudDogU2NvcGUgfCBudWxsKSB7XG4gICAgICAgIHRoaXMucGFyZW50ID0gcGFyZW50XG4gICAgfVxuXG4gICAgb25DbGVhbnVwKGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIHRoaXMuY2xlYW51cHM/LmFkZChjYWxsYmFjaylcbiAgICB9XG5cbiAgICBvbk1vdW50KGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudCAmJiAhdGhpcy5wYXJlbnQubW91bnRlZCkge1xuICAgICAgICAgICAgdGhpcy5wYXJlbnQub25Nb3VudChjYWxsYmFjaylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmFkZChjYWxsYmFjaylcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJ1bjxUPihmbjogKCkgPT4gVCkge1xuICAgICAgICBjb25zdCBwcmV2ID0gU2NvcGUuY3VycmVudFxuICAgICAgICBTY29wZS5jdXJyZW50ID0gdGhpc1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gZm4oKVxuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgdGhpcy5tb3VudHMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICB0aGlzLm1vdW50cy5jbGVhcigpXG4gICAgICAgICAgICB0aGlzLm1vdW50ZWQgPSB0cnVlXG4gICAgICAgICAgICBTY29wZS5jdXJyZW50ID0gcHJldlxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwcy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgdGhpcy5jbGVhbnVwcy5jbGVhcigpXG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmVudFxuICAgICAgICBkZWxldGUgdGhpcy5jb250ZXh0XG4gICAgfVxufVxuXG5leHBvcnQgdHlwZSBDb250ZXh0PFQgPSBhbnk+ID0ge1xuICAgIHVzZSgpOiBUXG4gICAgcHJvdmlkZTxSPih2YWx1ZTogVCwgZm46ICgpID0+IFIpOiBSXG4gICAgKHByb3BzOiB7IHZhbHVlOiBUOyBjaGlsZHJlbjogKCkgPT4gSlNYLkVsZW1lbnQgfSk6IEpTWC5FbGVtZW50XG59XG5cbi8qKlxuICogRXhhbXBsZSBVc2FnZTpcbiAqIGBgYHRzeFxuICogY29uc3QgTXlDb250ZXh0ID0gY3JlYXRlQ29udGV4dChcImZhbGxiYWNrLXZhbHVlXCIpXG4gKlxuICogZnVuY3Rpb24gQ29uc3VtZXJDb21wb25lbnQoKSB7XG4gKiAgIGNvbnN0IHZhbHVlID0gTXlDb250ZXh0LnVzZSgpXG4gKlxuICogICByZXR1cm4gPEd0ay5MYWJlbCBsYWJlbD17dmFsdWV9IC8+XG4gKiB9XG4gKlxuICogZnVuY3Rpb24gUHJvdmlkZXJDb21wb25lbnQoKSB7XG4gKiAgIHJldHVybiAoXG4gKiAgICAgPEd0ay5Cb3g+XG4gKiAgICAgICA8TXlDb250ZXh0IHZhbHVlPVwibXktdmFsdWVcIj5cbiAqICAgICAgICAgeygpID0+IDxDb25zdW1lckNvbXBvbmVudCAvPn1cbiAqICAgICAgIDwvTXlDb250ZXh0PlxuICogICAgIDwvR3RrLkJveD5cbiAqICAgKVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb250ZXh0PFQ+KGRlZmF1bHRWYWx1ZTogVCk6IENvbnRleHQ8VD4ge1xuICAgIGZ1bmN0aW9uIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUiB7XG4gICAgICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKFNjb3BlLmN1cnJlbnQpXG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiBzY29wZS5kaXNwb3NlKCkpXG4gICAgICAgIHNjb3BlLmNvbnRleHQgPSB2YWx1ZVxuICAgICAgICByZXR1cm4gc2NvcGUucnVuKGZuKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVzZSgpOiBUIHtcbiAgICAgICAgbGV0IHNjb3BlID0gU2NvcGUuY3VycmVudFxuICAgICAgICB3aGlsZSAoc2NvcGUpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gc2NvcGUuY29udGV4dFxuICAgICAgICAgICAgaWYgKHZhbHVlKSByZXR1cm4gdmFsdWVcbiAgICAgICAgICAgIHNjb3BlID0gc2NvcGUucGFyZW50ID8/IG51bGxcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29udGV4dCh7IHZhbHVlLCBjaGlsZHJlbiB9OiB7IHZhbHVlOiBUOyBjaGlsZHJlbjogKCkgPT4gSlNYLkVsZW1lbnQgfSkge1xuICAgICAgICByZXR1cm4gcHJvdmlkZSh2YWx1ZSwgY2hpbGRyZW4pXG4gICAgfVxuXG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgICAgICBwcm92aWRlLFxuICAgICAgICB1c2UsXG4gICAgfSlcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBzY29wZSB0aGF0IG93bnMgdGhlIGN1cnJlbnRseSBydW5uaW5nIGNvZGUuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAqIHNldFRpbWVvdXQoKCkgPT4ge1xuICogICAvLyBUaGlzIGNhbGxiYWNrIGdldHMgcnVuIHdpdGhvdXQgYW4gb3duZXIgc2NvcGUuXG4gKiAgIC8vIFJlc3RvcmUgb3duZXIgdmlhIHNjb3BlLnJ1bjpcbiAqICAgc2NvcGUucnVuKCgpID0+IHtcbiAqICAgICBjb25zdCBmb28gPSBGb29Db250ZXh0LnVzZSgpXG4gKiAgICAgb25DbGVhbnVwKCgpID0+IHtcbiAqICAgICAgIHByaW50KFwic29tZSBjbGVhbnVwXCIpXG4gKiAgICAgfSlcbiAqICAgfSlcbiAqIH0sIDEwMDApXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNjb3BlKCk6IFNjb3BlIHtcbiAgICBjb25zdCBzY29wZSA9IFNjb3BlLmN1cnJlbnRcbiAgICBpZiAoIXNjb3BlKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiY2Fubm90IGdldCBzY29wZTogb3V0IG9mIHRyYWNraW5nIGNvbnRleHRcIilcbiAgICB9XG5cbiAgICByZXR1cm4gc2NvcGVcbn1cblxuLyoqXG4gKiBBdHRhY2ggYSBjbGVhbnVwIGNhbGxiYWNrIHRvIHRoZSBjdXJyZW50IHtAbGluayBTY29wZX0uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvbkNsZWFudXAoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwib3V0IG9mIHRyYWNraW5nIGNvbnRleHQ6IHdpbGwgbm90IGJlIGFibGUgdG8gY2xlYW51cFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbkNsZWFudXAoY2xlYW51cClcbn1cblxuLyoqXG4gKiBBdHRhY2ggYSBjYWxsYmFjayB0byBydW4gd2hlbiB0aGUgY3VycmVudGx5IHJ1bm5pbmcge0BsaW5rIFNjb3BlfSByZXR1cm5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25Nb3VudChjbGVhbnVwOiAoKSA9PiB2b2lkKSB7XG4gICAgaWYgKCFTY29wZS5jdXJyZW50KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoRXJyb3IoXCJjYW5ub3QgYXR0YWNoIG9uTW91bnQ6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpKVxuICAgIH1cblxuICAgIFNjb3BlLmN1cnJlbnQ/Lm9uTW91bnQoY2xlYW51cClcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgcm9vdCB7QGxpbmsgU2NvcGV9IHRoYXQgd2hlbiBkaXNwb3NlZCB3aWxsIHJlbW92ZVxuICogYW55IGNoaWxkIHNpZ25hbCBoYW5kbGVyIG9yIHN0YXRlIHN1YnNjcmliZXIuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzeFxuICogY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICogICBsZXQgcm9vdDogR3RrLldpbmRvd1xuICpcbiAqICAgY29uc3QgW3N0YXRlXSA9IGNyZWF0ZVN0YXRlKFwidmFsdWVcIilcbiAqXG4gKiAgIGNvbnN0IHJlbW92ZSA9ICgpID0+IHtcbiAqICAgICByb290LmRlc3Ryb3koKVxuICogICAgIGRpc3Bvc2UoKVxuICogICB9XG4gKlxuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuV2luZG93ICQ9eyhzZWxmKSA9PiAocm9vdCA9IHNlbGYpfT5cbiAqICAgICAgIDxHdGsuQm94PlxuICogICAgICAgICA8R3RrLkxhYmVsIGxhYmVsPXtzdGF0ZX0gLz5cbiAqICAgICAgICAgPEd0ay5CdXR0b24gJGNsaWNrZWQ9e3JlbW92ZX0gLz5cbiAqICAgICAgIDwvR3RrLkJveD5cbiAqICAgICA8L0d0ay5XaW5kb3c+XG4gKiAgIClcbiAqIH0pXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJvb3Q8VD4oZm46IChkaXNwb3NlOiAoKSA9PiB2b2lkKSA9PiBUKSB7XG4gICAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUobnVsbClcbiAgICByZXR1cm4gc2NvcGUucnVuKCgpID0+IGZuKCgpID0+IHNjb3BlLmRpc3Bvc2UoKSkpXG59XG4iLCAiLndlYXRoZXItYnV0dG9uIHtcbiAgbWFyZ2luOiAwcHg7XG4gIHBhZGRpbmc6IDBweDtcbn1cblxuLndlYXRoZXItYnV0dG9uLWxhYmVsLWNvbnRhaW5lciB7XG4gIHRyYW5zaXRpb246IGNvbG9yIDFzIGVhc2UsIGJhY2tncm91bmQtY29sb3IgMXMgZWFzZSwgYm9yZGVyIDFzIGVhc2U7XG59XG5cbi53ZWF0aGVyLWJ1dHRvbi1zdGF0dXMtbGFiZWwge1xuICBmb250LXNpemU6IDQ0cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBtYXJnaW46IDBweDtcbiAgcGFkZGluZzogMHB4O1xufVxuXG4ud2VhdGhlci1idXR0b24tc3VuIHtcbiAgY29sb3I6IHJnYmEoMjMwLCAyMzAsIDEyMCwgMC45NSk7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSgyMzAsIDIzMCwgMTIwLCAwLjIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIzMCwgMjMwLCAxMjAsIDAuMSk7XG59XG5cbi53ZWF0aGVyLWJ1dHRvbi1zdW46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIzMCwgMjMwLCAxMjAsIDAuMjE1KTtcbn1cblxuLndlYXRoZXItYnV0dG9uLW1vb24ge1xuICBjb2xvcjogcmdiYSgxNjAsIDE2MCwgMTYwLCAwLjk1KTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDE2MCwgMTYwLCAxNjAsIDAuMik7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYwLCAxNjAsIDE2MCwgMC4xKTtcbn1cblxuLndlYXRoZXItYnV0dG9uLW1vb246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2MCwgMTYwLCAxNjAsIDAuMjE1KTtcbn1cblxuLndlYXRoZXItYnV0dG9uLWNsb3VkLW1pZCB7XG4gIGNvbG9yOiByZ2JhKDE4MCwgMTgwLCAxNDAsIDAuOTUpO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMTgwLCAxODAsIDE0MCwgMC4yKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxODAsIDE4MCwgMTQwLCAwLjEpO1xufVxuXG4ud2VhdGhlci1idXR0b24tY2xvdWQtbWlkOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxODAsIDE4MCwgMTQwLCAwLjIxNSk7XG59XG5cbi53ZWF0aGVyLWJ1dHRvbi1jbG91ZC1mdWxsIHtcbiAgY29sb3I6IHJnYmEoMTE1LCAxMTUsIDExNSwgMC45NSk7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSgxMTUsIDExNSwgMTE1LCAwLjIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuMSk7XG59XG5cbi53ZWF0aGVyLWJ1dHRvbi1jbG91ZC1mdWxsOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMTUsIDExNSwgMTE1LCAwLjIxNSk7XG59XG5cbi53ZWF0aGVyLWJ1dHRvbi1yYWluIHtcbiAgY29sb3I6IHJnYmEoMTMwLCAxODAsIDI1MCwgMC45NSk7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSgxMzAsIDE4MCwgMjUwLCAwLjIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEzMCwgMTgwLCAyNTAsIDAuMSk7XG59XG5cbi53ZWF0aGVyLWJ1dHRvbi1yYWluOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzAsIDE4MCwgMjUwLCAwLjIxNSk7XG59XG5cbi53ZWF0aGVyLWJ1dHRvbi1zbm93IHtcbiAgY29sb3I6IHJnYmEoMjMwLCAyMzAsIDIzMCwgMC45NSk7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSgyMzAsIDIzMCwgMjMwLCAwLjIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIzMCwgMjMwLCAyMzAsIDAuMSk7XG59XG5cbi53ZWF0aGVyLWJ1dHRvbi1zbm93OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMzAsIDIzMCwgMjMwLCAwLjIxNSk7XG59XG5cbi53ZWF0aGVyLWJ1dHRvbi10aHVuZGVyc3Rvcm0ge1xuICBjb2xvcjogcmdiYSg1MCwgOTAsIDEzNSwgMC45KTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDUwLCA5MCwgMTM1LCAwLjIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDUwLCA5MCwgMTM1LCAwLjEpO1xufVxuXG4ud2VhdGhlci1idXR0b24tdGh1bmRlcnN0b3JtOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1MCwgOTAsIDEzNSwgMC4yMTUpO1xufVxuXG4uY3VycmVudC13ZWF0aGVyLWljb24ge1xuICBsaW5lLWhlaWdodDogMC41O1xuICBmb250LXNpemU6IDE2MHB4O1xuICBwYWRkaW5nOiA0cHggMTJweDtcbn1cblxuLndlYXRoZXItaWNvbi1ob3VybHkge1xuICBsaW5lLWhlaWdodDogMC41O1xuICBmb250LXNpemU6IDkwcHg7XG4gIHBhZGRpbmc6IDRweDtcbn1cblxuLndlYXRoZXItaWNvbi1kYWlseSB7XG4gIGxpbmUtaGVpZ2h0OiA2MHB4O1xuICBmb250LXNpemU6IDEyMHB4O1xuICBwYWRkaW5nOiA0cHg7XG59XG5cbi53ZWF0aGVyLWljb24tc3VuIHtcbiAgY29sb3I6IHJnYmEoMTgwLCAxODAsIDgwLCAwLjgpO1xufVxuXG4ud2VhdGhlci1pY29uLW1vb24ge1xuICBjb2xvcjogcmdiYSgxNjAsIDE2MCwgMTYwLCAwLjgpO1xufVxuXG4ud2VhdGhlci1pY29uLWNsb3VkLW1pZCB7XG4gIGNvbG9yOiByZ2JhKDE4MCwgMTgwLCAxNDAsIDAuOCk7XG59XG5cbi53ZWF0aGVyLWljb24tY2xvdWQtZnVsbCB7XG4gIGNvbG9yOiByZ2JhKDExNSwgMTE1LCAxMTUsIDAuOCk7XG59XG5cbi53ZWF0aGVyLWljb24tcmFpbiB7XG4gIGNvbG9yOiByZ2JhKDkwLCAxMjAsIDE3MCwgMC44KTtcbn1cblxuLndlYXRoZXItaWNvbi1zbm93IHtcbiAgY29sb3I6IHJnYmEoMjEwLCAyMTAsIDIxMCwgMC44KTtcbn1cblxuLndlYXRoZXItaWNvbi10aHVuZGVyc3Rvcm0ge1xuICBjb2xvcjogcmdiYSg0MCwgNzUsIDExNSwgMC44KTtcbn1cblxuLndlYXRoZXItbG9jYWxpemF0aW9uLWJ1dHRvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDEyOCwgMTI4LCAxMjgpO1xuICBjb2xvcjogcmdiKDIwMCwgMjAwLCAyMDApO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMCk7XG59XG5cbi53ZWF0aGVyLWxvY2FsaXphdGlvbi1idXR0b24ud2VhdGhlci1jdXJyZW50LWxvY2FsaXphdGlvbiB7XG4gIGNvbG9yOiByZ2IoMCwgMCwgMCk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDAsIDIwMCwgMjAwKTtcbn1cblxuLndlYXRoZXItcGFuZWwtbGFiZWwge1xuICBjb2xvcjogcmdiKDIwMCwgMjAwLCAyMDApO1xufVxuXG4ud2VhdGhlci1wYW5lbCB7XG4gIHBhZGRpbmc6IDZweDtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjAwLCAyMDAsIDIwMCk7XG59XG5cbi53ZWF0aGVyLXRpbWUtcGFuZWwge1xuICBjb2xvcjogcmdiKDE3MywgMTczLCAxNzMpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG4gIHBhZGRpbmc6IDRweDtcbn1cblxuLndlYXRoZXItdGVtcGVyYXR1cmUtbGFiZWwge1xuICBsaW5lLWhlaWdodDogMC41O1xuICBmb250LXNpemU6IDE2cHg7XG4gIHBhZGRpbmc6IDBweDtcbn1cblxuLmN1cnJlbnQtd2VhdGhlci10ZW1wZXJhdHVyZS1sYWJlbCB7XG4gIGxpbmUtaGVpZ2h0OiAwLjU7XG4gIGZvbnQtc2l6ZTogOTBweDtcbiAgcGFkZGluZzogNHB4O1xufVxuXG4ubmV0d29yay1idXR0b24ge1xuICBtYXJnaW46IDBweDtcbiAgcGFkZGluZzogMHB4O1xufVxuXG4ubmV0d29yay1idXR0b24tZ29vZCB7XG4gIGNvbG9yOiByZ2JhKDUwLCAxODAsIDEwMCwgMC45NSk7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSg1MCwgMTgwLCAxMDAsIDAuMik7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTAsIDE4MCwgMTAwLCAwLjEpO1xufVxuXG4ubmV0d29yay1idXR0b24tZ29vZDpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTAsIDE4MCwgMTAwLCAwLjIxNSk7XG59XG5cbi5uZXR3b3JrLWJ1dHRvbi1tZWRpdW0ge1xuICBjb2xvcjogcmdiYSgyMDAsIDE3MCwgMzUsIDAuOTUpO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMjAwLCAxNzAsIDM1LCAwLjIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIwMCwgMTcwLCAzNSwgMC4xKTtcbn1cblxuLm5ldHdvcmstYnV0dG9uLW1lZGl1bTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAwLCAxNzAsIDM1LCAwLjIxNSk7XG59XG5cbi5uZXR3b3JrLWJ1dHRvbi1iYWQge1xuICBjb2xvcjogcmdiYSgyMDAsIDYwLCAzNSwgMC45NSk7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSgyMDAsIDYwLCAzNSwgMC4yKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMDAsIDYwLCAzNSwgMC4xKTtcbn1cblxuLm5ldHdvcmstYnV0dG9uLWJhZDpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAwLCA2MCwgMzUsIDAuMjE1KTtcbn1cblxuLmFjY2Vzcy1wb2ludC1jb250YWluZXIge1xuICBwYWRkaW5nOiA4cHggNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLmFjY2Vzcy1wb2ludC1sYWJlbC1jb250YWluZXIge1xuICBwYWRkaW5nOiAycHggOHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpO1xufVxuXG4uYWNjZXNzLXBvaW50LWxhYmVsLWljb24tZ29vZCB7XG4gIGNvbG9yOiByZ2JhKDEyMCwgMjU1LCAxMTAsIDAuMyk7XG59XG5cbi5hY2Nlc3MtcG9pbnQtbGFiZWwtaWNvbi1iYWQge1xuICBjb2xvcjogcmdiYSgyNTAsIDE1MCwgMTMwLCAwLjMpO1xufVxuXG4ubmV0d29yay1jb25uZWN0LWJ1dHRvbiB7XG4gIGNvbG9yOiByZ2JhKDUwLCAxNzAsIDExMCwgMC45NSk7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSg1MCwgMTcwLCAxMTAsIDAuMik7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTAsIDE3MCwgMTEwLCAwLjEpO1xuICBwYWRkaW5nOiAycHggOHB4O1xufVxuXG4ubmV0d29yay1jb25uZWN0LWJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTAsIDE3MCwgMTEwLCAwLjIxNSk7XG59XG5cbi5jdXJyZW50LWNvbm5lY3Rpb24tY29udGFpbmVyIHtcbiAgcGFkZGluZzogMnB4IDhweDtcbn1cblxuLmN1cnJlbnQtY29ubmVjdGlvbi1kYXRhLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDJweCA4cHg7XG59XG5cbi5jdXJyZW50LWNvbm5lY3Rpb24taWNvbiB7XG4gIGZvbnQtc2l6ZTogNjRweDtcbn1cblxuLmN1cnJlbnQtbmV0d29yay1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLm5ldHdvcmstc3RyZW5ndGgtYmFyIHtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLm5ldHdvcmstc3RyZW5ndGgtYmFyID4gdHJvdWdoIHtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLm5ldHdvcmstc3RyZW5ndGgtYmFyID4gdHJvdWdoID4gYmxvY2suZW1wdHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xufVxuXG4ubmV0d29yay1zdHJlbmd0aC1iYXIgPiB0cm91Z2ggPiBibG9jay5maWxsZWQubG93IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMDAsIDAsIDAsIDAuMjUpO1xuICBib3JkZXItcmFkaXVzOiAwcHg7XG59XG5cbi5uZXR3b3JrLXN0cmVuZ3RoLWJhciA+IHRyb3VnaCA+IGJsb2NrLmZpbGxlZC5oaWdoIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDIxMCwgMCwgMC4yNSk7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbn1cblxuLm5ldHdvcmstc3RyZW5ndGgtYmFyID4gdHJvdWdoID4gYmxvY2suZmlsbGVkLmZ1bGwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMwLCAyNTUsIDAsIDAuMjUpO1xuICBib3JkZXItcmFkaXVzOiAwcHg7XG59XG5cbi5uZXR3b3JrLXdpZmktc3dpdGNoIHtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIwMCwgNTAsIDMwLCAwLjUpO1xufVxuXG4ubmV0d29yay13aWZpLXN3aXRjaDpjaGVja2VkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMCwgMjAwLCA4MCwgMC41KTtcbn1cblxuLm5ldHdvcmstd2lmaS1zd2l0Y2ggPiBzbGlkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTUwLCAxNTAsIDE1MCk7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbn1cblxuLm5vdGlmaWNhdGlvbi1oaXN0b3J5LWJ1dHRvbiB7XG4gIG1hcmdpbjogMHB4O1xuICBwYWRkaW5nOiAwcHg7XG4gIGNvbG9yOiByZ2JhKDE1MCwgMTUwLCAxNTAsIDAuOTUpO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMTUwLCAxNTAsIDE1MCwgMC4yKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNTAsIDE1MCwgMTUwLCAwLjEpO1xufVxuXG4ubm90aWZpY2F0aW9uLWhpc3RvcnktYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNTAsIDE1MCwgMTUwLCAwLjIxNSk7XG59XG5cbi5ub3RpZmljYXRpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5ub3RpZmljYXRpb24tbG93IHtcbiAgYm9yZGVyOiAxcHggZ3JlZW4gc29saWQ7XG59XG5cbi5ub3RpZmljYXRpb24tbm9ybWFsIHtcbiAgYm9yZGVyOiAxcHggb3JhbmdlIHNvbGlkO1xufVxuXG4ubm90aWZpY2F0aW9uLWNyaXRpY2FsIHtcbiAgYm9yZGVyOiAxcHggcmVkIHNvbGlkO1xufVxuXG4uc2VwYXJhdGUtYmFyLWxvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xuICBib3JkZXItcmFkaXVzOiAwcHg7XG59XG5cbi5zZXBhcmF0ZS1iYXItbm9ybWFsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogb3JhbmdlO1xuICBib3JkZXItcmFkaXVzOiAwcHg7XG59XG5cbi5zZXBhcmF0ZS1iYXItY3JpdGljYWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbn1cblxuLnRpbWVvdXQtYmFyIHtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLnRpbWVvdXQtYmFyID4gdHJvdWdoID4gYmxvY2suZW1wdHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xufVxuXG4udGltZW91dC1iYXItbG93ID4gdHJvdWdoID4gYmxvY2suZmlsbGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbn1cblxuLnRpbWVvdXQtYmFyLW5vcm1hbCA+IHRyb3VnaCA+IGJsb2NrLmZpbGxlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IG9yYW5nZTtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xufVxuXG4udGltZW91dC1iYXItY3JpdGljYWwgPiB0cm91Z2ggPiBibG9jay5maWxsZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbn1cblxuLnNvdW5kLXN0YXR1cy1idXR0b24ge1xuICBtYXJnaW46IDBweDtcbiAgcGFkZGluZzogMHB4O1xuICBjb2xvcjogcmdiYSgxNTAsIDE1MCwgMTUwLCAwLjk1KTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDE1MCwgMTUwLCAxNTAsIDAuMik7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTUwLCAxNTAsIDE1MCwgMC4xKTtcbn1cblxuLnNvdW5kLXN0YXR1cy1idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE1MCwgMTUwLCAxNTAsIDAuMjE1KTtcbn1cblxuLnNvdW5kLWxldmVsLW11dGUtYnV0dG9uIHtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBsaW5lLWhlaWdodDogMjBweDtcbn1cblxuLmF1ZGlvLWJ1dHRvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDEyOCwgMTI4LCAxMjgpO1xuICBjb2xvcjogcmdiKDIwMCwgMjAwLCAyMDApO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMCk7XG59XG5cbi5hdWRpby1idXR0b24uYWN0aXZlIHtcbiAgY29sb3I6IHJnYigwLCAwLCAwKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIwMCwgMjAwLCAyMDApO1xufVxuXG4udm9sdW1lLXNsaWRlciA+IHRyb3VnaCA+IGhpZ2hsaWdodCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxODAsIDE4MCwgMTgwKTtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xufVxuXG4udm9sdW1lLXNsaWRlciA+IHRyb3VnaCA+IHNsaWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICBib3JkZXI6IHNvbGlkIDFweCByZ2IoMjAwLCAyMDAsIDIwMCk7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbn1cblxuLnZvbHVtZS1zbGlkZXIgPiB0cm91Z2gge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTEwLCAxMTAsIDExMCk7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbn1cblxuLmRldmljZXMtZHJvcGRvd24ge1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDE4MCwgMTgwLCAxODAsIDAuNSk7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbn1cblxuLmRldmljZXMtZHJvcGRvd24gPiBwb3BvdmVyID4gY29udGVudHMgPiBib3gge1xuICBib3JkZXI6IDBweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xufVxuXG4uZGV2aWNlcy1kcm9wZG93biA+IHBvcG92ZXIgPiBjb250ZW50cyA+IGJveCA+IHNjcm9sbGVkd2luZG93IHtcbiAgYm9yZGVyOiAwcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbn1cblxuLmRldmljZXMtZHJvcGRvd24gPiBwb3BvdmVyID4gY29udGVudHMgPiBib3ggPiBzY3JvbGxlZHdpbmRvdyA+IGxpc3R2aWV3IHtcbiAgYm9yZGVyOiAwcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgcGFkZGluZzogMHB4O1xufVxuXG4uZGV2aWNlcy1kcm9wZG93biA+IHBvcG92ZXIgPiBjb250ZW50cyA+IGJveCA+IHNjcm9sbGVkd2luZG93ID4gbGlzdHZpZXcgPiByb3cge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMCk7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTcwLCAxNzAsIDE3MCwgMC41KTtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBtYXJnaW46IDA7XG59XG5cbi5kZXZpY2VzLWRyb3Bkb3duID4gcG9wb3ZlciA+IGNvbnRlbnRzID4gYm94ID4gc2Nyb2xsZWR3aW5kb3cgPiBsaXN0dmlldyA+IHJvdzpob3ZlciB7XG4gIGZpbHRlcjogYnJpZ2h0bmVzcygxLjMpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTAsIDEwLCAxMCk7XG59XG5cbi50aW1lci1idXR0b24ge1xuICBtYXJnaW46IDBweDtcbiAgcGFkZGluZzogMHB4O1xufVxuXG4udGltZXItYnV0dG9uLWZyZWUge1xuICBjb2xvcjogcmdiYSgxMDAsIDQwLCAxODAsIDAuOTUpO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMTAwLCA0MCwgMTgwLCAwLjIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEwMCwgNDAsIDE4MCwgMC4xKTtcbn1cblxuLnRpbWVyLWJ1dHRvbi1mcmVlOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMDAsIDQwLCAxODAsIDAuMjE1KTtcbn1cblxuLnRpbWVyLWJ1dHRvbi1ydW5uaW5nIHtcbiAgY29sb3I6IHJnYmEoMjAwLCAzNSwgMzUsIDAuOTUpO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMjAwLCAzNSwgMzUsIDAuMik7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAwLCAzNSwgMzUsIDAuMSk7XG59XG5cbi50aW1lci1idXR0b24tcnVubmluZzpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAwLCAzNSwgMzUsIDAuMjE1KTtcbn1cblxuLnRpbWVyLWJ1dHRvbi1ydW5uaW5nLWFzLWxlZnQge1xuICBjb2xvcjogcmdiYSgyMDAsIDM1LCAzNSwgMC45NSk7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDRweDtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4O1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMHB4O1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMHB4O1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkIHJnYmEoMjAwLCAzNSwgMzUsIDAuMik7XG4gIGJvcmRlci10b3A6IDJweCBzb2xpZCByZ2JhKDIwMCwgMzUsIDM1LCAwLjIpO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgcmdiYSgyMDAsIDM1LCAzNSwgMC4yKTtcbiAgYm9yZGVyLXJpZ2h0OiAwcHggbm9uZSB0cmFuc3BhcmVudDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMDAsIDM1LCAzNSwgMC4xKTtcbn1cblxuLnRpbWVyLWJ1dHRvbjpob3ZlciAudGltZXItYnV0dG9uLXJ1bm5pbmctYXMtbGVmdCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjMwLCA0MCwgNDAsIDAuMjE1KTtcbn1cblxuLnRpbWVyLWJ1dHRvbi1kb25lIHtcbiAgY29sb3I6IHJnYmEoODAsIDIwMCwgMzUsIDAuOTUpO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoODAsIDIwMCwgMzUsIDAuMik7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoODAsIDIwMCwgMzUsIDAuMSk7XG59XG5cbi50aW1lci1idXR0b24tZG9uZTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoODAsIDIwMCwgMzUsIDAuMjE1KTtcbn1cblxuLnRpbWVyLWJ1dHRvbi1kb25lLWFzLXJpZ2h0IHtcbiAgY29sb3I6IHJnYmEoODEsIDE5NiwgMzYsIDAuOTUpO1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDgwLCAyMDAsIDM1LCAwLjIpO1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwcHg7XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDBweDtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDRweDtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDRweDtcbiAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQgcmdiYSg4MCwgMjAwLCAzNSwgMC4yKTtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIHJnYmEoODAsIDIwMCwgMzUsIDAuMik7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCByZ2JhKDgwLCAyMDAsIDM1LCAwLjIpO1xuICBib3JkZXItbGVmdDogMHB4IG5vbmUgdHJhbnNwYXJlbnQ7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoODAsIDIwMCwgMzUsIDAuMSk7XG59XG5cbi50aW1lci1idXR0b246aG92ZXIgLnRpbWVyLWJ1dHRvbi1kb25lLWFzLXJpZ2h0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg4MCwgMjAwLCAzNSwgMC4yMTUpO1xufVxuXG4uc21hbGwtYnV0dG9uIHtcbiAgcGFkZGluZzogMXB4IDJweDtcbn1cblxuLnNtYWxsLWJ1dHRvbiA+IGxhYmVsIHtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG4udGltZXItcG9wb3Zlci1sYWJlbC1kaWdpdC1jb250YWluZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDQwLCAwLCAwLCAwLjQpO1xufVxuXG4udGltZXItcG9wb3Zlci1sYWJlbC1kaWdpdCB7XG4gIGZvbnQtZmFtaWx5OiBcIkZTIFNldmVnbWVudFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogMjAwO1xuICBmb250LXNpemU6IDUwcHg7XG4gIGNvbG9yOiByZ2JhKDE3NSwgNSwgNSwgMC43KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi50aW1lci1wb3BvdmVyLWxhYmVsLWRpZ2l0LWJhY2tncm91bmQge1xuICBmb250LWZhbWlseTogXCJGUyBTZXZlZ21lbnRcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgZm9udC1zaXplOiA1MHB4O1xuICBjb2xvcjogcmdiKDQwLCA1LCA1KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi50aW1lci1wb3BvdmVyLXN0YXJ0LWJ1dHRvbiB7XG4gIGNvbG9yOiByZ2JhKDUwLCAyMDAsIDM1LCAwLjk1KTtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDUwLCAyMDAsIDM1LCAwLjIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDUwLCAyMDAsIDM1LCAwLjEpO1xufVxuXG4udGltZXItcG9wb3Zlci1zdGFydC1idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDUwLCAyMDAsIDM1LCAwLjIxNSk7XG59XG5cbi50aW1lci1wb3BvdmVyLXBhdXNlLXRpbWVyLWJ1dHRvbiB7XG4gIGNvbG9yOiByZ2JhKDIzNSwgMTkwLCA1MCwgMC45NSk7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSgyMzUsIDE5MCwgNTAsIDAuMik7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjM1LCAxOTAsIDUwLCAwLjEpO1xufVxuXG4udGltZXItcG9wb3Zlci1wYXVzZS10aW1lci1idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIzNSwgMTkwLCA1MCwgMC4yMTUpO1xufVxuXG4udGltZXItcG9wb3Zlci1hZGQtdGltZXItYnV0dG9uIHtcbiAgY29sb3I6IHJnYmEoNzAsIDIzMCwgMjUwLCAwLjk1KTtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDcwLCAyMzAsIDI1MCwgMC4yKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg3MCwgMjMwLCAyNTAsIDAuMSk7XG59XG5cbi50aW1lci1wb3BvdmVyLWFkZC10aW1lci1idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDcwLCAyMzAsIDI1MCwgMC4yMTUpO1xufVxuXG4udGltZXItcG9wb3Zlci1lZGl0LXRpbWVycy1idXR0b24ge1xuICBjb2xvcjogcmdiYSgyNTUsIDE2MCwgMzUsIDAuOTUpO1xuICBib3JkZXItcmFkaXVzOiAwcHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMjU1LCAxNjAsIDM1LCAwLjIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMTYwLCAzNSwgMC4xKTtcbn1cblxuLnRpbWVyLXBvcG92ZXItZWRpdC10aW1lcnMtYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDE2MCwgMzUsIDAuMjE1KTtcbn1cblxuLnRpbWVyLXBvcG92ZXItcmVtb3ZlLXRpbWVyLWJ1dHRvbiB7XG4gIGNvbG9yOiByZ2JhKDIxMCwgMjAsIDIwLCAwLjk1KTtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDIxMCwgMjAsIDIwLCAwLjIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxMCwgMjAsIDIwLCAwLjEpO1xufVxuXG4udGltZXItcG9wb3Zlci1yZW1vdmUtdGltZXItYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMTAsIDIwLCAyMCwgMC4yMTUpO1xufVxuXG4udGltZXItcG9wb3Zlci1yZW1vdmUtZG9uZS10aW1lci1idXR0b24ge1xuICBjb2xvcjogcmdiYSgyMTAsIDIwLCAxNzAsIDAuOTUpO1xuICBib3JkZXItcmFkaXVzOiAwcHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMjEwLCAyMCwgMTcwLCAwLjIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxMCwgMjAsIDE3MCwgMC4xKTtcbiAgcGFkZGluZzogMnB4O1xufVxuXG4udGltZXItcG9wb3Zlci1yZW1vdmUtZG9uZS10aW1lci1idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxMCwgMjAsIDE3MCwgMC4yMTUpO1xufVxuXG4udGltZXItcG9wb3Zlci1tb3ZlLXRpbWVyLWJ1dHRvbiB7XG4gIGNvbG9yOiByZ2JhKDE3NSwgMTc1LCAxNzUsIDAuOTUpO1xuICBib3JkZXItcmFkaXVzOiAwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTc1LCAxNzUsIDE3NSwgMC4yKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxNzUsIDE3NSwgMTc1LCAwLjEpO1xuICBtYXJnaW4tcmlnaHQ6IDZweDtcbiAgcGFkZGluZzogMHB4O1xufVxuXG4udGltZXItcG9wb3Zlci1tb3ZlLXRpbWVyLWJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTc1LCAxNzUsIDE3NSwgMC4yMTUpO1xufVxuXG4uc2F2ZWQtdGltZXItY29udGFpbmVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KTtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBwYWRkaW5nOiA0cHggMTJweDtcbn1cblxuLnJ1bm5pbmctdGltZXItYmFyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KTtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLnJ1bm5pbmctdGltZXItYmFyID4gdHJvdWdoID4gYmxvY2suZW1wdHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xufVxuXG4ucnVubmluZy10aW1lci1iYXIgPiB0cm91Z2ggPiBibG9jay5maWxsZWQubG93IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMDAsIDAsIDAsIDAuMjUpO1xuICBib3JkZXItcmFkaXVzOiAwcHg7XG59XG5cbi5ydW5uaW5nLXRpbWVyLWJhciA+IHRyb3VnaCA+IGJsb2NrLmZpbGxlZC5oaWdoIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDIxMCwgMCwgMC4yNSk7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbn1cblxuLnJ1bm5pbmctdGltZXItYmFyID4gdHJvdWdoID4gYmxvY2suZmlsbGVkLmZ1bGwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMwLCAyNTUsIDAsIDAuMjUpO1xuICBib3JkZXItcmFkaXVzOiAwcHg7XG59XG5cbi5ydW5uaW5nLXRpbWVyLWxhYmVsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbn1cblxuQGtleWZyYW1lcyBtb3JwaCB7XG4gIDAlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMwLCAyNTUsIDAsIDAuMjUpO1xuICB9XG4gIDUwJSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMCwgMjU1LCAwLCAwLjUpO1xuICB9XG4gIDEwMCUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMzAsIDI1NSwgMCwgMC4yNSk7XG4gIH1cbn1cbi50aW1lci1kb25lID4gdHJvdWdoID4gYmxvY2suZmlsbGVkLmZ1bGwge1xuICBib3JkZXItcmFkaXVzOiAwcHg7XG4gIGFuaW1hdGlvbjogbW9ycGggMnMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG59XG5cbi5jcmVhdGUtc2F2ZS10aW1lci13aW5kb3cge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzUpO1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQ1KTtcbiAgcGFkZGluZzogMTZweDtcbn1cblxuLmJnLXdoaXRlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi5iZy1ibGFjayB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuXG4uYmctZ3JheSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XG59XG5cbi5iZy1yZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5iZy1ncmVlbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xufVxuXG4uYmctYmx1ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XG59XG5cbi5iZy15ZWxsb3cge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7XG59XG5cbi5iZy1wdXJwbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBwdXJwbGU7XG59XG5cbi5iZy1vcmFuZ2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XG59XG5cbi5mZy13aGl0ZSB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmZnLWJsYWNrIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4uZmctZ3JheSB7XG4gIGNvbG9yOiBncmF5O1xufVxuXG4uZmctcmVkIHtcbiAgY29sb3I6IHJlZDtcbn1cblxuLmZnLWdyZWVuIHtcbiAgY29sb3I6IGdyZWVuO1xufVxuXG4uZmctYmx1ZSB7XG4gIGNvbG9yOiBibHVlO1xufVxuXG4uZmcteWVsbG93IHtcbiAgY29sb3I6IHllbGxvdztcbn1cblxuLmZnLXB1cnBsZSB7XG4gIGNvbG9yOiBwdXJwbGU7XG59XG5cbi5mZy1vcmFuZ2Uge1xuICBjb2xvcjogb3JhbmdlO1xufVxuXG4qIHtcbiAgZm9udC1mYW1pbHk6IFwiRmlyYUNvZGUgTmVyZCBGb250IE1vbm9cIiwgXCJGaXJhQ29kZSBOZXJkIEZvbnQgQm9sZFwiLCBtb25vc3BhY2U7XG4gIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJsaWdhXCIgb247XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxud2luZG93LkJhciB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogQHRoZW1lX2ZnX2NvbG9yO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbndpbmRvdy5CYXIgPiBjZW50ZXJib3gge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgbWFyZ2luOiAwcHg7XG4gIHBhZGRpbmc6IDBweDtcbn1cbndpbmRvdy5CYXIgY2VudGVyYm94ID4gYm94IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG53aW5kb3cuQmFyIC5jbG9jayB7XG4gIGNvbG9yOiByZ2IoMTYwLCAxNjAsIDE2MCk7XG4gIGJhY2tncm91bmQ6IHJnYigwLCAwLCAwKTtcbiAgcGFkZGluZzogMHB4IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgZm9udC1mYW1pbHk6IFwiRmlyYSBDb2RlXCI7XG59XG5cbmJ1dHRvbiB7XG4gIHBhZGRpbmc6IDFweCA0cHg7XG59XG5cbm1lbnVidXR0b24gPiBidXR0b24ge1xuICBtYXJnaW46IDBweDtcbiAgcGFkZGluZzogMHB4O1xufVxuXG4uYmFyLWJ1dHRvbi1sYWJlbCB7XG4gIGxpbmUtaGVpZ2h0OiAwLjU7XG4gIGZvbnQtc2l6ZTogMzRweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgcGFkZGluZzogNHB4O1xufVxuXG4uYmFyLWJ1dHRvbi1sYWJlbC13YXJuIHtcbiAgY29sb3I6IHJnYmEoMjQwLCAxNjAsIDEwLCAwLjk1KTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDI0MCwgMTYwLCAxMCwgMC4yKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNDAsIDE2MCwgMTAsIDAuMSk7XG59XG5cbi5iYXItYnV0dG9uLWxhYmVsLXdhcm46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0MCwgMTYwLCAxMCwgMC4yMTUpO1xufVxuXG4uYmFyLWJ1dHRvbi1sYWJlbC1lcnJvciB7XG4gIGNvbG9yOiByZ2JhKDIxNSwgMzAsIDMwLCAwLjk1KTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDIxNSwgMzAsIDMwLCAwLjIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxNSwgMzAsIDMwLCAwLjEpO1xufVxuXG4uYmFyLWJ1dHRvbi1sYWJlbC1lcnJvcjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjE1LCAzMCwgMzAsIDAuMjE1KTtcbn1cblxuLndpZGdldC1wb3BvdmVyIHtcbiAgYm9yZGVyOiAxcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpIHNvbGlkO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOSk7XG4gIHBhZGRpbmc6IDBweDtcbn1cblxucG9wb3Zlci53aWRnZXQtcG9wb3ZlciBjb250ZW50cyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQ1KTtcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xuICBwYWRkaW5nOiAwcHg7XG59XG5cbi5jb250YWluZXItbGFiZWwge1xuICBmb250LXNpemU6IG1lZGl1bTtcbiAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6IFwiRmlyYUNvZGUgTmVyZCBGb250XCI7XG59XG5cbi5sYWJlbC10ZXh0IHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4ubGFiZWwtaWNvbiB7XG4gIGZvbnQtc2l6ZTogMjhweDtcbn1cblxuLmxhYmVsLWljb24tbm8tcGFkZGluZyB7XG4gIGZvbnQtc2l6ZTogMjhweDtcbiAgbGluZS1oZWlnaHQ6IDAuNWVtO1xufSIsICJpbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdkayBmcm9tIFwiZ2k6Ly9HZGs/dmVyc2lvbj00LjBcIlxuZXhwb3J0IHsgQXN0YWwsIEd0aywgR2RrIH1cbiIsICJpbXBvcnQgQXN0YWxJTyBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4uL2duaW0vc3JjL2pzeC9pbmRleC5qc1wiXG5cbnR5cGUgQXJncyA9IHtcbiAgICBjbWQ6IHN0cmluZyB8IHN0cmluZ1tdXG4gICAgb3V0PzogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkXG4gICAgZXJyPzogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkXG59XG5cbmV4cG9ydCB0eXBlIFByb2Nlc3MgPSBBc3RhbElPLlByb2Nlc3NcbmV4cG9ydCBjb25zdCBQcm9jZXNzID0gQXN0YWxJTy5Qcm9jZXNzXG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKGFyZ3M6IEFyZ3MpOiBBc3RhbElPLlByb2Nlc3NcblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnByb2Nlc3MoXG4gICAgY21kOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICBvbk91dD86IChzdGRvdXQ6IHN0cmluZykgPT4gdm9pZCxcbiAgICBvbkVycj86IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZCxcbik6IEFzdGFsSU8uUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBhcmdzT3JDbWQ6IEFyZ3MgfCBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICBvbk91dDogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkID0gcHJpbnQsXG4gICAgb25FcnI6IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZCA9IHByaW50ZXJyLFxuKSB7XG4gICAgY29uc3QgYXJncyA9IEFycmF5LmlzQXJyYXkoYXJnc09yQ21kKSB8fCB0eXBlb2YgYXJnc09yQ21kID09PSBcInN0cmluZ1wiXG4gICAgY29uc3QgeyBjbWQsIGVyciwgb3V0IH0gPSB7XG4gICAgICAgIGNtZDogYXJncyA/IGFyZ3NPckNtZCA6IGFyZ3NPckNtZC5jbWQsXG4gICAgICAgIGVycjogYXJncyA/IG9uRXJyIDogYXJnc09yQ21kLmVyciB8fCBvbkVycixcbiAgICAgICAgb3V0OiBhcmdzID8gb25PdXQgOiBhcmdzT3JDbWQub3V0IHx8IG9uT3V0LFxuICAgIH1cblxuICAgIGNvbnN0IHByb2MgPSBBcnJheS5pc0FycmF5KGNtZClcbiAgICAgICAgPyBBc3RhbElPLlByb2Nlc3Muc3VicHJvY2Vzc3YoY21kKVxuICAgICAgICA6IEFzdGFsSU8uUHJvY2Vzcy5zdWJwcm9jZXNzKGNtZClcblxuICAgIHByb2MuY29ubmVjdChcInN0ZG91dFwiLCAoXywgc3Rkb3V0OiBzdHJpbmcpID0+IG91dChzdGRvdXQpKVxuICAgIHByb2MuY29ubmVjdChcInN0ZGVyclwiLCAoXywgc3RkZXJyOiBzdHJpbmcpID0+IGVycihzdGRlcnIpKVxuICAgIHJldHVybiBwcm9jXG59XG5cbi8qKiBAdGhyb3dzIHtHTGliLkVycm9yfSBUaHJvd3Mgc3RkZXJyICovXG5leHBvcnQgZnVuY3Rpb24gZXhlYyhjbWQ6IHN0cmluZyB8IHN0cmluZ1tdKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY21kKSA/IEFzdGFsSU8uUHJvY2Vzcy5leGVjdihjbWQpIDogQXN0YWxJTy5Qcm9jZXNzLmV4ZWMoY21kKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZXhlY0FzeW5jKGNtZDogc3RyaW5nIHwgc3RyaW5nW10pOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNtZCkpIHtcbiAgICAgICAgICAgIEFzdGFsSU8uUHJvY2Vzcy5leGVjX2FzeW5jdihjbWQsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKEFzdGFsSU8uUHJvY2Vzcy5leGVjX2FzeW5jdl9maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIEFzdGFsSU8uUHJvY2Vzcy5leGVjX2FzeW5jKGNtZCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoQXN0YWxJTy5Qcm9jZXNzLmV4ZWNfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2Vzcyhpbml0OiBzdHJpbmcsIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdKTogQWNjZXNzb3I8c3RyaW5nPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2VzczxUPihcbiAgICBpbml0OiBULFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIHRyYW5zZm9ybTogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN1YnByb2Nlc3M8VD4oXG4gICAgaW5pdDogVCxcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm0/OiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBsZXQgcHJvYzogQXN0YWxJTy5Qcm9jZXNzIHwgbnVsbCA9IG51bGxcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuXG4gICAgZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogKCkgPT4gdm9pZCB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBwcm9jID0gc3VicHJvY2VzcyhleGVjLCAoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oc3Rkb3V0LCBjdXJyZW50VmFsdWUpIDogKHN0ZG91dCBhcyBUKVxuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcHJvYz8ua2lsbCgpXG4gICAgICAgICAgICAgICAgcHJvYyA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgQ0MsIEZDLCBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsga2ViYWJpZnksIFBhc2NhbGlmeSwgc2V0IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG50eXBlIE5vZGUgPSBBcnJheTxHT2JqZWN0Lk9iamVjdD4gfCBHT2JqZWN0Lk9iamVjdCB8IG51bWJlciB8IHN0cmluZyB8IGJvb2xlYW4gfCBudWxsIHwgdW5kZWZpbmVkXG5cbmV4cG9ydCBjb25zdCBndGtUeXBlID0gU3ltYm9sKFwiZ3RrIGJ1aWxkZXIgdHlwZVwiKVxuXG4vKipcbiAqIEdldCB0aGUgdHlwZSBvZiB0aGUgb2JqZWN0IHNwZWNpZmllZCB0aHJvdWdoIHRoZSBgJHR5cGVgIHByb3BlcnR5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUeXBlKG9iamVjdDogR09iamVjdC5PYmplY3QpIHtcbiAgICByZXR1cm4gZ3RrVHlwZSBpbiBvYmplY3QgPyAob2JqZWN0W2d0a1R5cGVdIGFzIHN0cmluZykgOiBudWxsXG59XG5cbi8qKlxuICogRnVuY3Rpb24gQ29tcG9uZW50IFByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IHR5cGUgRkNQcm9wczxTZWxmLCBQcm9wcz4gPSBQcm9wcyAmIHtcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgYXMgYSBwYXJhbWV0ZXJzXG4gICAgICovXG4gICAgJHR5cGU/OiBzdHJpbmdcbiAgICAvKipcbiAgICAgKiBzZXR1cCBmdW5jdGlvblxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIGFzIGEgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgICQ/KHNlbGY6IFNlbGYpOiB2b2lkXG59XG5cbi8qKlxuICogQ2xhc3MgQ29tcG9uZW50IFByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IHR5cGUgQ0NQcm9wczxTZWxmIGV4dGVuZHMgR09iamVjdC5PYmplY3QsIFByb3BzPiA9IHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWwgY2hpbGRyZW4gZWxlbWVudHNcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBBcnJheTxOb2RlPiB8IE5vZGVcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG4gICAgLyoqXG4gICAgICogZnVuY3Rpb24gdG8gdXNlIGFzIGEgY29uc3RydWN0b3IsXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICRjb25zdHJ1Y3Rvcj8ocHJvcHM6IFBhcnRpYWw8UHJvcHM+KTogU2VsZlxuICAgIC8qKlxuICAgICAqIHNldHVwIGZ1bmN0aW9uLFxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkPyhzZWxmOiBTZWxmKTogdm9pZFxuICAgIC8qKlxuICAgICAqIENTUyBjbGFzcyBuYW1lc1xuICAgICAqL1xuICAgIGNsYXNzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxuICAgIC8qKlxuICAgICAqIGlubGluZSBDU1NcbiAgICAgKi9cbiAgICBjc3M/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG59ICYge1xuICAgIFtLIGluIGtleW9mIFByb3BzXTogQWNjZXNzb3I8Tm9uTnVsbGFibGU8UHJvcHNbS10+PiB8IFByb3BzW0tdXG59ICYge1xuICAgIFtTIGluIGtleW9mIFNlbGZbXCIkc2lnbmFsc1wiXSBhcyBTIGV4dGVuZHMgYG5vdGlmeTo6JHtpbmZlciBQfWBcbiAgICAgICAgPyBgb25Ob3RpZnkke1Bhc2NhbGlmeTxQPn1gXG4gICAgICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgICAgID8gYG9uJHtQYXNjYWxpZnk8Uz59YFxuICAgICAgICAgIDogbmV2ZXJdPzogR09iamVjdC5TaWduYWxDYWxsYmFjazxTZWxmLCBTZWxmW1wiJHNpZ25hbHNcIl1bU10+XG59XG5cbi8vIHByZXR0aWVyLWlnbm9yZVxudHlwZSBKc3hQcm9wczxDLCBQcm9wcz4gPVxuICAgIEMgZXh0ZW5kcyB0eXBlb2YgRnJhZ21lbnQgPyAoUHJvcHMgJiB7fSlcbiAgICAvLyBpbnRyaW5zaWNFbGVtZW50cyBhbHdheXMgcmVzb2x2ZSBhcyBGQ1xuICAgIC8vIHNvIHdlIGNhbid0IG5hcnJvdyBpdCBkb3duLCBhbmQgaW4gc29tZSBjYXNlc1xuICAgIC8vIHRoZSBzZXR1cCBmdW5jdGlvbiBpcyB0eXBlZCBhcyBhIHVuaW9uIG9mIE9iamVjdCBhbmQgYWN0dWFsIHR5cGVcbiAgICAvLyBhcyBhIGZpeCB1c2VycyBjYW4gYW5kIHNob3VsZCB1c2UgRkNQcm9wc1xuICAgIDogQyBleHRlbmRzIEZDID8gUHJvcHMgJiBPbWl0PEZDUHJvcHM8UmV0dXJuVHlwZTxDPiwgUHJvcHM+LCBcIiRcIj5cbiAgICA6IEMgZXh0ZW5kcyBDQyA/IENDUHJvcHM8SW5zdGFuY2VUeXBlPEM+LCBQcm9wcz5cbiAgICA6IG5ldmVyXG5cbmZ1bmN0aW9uIGlzR09iamVjdEN0b3IoY3RvcjogYW55KTogY3RvciBpcyBDQyB7XG4gICAgcmV0dXJuIGN0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3Rcbn1cblxuZnVuY3Rpb24gaXNGdW5jdGlvbkN0b3IoY3RvcjogYW55KTogY3RvciBpcyBGQyB7XG4gICAgcmV0dXJuIHR5cGVvZiBjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgIWlzR09iamVjdEN0b3IoY3Rvcilcbn1cblxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldFR5cGUob2JqZWN0OiBvYmplY3QsIHR5cGU6IHN0cmluZykge1xuICAgIGlmIChndGtUeXBlIGluIG9iamVjdCAmJiBvYmplY3RbZ3RrVHlwZV0gIT09IFwiXCIpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGB0eXBlIG92ZXJyaWRlbiBmcm9tICR7b2JqZWN0W2d0a1R5cGVdfSB0byAke3R5cGV9IG9uICR7b2JqZWN0fWApXG4gICAgfVxuXG4gICAgT2JqZWN0LmFzc2lnbihvYmplY3QsIHsgW2d0a1R5cGVdOiB0eXBlIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIChwcm9wczogYW55KSA9PiBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3RvcjogVCxcbiAgICBwcm9wczogSnN4UHJvcHM8VCwgUGFyYW1ldGVyczxUPlswXT4sXG4pOiBSZXR1cm5UeXBlPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIG5ldyAocHJvcHM6IGFueSkgPT4gR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IFQsXG4gICAgcHJvcHM6IEpzeFByb3BzPFQsIENvbnN0cnVjdG9yUGFyYW1ldGVyczxUPlswXT4sXG4pOiBJbnN0YW5jZVR5cGU8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IGtleW9mICh0eXBlb2YgZW52KVtcImludHJpbnNpY0VsZW1lbnRzXCJdIHwgKG5ldyAocHJvcHM6IGFueSkgPT4gVCkgfCAoKHByb3BzOiBhbnkpID0+IFQpLFxuICAgIGlucHJvcHM6IGFueSxcbiAgICAvLyBrZXkgaXMgYSBzcGVjaWFsIHByb3AgaW4ganN4IHdoaWNoIGlzIHBhc3NlZCBhcyBhIHRoaXJkIGFyZ3VtZW50IGFuZCBub3QgaW4gcHJvcHNcbiAgICBrZXk/OiBzdHJpbmcsXG4pOiBUIHtcbiAgICBjb25zdCB7ICQsICR0eXBlLCAkY29uc3RydWN0b3IsIGNoaWxkcmVuID0gW10sIC4uLnJlc3QgfSA9IGlucHJvcHMgYXMgQ0NQcm9wczxULCBhbnk+XG4gICAgY29uc3QgcHJvcHMgPSByZXN0IGFzIFJlY29yZDxzdHJpbmcsIGFueT5cblxuICAgIGlmIChrZXkpIE9iamVjdC5hc3NpZ24ocHJvcHMsIHsga2V5IH0pXG4gICAgZW52LmluaXRQcm9wcyhwcm9wcylcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgZGVsZXRlIHByb3BzW2tleV1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGN0b3IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKGN0b3IgaW4gZW52LmludHJpbnNpY0VsZW1lbnRzKSB7XG4gICAgICAgICAgICBjdG9yID0gZW52LmludHJpbnNpY0VsZW1lbnRzW2N0b3JdIGFzIEZDPFQ+IHwgQ0M8VD5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGB1bmtub3duIGludHJpbnNpYyBlbGVtZW50IFwiJHtjdG9yfVwiYClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uQ3RvcihjdG9yKSkge1xuICAgICAgICBjb25zdCBvYmplY3QgPSBjdG9yKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pXG4gICAgICAgIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKVxuICAgICAgICAkPy4ob2JqZWN0KVxuICAgICAgICByZXR1cm4gb2JqZWN0XG4gICAgfVxuXG4gICAgLy8gY29sbGVjdCBjc3MgYW5kIGNsYXNzTmFtZVxuICAgIGNvbnN0IHsgY3NzLCBjbGFzczogY2xhc3NOYW1lIH0gPSBwcm9wc1xuICAgIGRlbGV0ZSBwcm9wcy5jc3NcbiAgICBkZWxldGUgcHJvcHMuY2xhc3NcblxuICAgIGNvbnN0IHNpZ25hbHM6IEFycmF5PFtzdHJpbmcsICguLi5wcm9wczogdW5rbm93bltdKSA9PiB1bmtub3duXT4gPSBbXVxuICAgIGNvbnN0IGJpbmRpbmdzOiBBcnJheTxbc3RyaW5nLCBBY2Nlc3Nvcjx1bmtub3duPl0+ID0gW11cblxuICAgIC8vIGNvbGxlY3Qgc2lnbmFscyBhbmQgYmluZGluZ3NcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcbiAgICAgICAgICAgIHNpZ25hbHMucHVzaChba2V5LnNsaWNlKDIpLCB2YWx1ZSBhcyAoKSA9PiB1bmtub3duXSlcbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGJpbmRpbmdzLnB1c2goW2tleSwgdmFsdWVdKVxuICAgICAgICAgICAgcHJvcHNba2V5XSA9IHZhbHVlLmdldCgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb25zdHJ1Y3RcbiAgICBjb25zdCBvYmplY3QgPSAkY29uc3RydWN0b3IgPyAkY29uc3RydWN0b3IocHJvcHMpIDogbmV3IChjdG9yIGFzIENDPFQ+KShwcm9wcylcbiAgICBpZiAoJGNvbnN0cnVjdG9yKSBPYmplY3QuYXNzaWduKG9iamVjdCwgcHJvcHMpXG4gICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG5cbiAgICBpZiAoY3NzKSBlbnYuc2V0Q3NzKG9iamVjdCwgY3NzKVxuICAgIGlmIChjbGFzc05hbWUpIGVudi5zZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSlcblxuICAgIC8vIGFkZCBjaGlsZHJlblxuICAgIGZvciAoY29uc3QgY2hpbGQgb2YgQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pIHtcbiAgICAgICAgaWYgKGNoaWxkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJUcnlpbmcgdG8gYWRkIGJvb2xlYW4gdmFsdWUgb2YgYHRydWVgIGFzIGEgY2hpbGQuXCIpXG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgZW52LmFkZENoaWxkKG9iamVjdCwgY2gsIC0xKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICBlbnYuYWRkQ2hpbGQob2JqZWN0LCBjaGlsZCwgLTEpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBoYW5kbGUgc2lnbmFsc1xuICAgIGNvbnN0IGRpc3Bvc2VIYW5kbGVycyA9IHNpZ25hbHMubWFwKChbc2lnLCBoYW5kbGVyXSkgPT4ge1xuICAgICAgICBjb25zdCBuYW1lID0ga2ViYWJpZnkoc2lnKVxuICAgICAgICBjb25zdCBpZCA9IG5hbWUuc3RhcnRzV2l0aChcIm5vdGlmeS1cIilcbiAgICAgICAgICAgID8gb2JqZWN0LmNvbm5lY3QoYG5vdGlmeTo6JHtuYW1lLnNsaWNlKDcpfWAsIGhhbmRsZXIpXG4gICAgICAgICAgICA6IG9iamVjdC5jb25uZWN0KGtlYmFiaWZ5KHNpZyksIGhhbmRsZXIpXG5cbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH0pXG5cbiAgICAvLyBoYW5kbGUgYmluZGluZ3NcbiAgICBjb25zdCBkaXNwb3NlQmluZGluZ3MgPSBiaW5kaW5ncy5tYXAoKFtwcm9wLCBiaW5kaW5nXSkgPT4ge1xuICAgICAgICBjb25zdCBkaXNwb3NlID0gYmluZGluZy5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgfSlcbiAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgcmV0dXJuIGRpc3Bvc2VcbiAgICB9KVxuXG4gICAgLy8gY2xlYW51cFxuICAgIGlmIChkaXNwb3NlQmluZGluZ3MubGVuZ3RoID4gMCB8fCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgZGlzcG9zZUhhbmRsZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgZGlzcG9zZUJpbmRpbmdzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgICQ/LihvYmplY3QpXG4gICAgcmV0dXJuIG9iamVjdFxufVxuXG5leHBvcnQgY29uc3QganN4cyA9IGpzeFxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2VcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgdHlwZSBFbGVtZW50VHlwZSA9IGtleW9mIEludHJpbnNpY0VsZW1lbnRzIHwgRkMgfCBDQ1xuICAgICAgICB0eXBlIEVsZW1lbnQgPSBHT2JqZWN0Lk9iamVjdFxuICAgICAgICB0eXBlIEVsZW1lbnRDbGFzcyA9IEdPYmplY3QuT2JqZWN0XG5cbiAgICAgICAgdHlwZSBMaWJyYXJ5TWFuYWdlZEF0dHJpYnV0ZXM8QywgUHJvcHM+ID0gSnN4UHJvcHM8QywgUHJvcHM+ICYge1xuICAgICAgICAgICAgLy8gRklYTUU6IHdoeSBkb2VzIGFuIGludHJpbnNpYyBlbGVtZW50IGFsd2F5cyByZXNvbHZlIGFzIEZDP1xuICAgICAgICAgICAgLy8gX190eXBlPzogQyBleHRlbmRzIENDID8gXCJDQ1wiIDogQyBleHRlbmRzIEZDID8gXCJGQ1wiIDogbmV2ZXJcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktb2JqZWN0LXR5cGVcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIC8vIGNjOiBDQ1Byb3BzPEd0ay5Cb3gsIEd0ay5Cb3guQ29uc3RydWN0b3JQcm9wcywgR3RrLkJveC5TaWduYWxTaWduYXR1cmVzPlxuICAgICAgICAgICAgLy8gZmM6IEZDUHJvcHM8R3RrLldpZGdldCwgRm5Qcm9wcz5cbiAgICAgICAgfVxuXG4gICAgICAgIGludGVyZmFjZSBFbGVtZW50Q2hpbGRyZW5BdHRyaWJ1dGUge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICAgICAgY2hpbGRyZW46IHt9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpb1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IHR5cGUgUGFzY2FsaWZ5LCBjYW1lbGlmeSwga2ViYWJpZnkgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgeyB0eXBlIEluZmVyVmFyaWFudFJlYywgdHlwZSBJbmZlclZhcmlhbnQgfSBmcm9tIFwiLi4vdmFyaWFudC5qc1wiXG5cbnR5cGUgU3Vic2NyaWJlQ2FsbGJhY2sgPSAoKSA9PiB2b2lkXG50eXBlIERpc3Bvc2VGdW5jdGlvbiA9ICgpID0+IHZvaWRcbnR5cGUgU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKSA9PiBEaXNwb3NlRnVuY3Rpb25cblxuZXhwb3J0IHR5cGUgQWNjZXNzZWQ8VD4gPSBUIGV4dGVuZHMgQWNjZXNzb3I8aW5mZXIgVj4gPyBWIDogbmV2ZXJcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtZGVjbGFyYXRpb24tbWVyZ2luZ1xuZXhwb3J0IGNsYXNzIEFjY2Vzc29yPFQgPSB1bmtub3duPiBleHRlbmRzIEZ1bmN0aW9uIHtcbiAgICBzdGF0aWMgJGd0eXBlID0gR09iamVjdC5UWVBFX0pTT0JKRUNUIGFzIHVua25vd24gYXMgR09iamVjdC5HVHlwZTxBY2Nlc3Nvcj5cblxuICAgIC8qKiBAZXhwZXJpbWVudGFsICovXG4gICAgc3RhdGljIGV2YWx1YXRpbmc/OiBTZXQ8QWNjZXNzb3I8dW5rbm93bj4+XG5cbiAgICAjZ2V0OiAoKSA9PiBUXG4gICAgI3N1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb25cblxuICAgIGNvbnN0cnVjdG9yKGdldDogKCkgPT4gVCwgc3Vic2NyaWJlPzogU3Vic2NyaWJlRnVuY3Rpb24pIHtcbiAgICAgICAgc3VwZXIoXCJyZXR1cm4gYXJndW1lbnRzLmNhbGxlZS5fY2FsbC5hcHBseShhcmd1bWVudHMuY2FsbGVlLCBhcmd1bWVudHMpXCIpXG4gICAgICAgIHRoaXMuI3N1YnNjcmliZSA9IHN1YnNjcmliZSA/PyAoKCkgPT4gKCkgPT4gdm9pZCAwKVxuICAgICAgICB0aGlzLiNnZXQgPSBnZXRcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdWJzY3JpYmUgZm9yIHZhbHVlIGNoYW5nZXMuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBydW4gd2hlbiB0aGUgY3VycmVudCB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqIEByZXR1cm5zIFVuc3Vic2NyaWJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIHN1YnNjcmliZShjYWxsYmFjazogU3Vic2NyaWJlQ2FsbGJhY2spOiBEaXNwb3NlRnVuY3Rpb24ge1xuICAgICAgICByZXR1cm4gdGhpcy4jc3Vic2NyaWJlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIFRoZSBjdXJyZW50IHZhbHVlLlxuICAgICAqL1xuICAgIGdldCgpOiBUIHtcbiAgICAgICAgQWNjZXNzb3IuZXZhbHVhdGluZz8uYWRkKHRoaXMpXG4gICAgICAgIHJldHVybiB0aGlzLiNnZXQoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBgQWNjZXNzb3JgIHRoYXQgYXBwbGllcyBhIHRyYW5zZm9ybWF0aW9uIG9uIGl0cyB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBhczxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPiB7XG4gICAgICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gdHJhbnNmb3JtKHRoaXMuI2dldCgpKSwgdGhpcy4jc3Vic2NyaWJlKVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBfY2FsbDxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmFzKHRyYW5zZm9ybSlcbiAgICB9XG5cbiAgICB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gYEFjY2Vzc29yPCR7dGhpcy5nZXQoKX0+YFxuICAgIH1cblxuICAgIFtTeW1ib2wudG9QcmltaXRpdmVdKCkge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJBY2Nlc3NvciBpbXBsaWNpdGx5IGNvbnZlcnRlZCB0byBhIHByaW1pdGl2ZSB2YWx1ZS5cIilcbiAgICAgICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKVxuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBBY2Nlc3NvcjxUPiB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGBBY2Nlc3NvcmAgdGhhdCBhcHBsaWVzIGEgdHJhbnNmb3JtYXRpb24gb24gaXRzIHZhbHVlLlxuICAgICAqIEBwYXJhbSB0cmFuc2Zvcm0gVGhlIHRyYW5zZm9ybWF0aW9uIHRvIGFwcGx5LiBTaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIDxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPlxufVxuXG5leHBvcnQgdHlwZSBTZXR0ZXI8VD4gPSB7XG4gICAgKHZhbHVlOiBUKTogdm9pZFxuICAgICh2YWx1ZTogKHByZXY6IFQpID0+IFQpOiB2b2lkXG59XG5cbmV4cG9ydCB0eXBlIFN0YXRlPFQ+ID0gW0FjY2Vzc29yPFQ+LCBTZXR0ZXI8VD5dXG5cbi8qKlxuICogQ3JlYXRlIGEgd3JpdGFibGUgc2lnbmFsLlxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbnRpYWwgdmFsdWUgb2YgdGhlIHNpZ25hbFxuICogQHJldHVybnMgQW4gYEFjY2Vzc29yYCBhbmQgYSBzZXR0ZXIgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0YXRlPFQ+KGluaXQ6IFQpOiBTdGF0ZTxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuICAgICAgICByZXR1cm4gKCkgPT4gc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIGNvbnN0IHNldCA9IChuZXdWYWx1ZTogdW5rbm93bikgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZTogVCA9IHR5cGVvZiBuZXdWYWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gbmV3VmFsdWUoY3VycmVudFZhbHVlKSA6IG5ld1ZhbHVlXG4gICAgICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICBjdXJyZW50VmFsdWUgPSB2YWx1ZVxuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gW25ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSksIHNldCBhcyBTZXR0ZXI8VD5dXG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgd2hpY2ggaXMgY29tcHV0ZWQgZnJvbSBhIGxpc3Qgb2YgYEFjY2Vzc29yYHMuXG4gKlxuICogYGBgdHMgRXhhbXBsZVxuICogbGV0IGE6IEFjY2Vzc29yPG51bWJlcj5cbiAqIGxldCBiOiBBY2Nlc3NvcjxzdHJpbmc+XG4gKiBjb25zdCBjOiBBY2Nlc3NvcjxbbnVtYmVyLCBzdHJpbmddPiA9IGNyZWF0ZUNvbXB1dGVkKFthLCBiXSlcbiAqIGNvbnN0IGQ6IEFjY2Vzc29yPHN0cmluZz4gPSBjcmVhdGVDb21wdXRlZChbYSwgYl0sIChhOiBudW1iZXIsIGI6IHN0cmluZykgPT4gYCR7YX0gJHtifWApXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gZGVwcyBMaXN0IG9mIGBBY2Nlc3NvcnNgLlxuICogQHBhcmFtIHRyYW5zZm9ybSBBbiBvcHRpb25hbCB0cmFuc2Zvcm0gZnVuY3Rpb24uXG4gKiBAcmV0dXJucyBUaGUgY29tcHV0ZWQgYEFjY2Vzc29yYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkPFxuICAgIGNvbnN0IERlcHMgZXh0ZW5kcyBBcnJheTxBY2Nlc3Nvcjxhbnk+PixcbiAgICBBcmdzIGV4dGVuZHMgeyBbSyBpbiBrZXlvZiBEZXBzXTogQWNjZXNzZWQ8RGVwc1tLXT4gfSxcbiAgICBWID0gQXJncyxcbj4oZGVwczogRGVwcywgdHJhbnNmb3JtPzogKC4uLmFyZ3M6IEFyZ3MpID0+IFYpOiBBY2Nlc3NvcjxWPiB7XG4gICAgbGV0IGRpc3Bvc2U6IEFycmF5PERpc3Bvc2VGdW5jdGlvbj5cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcbiAgICBjb25zdCBjYWNoZSA9IG5ldyBBcnJheTx1bmtub3duPihkZXBzLmxlbmd0aClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBkZXBzLm1hcCgoZGVwLCBpKSA9PlxuICAgICAgICAgICAgICAgIGRlcC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgICAgICAgICBpZiAoY2FjaGVbaV0gIT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWNoZVtpXSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlLm1hcCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgZGlzcG9zZS5sZW5ndGggPSAwXG4gICAgICAgICAgICAgICAgY2FjaGUubGVuZ3RoID0gMFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZ2V0ID0gKCk6IFYgPT4ge1xuICAgICAgICBjb25zdCBhcmdzID0gZGVwcy5tYXAoKGRlcCwgaSkgPT4ge1xuICAgICAgICAgICAgaWYgKCFjYWNoZVtpXSkge1xuICAgICAgICAgICAgICAgIGNhY2hlW2ldID0gZGVwLmdldCgpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBjYWNoZVtpXVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oLi4uKGFyZ3MgYXMgQXJncykpIDogKGFyZ3MgYXMgVilcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdPYmplY3QuT2JqZWN0YCdzIGBwcm9wZXJ0eWAuXG4gKlxuICogQHBhcmFtIG9iamVjdCBUaGUgYEdPYmplY3QuT2JqZWN0YCB0byBjcmVhdGUgdGhlIGBBY2Nlc3NvcmAgb24uXG4gKiBAcGFyYW0gcHJvcGVydHkgT25lIG9mIGl0cyByZWdpc3RlcmVkIHByb3BlcnRpZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCwgUCBleHRlbmRzIGtleW9mIFQ+KFxuICAgIG9iamVjdDogVCxcbiAgICBwcm9wZXJ0eTogRXh0cmFjdDxQLCBzdHJpbmc+LFxuKTogQWNjZXNzb3I8VFtQXT5cblxuLy8gVE9ETzogc3VwcG9ydCBuZXN0ZWQgYmluZGluZ3Ncbi8vIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFxuLy8gICAgIFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbi8vICAgICBQMSBleHRlbmRzIGtleW9mIFQsXG4vLyAgICAgUDIgZXh0ZW5kcyBrZXlvZiBOb25OdWxsYWJsZTxUW1AxXT4sXG4vLyA+KFxuLy8gICAgIG9iamVjdDogVCxcbi8vICAgICBwcm9wZXJ0eTE6IEV4dHJhY3Q8UDEsIHN0cmluZz4sXG4vLyAgICAgcHJvcGVydHkyOiBFeHRyYWN0PFAyLCBzdHJpbmc+LFxuLy8gKTogQWNjZXNzb3I8Tm9uTnVsbGFibGU8VFtQMV0+W1AyXT5cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCBvbiBhIGBHaW8uU2V0dGluZ3NgJ3MgYGtleWAuXG4gKiBWYWx1ZXMgYXJlIHJlY3Vyc2l2ZWx5IHVucGFja2VkLlxuICpcbiAqIEBwYXJhbSBvYmplY3QgVGhlIGBHaW8uU2V0dGluZ3NgIHRvIGNyZWF0ZSB0aGUgYEFjY2Vzc29yYCBvbi5cbiAqIEBwYXJhbSBrZXkgVGhlIHNldHRpbmdzIGtleVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUPihzZXR0aW5nczogR2lvLlNldHRpbmdzLCBrZXk6IHN0cmluZyk6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQ+KG9iamVjdDogR09iamVjdC5PYmplY3QgfCBHaW8uU2V0dGluZ3MsIGtleTogc3RyaW5nKTogQWNjZXNzb3I8VD4ge1xuICAgIGNvbnN0IHByb3AgPSBrZWJhYmlmeShrZXkpIGFzIGtleW9mIHR5cGVvZiBvYmplY3RcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgY29uc3Qgc2lnID0gb2JqZWN0IGluc3RhbmNlb2YgR2lvLlNldHRpbmdzID8gXCJjaGFuZ2VkXCIgOiBcIm5vdGlmeVwiXG4gICAgICAgIGNvbnN0IGlkID0gb2JqZWN0LmNvbm5lY3QoYCR7c2lnfTo6JHtwcm9wfWAsICgpID0+IGNhbGxiYWNrKCkpXG4gICAgICAgIHJldHVybiAoKSA9PiBvYmplY3QuZGlzY29ubmVjdChpZClcbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogVCA9PiB7XG4gICAgICAgIGlmIChvYmplY3QgaW5zdGFuY2VvZiBHaW8uU2V0dGluZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiBvYmplY3QuZ2V0X3ZhbHVlKGtleSkucmVjdXJzaXZlVW5wYWNrKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtwcm9wLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gIGFzIGtleW9mIHR5cGVvZiBvYmplY3RcblxuICAgICAgICAgICAgaWYgKGdldHRlciBpbiBvYmplY3QgJiYgdHlwZW9mIG9iamVjdFtnZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKG9iamVjdFtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKCkgYXMgVFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvcCBpbiBvYmplY3QpIHJldHVybiBvYmplY3RbcHJvcF0gYXMgVFxuICAgICAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHJldHVybiBvYmplY3Rba2V5IGFzIGtleW9mIHR5cGVvZiBvYmplY3RdIGFzIFRcblxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBnZXQgcHJvcGVydHkgJHtrZXl9YClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbnR5cGUgQ29ubmVjdGlvbkhhbmRsZXI8XG4gICAgTyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMgZXh0ZW5kcyBrZXlvZiBPW1wiJHNpZ25hbHNcIl0sXG4gICAgUmV0dXJuLFxuPiA9IE9bXCIkc2lnbmFsc1wiXVtTXSBleHRlbmRzICguLi5hcmdzOiBhbnlbXSkgPT4gaW5mZXIgUlxuICAgID8gdm9pZCBleHRlbmRzIFJcbiAgICAgICAgPyAoLi4uYXJnczogUGFyYW1ldGVyczxPW1wiJHNpZ25hbHNcIl1bU10+KSA9PiBSZXR1cm5cbiAgICAgICAgOiBuZXZlclxuICAgIDogbmV2ZXJcblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBzZXRzIHVwIGEgbGlzdCBvZiBgR09iamVjdC5PYmplY3RgIHNpZ25hbCBjb25uZWN0aW9ucy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBjb25zdCB2YWx1ZTogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbm5lY3Rpb24oXG4gKiAgIFwiaW5pdGlhbCB2YWx1ZVwiLFxuICogICBbb2JqMSwgXCJzaWctbmFtZVwiLCAoLi4uYXJncykgPT4gXCJzdHJcIl0sXG4gKiAgIFtvYmoyLCBcInNpZy1uYW1lXCIsICguLi5hcmdzKSA9PiBcInN0clwiXVxuICogKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSBzaWduYWxzIEEgbGlzdCBvZiBgR09iamVjdC5PYmplY3RgLCBzaWduYWwgbmFtZSBhbmQgY2FsbGJhY2sgcGFpcnMgdG8gY29ubmVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3Rpb248XG4gICAgVCxcbiAgICBPMSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMxIGV4dGVuZHMga2V5b2YgTzFbXCIkc2lnbmFsc1wiXSxcbiAgICBPMiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMyIGV4dGVuZHMga2V5b2YgTzJbXCIkc2lnbmFsc1wiXSxcbiAgICBPMyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMzIGV4dGVuZHMga2V5b2YgTzNbXCIkc2lnbmFsc1wiXSxcbiAgICBPNCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM0IGV4dGVuZHMga2V5b2YgTzRbXCIkc2lnbmFsc1wiXSxcbiAgICBPNSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM1IGV4dGVuZHMga2V5b2YgTzVbXCIkc2lnbmFsc1wiXSxcbiAgICBPNiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM2IGV4dGVuZHMga2V5b2YgTzZbXCIkc2lnbmFsc1wiXSxcbiAgICBPNyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM3IGV4dGVuZHMga2V5b2YgTzdbXCIkc2lnbmFsc1wiXSxcbiAgICBPOCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM4IGV4dGVuZHMga2V5b2YgTzhbXCIkc2lnbmFsc1wiXSxcbiAgICBPOSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM5IGV4dGVuZHMga2V5b2YgTzlbXCIkc2lnbmFsc1wiXSxcbj4oXG4gICAgaW5pdDogVCxcbiAgICBoMTogW08xLCBTMSwgQ29ubmVjdGlvbkhhbmRsZXI8TzEsIFMxLCBUPl0sXG4gICAgaDI/OiBbTzIsIFMyLCBDb25uZWN0aW9uSGFuZGxlcjxPMiwgUzIsIFQ+XSxcbiAgICBoMz86IFtPMywgUzMsIENvbm5lY3Rpb25IYW5kbGVyPE8zLCBTMywgVD5dLFxuICAgIGg0PzogW080LCBTNCwgQ29ubmVjdGlvbkhhbmRsZXI8TzQsIFM0LCBUPl0sXG4gICAgaDU/OiBbTzUsIFM1LCBDb25uZWN0aW9uSGFuZGxlcjxPNSwgUzUsIFQ+XSxcbiAgICBoNj86IFtPNiwgUzYsIENvbm5lY3Rpb25IYW5kbGVyPE82LCBTNiwgVD5dLFxuICAgIGg3PzogW083LCBTNywgQ29ubmVjdGlvbkhhbmRsZXI8TzcsIFM3LCBUPl0sXG4gICAgaDg/OiBbTzgsIFM4LCBDb25uZWN0aW9uSGFuZGxlcjxPOCwgUzgsIFQ+XSxcbiAgICBoOT86IFtPOSwgUzksIENvbm5lY3Rpb25IYW5kbGVyPE85LCBTOSwgVD5dLFxuKSB7XG4gICAgbGV0IHZhbHVlID0gaW5pdFxuICAgIGxldCBkaXNwb3NlOiBBcnJheTxEaXNwb3NlRnVuY3Rpb24+XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3Qgc2lnbmFscyA9IFtoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBoNywgaDgsIGg5XS5maWx0ZXIoKGgpID0+IGggIT09IHVuZGVmaW5lZClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBzaWduYWxzLm1hcCgoW29iamVjdCwgc2lnbmFsLCBjYWxsYmFja10pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IEdPYmplY3QuT2JqZWN0LnByb3RvdHlwZS5jb25uZWN0LmNhbGwoXG4gICAgICAgICAgICAgICAgICAgIG9iamVjdCxcbiAgICAgICAgICAgICAgICAgICAgc2lnbmFsIGFzIHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgKF8sIC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gY2FsbGJhY2soLi4uYXJncylcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuICgpID0+IEdPYmplY3QuT2JqZWN0LnByb3RvdHlwZS5kaXNjb25uZWN0LmNhbGwob2JqZWN0LCBpZClcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZS5tYXAoKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubGVuZ3RoID0gMFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiB2YWx1ZSwgc3Vic2NyaWJlKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHNpZ25hbCBmcm9tIGEgcHJvdmllciBmdW5jdGlvbi5cbiAqIFRoZSBwcm92aWRlciBpcyBjYWxsZWQgd2hlbiB0aGUgZmlyc3Qgc3Vic2NyaWJlciBhcHBlYXJzIGFuZCB0aGUgcmV0dXJuZWQgZGlzcG9zZVxuICogZnVuY3Rpb24gZnJvbSB0aGUgcHJvdmlkZXIgd2lsbCBiZSBjYWxsZWQgd2hlbiB0aGUgbnVtYmVyIG9mIHN1YnNjcmliZXJzIGRyb3AgdG8gemVyby5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCB2YWx1ZSA9IGNyZWF0ZUV4dGVybmFsKDAsIChzZXQpID0+IHtcbiAqICAgY29uc3QgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiBzZXQoKHYpID0+IHYgKyAxKSlcbiAqICAgcmV0dXJuICgpID0+IGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpXG4gKiB9KVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSBwcm9kdWNlciBUaGUgcHJvZHVjZXIgZnVuY3Rpb24gd2hpY2ggc2hvdWxkIHJldHVybiBhIGNsZWFudXAgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUV4dGVybmFsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgcHJvZHVjZXI6IChzZXQ6IFNldHRlcjxUPikgPT4gRGlzcG9zZUZ1bmN0aW9uLFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IGRpc3Bvc2U6IERpc3Bvc2VGdW5jdGlvblxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IHByb2R1Y2VyKCh2OiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWU6IFQgPSB0eXBlb2YgdiA9PT0gXCJmdW5jdGlvblwiID8gdihjdXJyZW50VmFsdWUpIDogdlxuICAgICAgICAgICAgICAgIGlmIChuZXdWYWx1ZSAhPT0gY3VycmVudFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZSgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKVxufVxuXG4vKiogQGV4cGVyaW1lbnRhbCAqL1xudHlwZSBTZXR0aW5nczxUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4gPSB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBVbmNhcGl0YWxpemU8UGFzY2FsaWZ5PEs+Pl06IEFjY2Vzc29yPEluZmVyVmFyaWFudFJlYzxUW0tdPj5cbn0gJiB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBgc2V0JHtQYXNjYWxpZnk8Sz59YF06IFNldHRlcjxJbmZlclZhcmlhbnQ8VFtLXT4+XG59XG5cbi8qKlxuICogQGV4cGVyaW1lbnRhbFxuICpcbiAqIFdyYXAgYSB7QGxpbmsgR2lvLlNldHRpbmdzfSBpbnRvIGEgY29sbGVjdGlvbiBvZiBzZXR0ZXJzIGFuZCBhY2Nlc3NvcnMuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgcyA9IGNyZWF0ZVNldHRpbmdzKHNldHRpbmdzLCB7XG4gKiAgIFwiY29tcGxleC1rZXlcIjogXCJhe3Nhe3NzfX1cIixcbiAqICAgXCJzaW1wbGUta2V5XCI6IFwic1wiLFxuICogfSlcbiAqXG4gKiBzLmNvbXBsZXhLZXkuc3Vic2NyaWJlKCgpID0+IHtcbiAqICAgcHJpbnQocy5jb21wbGV4S2V5LmdldCgpKVxuICogfSlcbiAqXG4gKiBzLnNldENvbXBsZXhLZXkoKHByZXYpID0+ICh7XG4gKiAgIC4uLnByZXYsXG4gKiAgIGtleTogeyBuZXN0ZWQ6IFwiXCIgfSxcbiAqIH0pKVxuICogYGBgXG4gKi9cbi8vIFRPRE86IGNvbWUgdXAgd2l0aCBhbiBBUElcbi8vIC0gdG8gbWFudWFsbHkgYW5ub3RhdGUgVmFyaWFudCB0eXBlZCBzZXR0ZXJzL2dldHRlcnNcbi8vIC0gdG8gc2V0IHJlY3Vyc2l2ZSB2cyBkZWVwIHVucGFjayBwZXIga2V5XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2V0dGluZ3M8Y29uc3QgVCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHN0cmluZz4+KFxuICAgIHNldHRpbmdzOiBHaW8uU2V0dGluZ3MsXG4gICAga2V5czogVCxcbik6IFNldHRpbmdzPFQ+IHtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKFxuICAgICAgICBPYmplY3QuZW50cmllcyhrZXlzKS5mbGF0TWFwKChba2V5LCB0eXBlXSkgPT4gW1xuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIGNhbWVsaWZ5KGtleSksXG4gICAgICAgICAgICAgICAgbmV3IEFjY2Vzc29yKFxuICAgICAgICAgICAgICAgICAgICAoKSA9PiBzZXR0aW5ncy5nZXRfdmFsdWUoa2V5KS5yZWN1cnNpdmVVbnBhY2soKSxcbiAgICAgICAgICAgICAgICAgICAgKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpZCA9IHNldHRpbmdzLmNvbm5lY3QoYGNoYW5nZWQ6OiR7a2V5fWAsIGNhbGxiYWNrKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgpID0+IHNldHRpbmdzLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgYHNldCR7a2V5WzBdLnRvVXBwZXJDYXNlKCkgKyBjYW1lbGlmeShrZXkpLnNsaWNlKDEpfWAsXG4gICAgICAgICAgICAgICAgKHY6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3Muc2V0X3ZhbHVlKFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KHNldHRpbmdzLmdldF92YWx1ZShrZXkpLmRlZXBVbnBhY2soKSkgOiB2LFxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICBdKSxcbiAgICApXG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcblxuZXhwb3J0IGZ1bmN0aW9uIGtlYmFiaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIl9cIiwgXCItXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzbmFrZWlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDEtJDJcIilcbiAgICAgICAgLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FtZWxpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1stX10oLikvZywgKF8sIGNoYXIpID0+IGNoYXIudG9VcHBlckNhc2UoKSlcbn1cblxuZXhwb3J0IHR5cGUgUGFzY2FsaWZ5PFM+ID0gUyBleHRlbmRzIGAke2luZmVyIEhlYWR9JHtcIi1cIiB8IFwiX1wifSR7aW5mZXIgVGFpbH1gXG4gICAgPyBgJHtDYXBpdGFsaXplPEhlYWQ+fSR7UGFzY2FsaWZ5PFRhaWw+fWBcbiAgICA6IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgID8gQ2FwaXRhbGl6ZTxTPlxuICAgICAgOiBuZXZlclxuXG5leHBvcnQgdHlwZSBYbWxOb2RlID0ge1xuICAgIG5hbWU6IHN0cmluZ1xuICAgIGF0dHJpYnV0ZXM/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+XG4gICAgY2hpbGRyZW4/OiBBcnJheTxYbWxOb2RlPlxufVxuXG5leHBvcnQgZnVuY3Rpb24geG1sKHsgbmFtZSwgYXR0cmlidXRlcywgY2hpbGRyZW4gfTogWG1sTm9kZSkge1xuICAgIGxldCBidWlsZGVyID0gYDwke25hbWV9YFxuXG4gICAgY29uc3QgYXR0cnMgPSBPYmplY3QuZW50cmllcyhhdHRyaWJ1dGVzID8/IFtdKVxuXG4gICAgaWYgKGF0dHJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgYXR0cnMpIHtcbiAgICAgICAgICAgIGJ1aWxkZXIgKz0gYCAke2tleX09XCIke3ZhbHVlfVwiYFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgICAgYnVpbGRlciArPSBcIj5cIlxuICAgICAgICBmb3IgKGNvbnN0IG5vZGUgb2YgY2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGJ1aWxkZXIgKz0geG1sKG5vZGUpXG4gICAgICAgIH1cbiAgICAgICAgYnVpbGRlciArPSBgPC8ke25hbWV9PmBcbiAgICB9IGVsc2Uge1xuICAgICAgICBidWlsZGVyICs9IFwiIC8+XCJcbiAgICB9XG5cbiAgICByZXR1cm4gYnVpbGRlclxufVxuXG4vLyBCaW5kaW5ncyB3b3JrIG92ZXIgcHJvcGVydGllcyBpbiBrZWJhYi1jYXNlIGJlY2F1c2UgdGhhdHMgdGhlIGNvbnZlbnRpb24gb2YgZ29iamVjdFxuLy8gaG93ZXZlciBpbiBqcyBpdHMgZWl0aGVyIHNuYWtlX2Nhc2Ugb3IgY2FtZWxDYXNlXG4vLyBhbHNvIG9uIERCdXMgaW50ZXJmYWNlcyBpdHMgUGFzY2FsQ2FzZSBieSBjb252ZW50aW9uXG4vLyBzbyBhcyBhIHdvcmthcm91bmQgd2UgdXNlIGdldF9wcm9wZXJ0eV9uYW1lIGFuZCBvbmx5IHVzZSB0aGUgcHJvcGVydHkgZmllbGQgYXMgYSBmYWxsYmFja1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5R2V0dGVyPFQgZXh0ZW5kcyBvYmplY3Q+KG9iamVjdDogVCwgcHJvcDogRXh0cmFjdDxrZXlvZiBULCBzdHJpbmc+KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iamVjdCwgYGdldF8ke2tlYmFiaWZ5KHByb3ApLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gLCB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiAoKSA9PiBvYmplY3RbcHJvcF0sXG4gICAgfSlcbn1cblxuLy8gYXR0ZW1wdCBzZXR0aW5nIGEgcHJvcGVydHkgb2YgR09iamVjdC5PYmplY3RcbmV4cG9ydCBmdW5jdGlvbiBzZXQob2JqOiBHT2JqZWN0Lk9iamVjdCwgcHJvcDogc3RyaW5nLCB2YWx1ZTogYW55KSB7XG4gICAgY29uc3Qga2V5ID0gc25ha2VpZnkocHJvcClcbiAgICBjb25zdCBnZXR0ZXIgPSBgZ2V0XyR7a2V5fWAgYXMga2V5b2YgdHlwZW9mIG9ialxuICAgIGNvbnN0IHNldHRlciA9IGBzZXRfJHtrZXl9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqXG5cbiAgICBsZXQgY3VycmVudDogdW5rbm93blxuXG4gICAgaWYgKGdldHRlciBpbiBvYmogJiYgdHlwZW9mIG9ialtnZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgY3VycmVudCA9IChvYmpbZ2V0dGVyXSBhcyAoKSA9PiB1bmtub3duKSgpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgY3VycmVudCA9IG9ialtwcm9wIGFzIGtleW9mIHR5cGVvZiBvYmpdXG4gICAgfVxuXG4gICAgaWYgKGN1cnJlbnQgIT09IHZhbHVlKSB7XG4gICAgICAgIGlmIChzZXR0ZXIgaW4gb2JqICYmIHR5cGVvZiBvYmpbc2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICA7KG9ialtzZXR0ZXJdIGFzICh2OiBhbnkpID0+IHZvaWQpKHZhbHVlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihvYmosIHsgW3Byb3BdOiB2YWx1ZSB9KVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCB0eXBlIEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyB0eXBlIEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuXG50eXBlIEdPYmogPSBHT2JqZWN0Lk9iamVjdFxuZXhwb3J0IHR5cGUgQ0M8VCBleHRlbmRzIEdPYmogPSBHT2JqPiA9IHsgbmV3IChwcm9wczogYW55KTogVCB9XG5leHBvcnQgdHlwZSBGQzxUIGV4dGVuZHMgR09iaiA9IEdPYmo+ID0gKHByb3BzOiBhbnkpID0+IFRcblxudHlwZSBDc3NTZXR0ZXIgPSAob2JqZWN0OiBHT2JqLCBjc3M6IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz4pID0+IHZvaWRcbnR5cGUgQ2hpbGRGbiA9IChwYXJlbnQ6IEdPYmosIGNoaWxkOiBHT2JqIHwgbnVtYmVyIHwgc3RyaW5nLCBpbmRleD86IG51bWJlcikgPT4gdm9pZFxuXG5leHBvcnQgZnVuY3Rpb24gY29uZmlndWUoY29uZjogUGFydGlhbDxKc3hFbnY+KSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZW52LCBjb25mKVxufVxuXG50eXBlIEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czogUmVjb3JkPHN0cmluZywgQ0MgfCBGQz5cbiAgICBhZGRDaGlsZDogQ2hpbGRGblxuICAgIHNldENzczogQ3NzU2V0dGVyXG4gICAgc2V0Q2xhc3M6IENzc1NldHRlclxuICAgIGluaXRQcm9wczogKHByb3BzOiBhbnkpID0+IHZvaWRcbiAgICBkZWZhdWx0Q2xlYW51cDogKG9iamVjdDogR09iaikgPT4gdm9pZFxufVxuXG5mdW5jdGlvbiBtaXNzaW5nSW1wbCgpIHtcbiAgICB0aHJvdyBFcnJvcihcIm1pc3NpbmcgaW1wbFwiKVxufVxuXG5leHBvcnQgY29uc3QgZW52OiBKc3hFbnYgPSB7XG4gICAgaW50cmluc2ljRWxlbWVudHM6IHt9LFxuICAgIGFkZENoaWxkOiBtaXNzaW5nSW1wbCxcbiAgICBzZXRDc3M6IG1pc3NpbmdJbXBsLFxuICAgIHNldENsYXNzOiBtaXNzaW5nSW1wbCxcbiAgICBpbml0UHJvcHM6ICgpID0+IHZvaWQgMCxcbiAgICBkZWZhdWx0Q2xlYW51cDogKCkgPT4gdm9pZCAwLFxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgcmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUgfSBmcm9tIFwiLi4vZ25vbWUvc2lnbmFsVHJhY2tlci5qc1wiXG5cbi8vIFRPRE86IEZyYWdtZW50IHNob3VsZCBpbXBsZW1lbnQgR2lvLkxpc3RNb2RlbFxuXG5leHBvcnQgY2xhc3MgRnJhZ21lbnQ8VCA9IGFueT4gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgc3RhdGljIFtHT2JqZWN0LnNpZ25hbHNdID0ge1xuICAgICAgICBcImRlc3Ryb3lcIjoge30sXG5cbiAgICAgICAgXCJjaGlsZC1hZGRlZFwiOiB7XG4gICAgICAgICAgICBwYXJhbV90eXBlczogW0dPYmplY3QuVFlQRV9PQkpFQ1QsIEdPYmplY3QuVFlQRV9VSU5UXSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJjaGlsZC1yZW1vdmVkXCI6IHtcbiAgICAgICAgICAgIHBhcmFtX3R5cGVzOiBbR09iamVjdC5UWVBFX09CSkVDVCwgR09iamVjdC5UWVBFX1VJTlRdLFxuICAgICAgICB9LFxuICAgIH1cblxuICAgIHN0YXRpYyBbR09iamVjdC5wcm9wZXJ0aWVzXSA9IHtcbiAgICAgICAgY2hpbGRyZW46IEdPYmplY3QuUGFyYW1TcGVjLmpzb2JqZWN0KFwiY2hpbGRyZW5cIiwgXCJcIiwgXCJcIiwgR09iamVjdC5QYXJhbUZsYWdzLlJFQURBQkxFKSxcbiAgICB9XG5cbiAgICBzdGF0aWMge1xuICAgICAgICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3ModGhpcylcbiAgICAgICAgcmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUodGhpcylcbiAgICB9XG5cbiAgICBzdGF0aWMgbmV3PFQ+KGNoaWxkcmVuOiBBcnJheTxUPiA9IFtdKSB7XG4gICAgICAgIHJldHVybiBuZXcgRnJhZ21lbnQoeyBjaGlsZHJlbiB9KVxuICAgIH1cblxuICAgIHByaXZhdGUgY29ubmVjdGlvbklkcyA9IG5ldyBTZXQ8bnVtYmVyPigpXG4gICAgcHJpdmF0ZSBfY2hpbGRyZW46IEFycmF5PFQ+XG5cbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIHJldHVybiBbLi4udGhpcy5fY2hpbGRyZW5dXG4gICAgfVxuXG4gICAgYWRkQ2hpbGQoY2hpbGQ6IFQsIGluZGV4OiBudW1iZXIgPSAtMSk6IHZvaWQge1xuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYG5lc3RpbmcgRnJhZ21lbnRzIGFyZSBub3QgeWV0IHN1cHBvcnRlZGApXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5kZXggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLl9jaGlsZHJlbiA9IFtcbiAgICAgICAgICAgICAgICAuLi50aGlzLl9jaGlsZHJlbi5zbGljZSgwLCBpbmRleCksXG4gICAgICAgICAgICAgICAgY2hpbGQsXG4gICAgICAgICAgICAgICAgLi4udGhpcy5fY2hpbGRyZW4uc2xpY2UoaW5kZXgpLFxuICAgICAgICAgICAgXVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fY2hpbGRyZW4ucHVzaChjaGlsZClcbiAgICAgICAgICAgIGluZGV4ID0gdGhpcy5fY2hpbGRyZW4ubGVuZ3RoIC0gMVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5lbWl0KFwiY2hpbGQtYWRkZWRcIiwgY2hpbGQsIGluZGV4KVxuICAgICAgICB0aGlzLm5vdGlmeShcImNoaWxkcmVuXCIpXG4gICAgfVxuXG4gICAgaGFzQ2hpbGQoY2hpbGQ6IFQpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NoaWxkcmVuLmZpbmRJbmRleCgoY2gpID0+IGNoID09PSBjaGlsZCkgPiAtMVxuICAgIH1cblxuICAgIHJlbW92ZUNoaWxkKGNoaWxkOiBUKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fY2hpbGRyZW4uZmluZEluZGV4KChpKSA9PiBpID09PSBjaGlsZClcbiAgICAgICAgdGhpcy5fY2hpbGRyZW4uc3BsaWNlKGluZGV4LCAxKVxuXG4gICAgICAgIHRoaXMuZW1pdChcImNoaWxkLXJlbW92ZWRcIiwgY2hpbGQsIGluZGV4KVxuICAgICAgICB0aGlzLm5vdGlmeShcImNoaWxkcmVuXCIpXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoeyBjaGlsZHJlbiA9IFtdIH06IFBhcnRpYWw8eyBjaGlsZHJlbjogQXJyYXk8VD4gfCBUIH0+ID0ge30pIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICB0aGlzLl9jaGlsZHJlbiA9IEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dXG4gICAgfVxuXG4gICAgY29ubmVjdChzaWduYWw6IHN0cmluZywgY2FsbGJhY2s6IChfOiB0aGlzLCAuLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IG51bWJlciB7XG4gICAgICAgIGNvbnN0IGlkID0gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKVxuICAgICAgICB0aGlzLmNvbm5lY3Rpb25JZHMuYWRkKGlkKVxuICAgICAgICByZXR1cm4gaWRcbiAgICB9XG5cbiAgICBkaXNjb25uZWN0KGlkOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIuZGlzY29ubmVjdChpZClcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uSWRzLmRlbGV0ZShpZClcbiAgICB9XG5cbiAgICBkZXN0cm95KCkge1xuICAgICAgICB0aGlzLmVtaXQoXCJkZXN0cm95XCIpXG4gICAgICAgIGZvciAoY29uc3QgaWQgb2YgdGhpcy5jb25uZWN0aW9uSWRzLnZhbHVlcygpKSB7XG4gICAgICAgICAgICBzdXBlci5kaXNjb25uZWN0KGlkKVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCB0eXBlIEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5cbnR5cGUgVHlwZSA9IHsgbmV3ICguLi5hcmdzOiBhbnlbXSk6IEdPYmplY3QuT2JqZWN0IH1cblxuLy8gQHRzLWV4cGVjdC1lcnJvciBtaXNzaW5nIHR5cGVzXG5jb25zdCBtb2QgPSBpbXBvcnQoXCJyZXNvdXJjZTovLy9vcmcvZ25vbWUvc2hlbGwvbWlzYy9zaWduYWxUcmFja2VyLmpzXCIpXG5cbmV4cG9ydCBjb25zdCByZWdpc3RlckRlc3Ryb3lhYmxlVHlwZTogKHR5cGU6IFR5cGUpID0+IHZvaWQgPSBhd2FpdCBtb2RcbiAgICAudGhlbigobW9kKSA9PiBtb2QucmVnaXN0ZXJEZXN0cm95YWJsZVR5cGUpXG4gICAgLmNhdGNoKCgpID0+ICgpID0+IHZvaWQgMClcbiIsICJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yLCBTdGF0ZSwgY3JlYXRlU3RhdGUgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsgb25DbGVhbnVwLCBTY29wZSB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuaW1wb3J0IHR5cGUgQ2x1dHRlciBmcm9tIFwiZ2k6Ly9DbHV0dGVyXCJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmltcG9ydCB0eXBlIEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj0zLjBcIlxuXG5pbnRlcmZhY2UgRm9yUHJvcHM8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5PiB7XG4gICAgZWFjaDogQWNjZXNzb3I8SXRlcmFibGU8SXRlbT4+XG4gICAgY2hpbGRyZW46IChpdGVtOiBJdGVtLCBpbmRleDogQWNjZXNzb3I8bnVtYmVyPikgPT4gRWxcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHJ1biBmb3IgZWFjaCByZW1vdmVkIGVsZW1lbnQuXG4gICAgICogVGhlIGRlZmF1bHQgdmFsdWUgZGVwZW5kcyBvbiB0aGUgZW52aXJvbm1lbnQ6XG4gICAgICpcbiAgICAgKiAtICoqR3RrNCoqOiBudWxsXG4gICAgICogLSAqKkd0azMqKjoge0BsaW5rIEd0ay5XaWRnZXQucHJvdG90eXBlLmRlc3Ryb3l9XG4gICAgICogLSAqKkdub21lKio6IHtAbGluayBDbHV0dGVyLkFjdG9yLnByb3RvdHlwZS5kZXN0cm95fVxuICAgICAqL1xuICAgIGNsZWFudXA/OiBudWxsIHwgKChlbGVtZW50OiBFbCwgaXRlbTogSXRlbSwgaW5kZXg6IG51bWJlcikgPT4gdm9pZClcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRoYXQgZ2VuZXJhdGVzIHRoZSBrZXkgZm9yIGVhY2ggaXRlbS5cbiAgICAgKlxuICAgICAqIEJ5IGRlZmF1bHQgaXRlbXMgYXJlIG1hcHBlZCBieTpcbiAgICAgKiAtIHZhbHVlIGluIGNhc2Ugb2YgcHJpbWl0aXZlIHZhbHVlc1xuICAgICAqIC0gcmVmZXJlbmNlIG90aGVyd2lzZVxuICAgICAqL1xuICAgIGlkPzogKGl0ZW06IEl0ZW0pID0+IEtleSB8IEl0ZW1cbn1cblxuLy8gVE9ETzogc3VwcG9ydCBHaW8uTGlzdE1vZGVsXG5cbmV4cG9ydCBmdW5jdGlvbiBGb3I8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5Pih7XG4gICAgZWFjaCxcbiAgICBjaGlsZHJlbjogbWtDaGlsZCxcbiAgICBjbGVhbnVwLFxuICAgIGlkID0gKGl0ZW06IEl0ZW0pID0+IGl0ZW0sXG59OiBGb3JQcm9wczxJdGVtLCBFbCwgS2V5Pik6IEZyYWdtZW50PEVsPiB7XG4gICAgdHlwZSBNYXBJdGVtID0geyBpdGVtOiBJdGVtOyBjaGlsZDogRWw7IGluZGV4OiBTdGF0ZTxudW1iZXI+OyBzY29wZTogU2NvcGUgfVxuXG4gICAgY29uc3QgbWFwID0gbmV3IE1hcDxJdGVtIHwgS2V5LCBNYXBJdGVtPigpXG4gICAgY29uc3QgZnJhZ21lbnQgPSBuZXcgRnJhZ21lbnQ8RWw+KClcblxuICAgIGZ1bmN0aW9uIHJlbW92ZSh7IGl0ZW0sIGNoaWxkLCBpbmRleDogW2luZGV4XSwgc2NvcGUgfTogTWFwSXRlbSkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFudXAgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgY2xlYW51cChjaGlsZCwgaXRlbSwgaW5kZXguZ2V0KCkpXG4gICAgICAgIH0gZWxzZSBpZiAoY2xlYW51cCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgZW52LmRlZmF1bHRDbGVhbnVwKGNoaWxkKVxuICAgICAgICB9XG4gICAgICAgIHNjb3BlLmRpc3Bvc2UoKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNhbGxiYWNrKGl0YXJlYWJsZTogSXRlcmFibGU8SXRlbT4pIHtcbiAgICAgICAgY29uc3QgaXRlbXMgPSBbLi4uaXRhcmVhYmxlXVxuICAgICAgICBjb25zdCBpZHMgPSBpdGVtcy5tYXAoaWQpXG4gICAgICAgIGNvbnN0IGlkU2V0ID0gbmV3IFNldChpZHMpXG5cbiAgICAgICAgLy8gY2xlYW51cCBjaGlsZHJlbiBtaXNzaW5nIGZyb20gYXJyXG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIG1hcC5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgIC8vIHRoZXJlIGlzIG5vIGdlbmVyaWMgd2F5IHRvIGluc2VydCBjaGlsZCBhdCBpbmRleFxuICAgICAgICAgICAgLy8gc28gd2Ugc29ydCBieSByZW1vdmluZyBldmVyeSBjaGlsZCBhbmQgcmVhcHBlbmRpbmcgaW4gb3JkZXJcbiAgICAgICAgICAgIGZyYWdtZW50LnJlbW92ZUNoaWxkKHZhbHVlLmNoaWxkKVxuXG4gICAgICAgICAgICBpZiAoIWlkU2V0LmhhcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlKHZhbHVlKVxuICAgICAgICAgICAgICAgIG1hcC5kZWxldGUoa2V5KVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gdXBkYXRlIGluZGV4IGFuZCBhZGQgbmV3IGl0ZW1zXG4gICAgICAgIGl0ZW1zLm1hcCgoaXRlbSwgaSkgPT4ge1xuICAgICAgICAgICAgY29uc3Qga2V5ID0gaWRzW2ldXG4gICAgICAgICAgICBpZiAobWFwLmhhcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgICAgICAgICBpbmRleDogWywgc2V0SW5kZXhdLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZCxcbiAgICAgICAgICAgICAgICB9ID0gbWFwLmdldChrZXkpIVxuICAgICAgICAgICAgICAgIHNldEluZGV4KGkpXG4gICAgICAgICAgICAgICAgaWYgKGZyYWdtZW50Lmhhc0NoaWxkKGNoaWxkKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYGR1cGxpY2F0ZSBrZXlzIGZvdW5kOiAke2tleX1gKVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZyYWdtZW50LmFkZENoaWxkKGNoaWxkKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW2luZGV4LCBzZXRJbmRleF0gPSBjcmVhdGVTdGF0ZShpKVxuICAgICAgICAgICAgICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKFNjb3BlLmN1cnJlbnQpXG4gICAgICAgICAgICAgICAgY29uc3QgY2hpbGQgPSBzY29wZS5ydW4oKCkgPT4gbWtDaGlsZChpdGVtLCBpbmRleCkpXG4gICAgICAgICAgICAgICAgbWFwLnNldChrZXksIHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXgsIHNldEluZGV4XSwgc2NvcGUgfSlcbiAgICAgICAgICAgICAgICBmcmFnbWVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjYWxsYmFjayhlYWNoLmdldCgpKVxuICAgIGNvbnN0IGRpc3Bvc2UgPSBlYWNoLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKGVhY2guZ2V0KCkpXG4gICAgfSlcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgIGRpc3Bvc2UoKVxuXG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgbWFwLnZhbHVlcygpKSB7XG4gICAgICAgICAgICByZW1vdmUodmFsdWUpXG4gICAgICAgIH1cblxuICAgICAgICBtYXAuY2xlYXIoKVxuICAgIH0pXG5cbiAgICByZXR1cm4gZnJhZ21lbnRcbn1cbiIsICJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IG9uQ2xlYW51cCwgU2NvcGUgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmltcG9ydCBDbHV0dGVyIGZyb20gXCJnaTovL0NsdXR0ZXJcIlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuaW1wb3J0IHR5cGUgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTMuMFwiXG5cbmludGVyZmFjZSBXaXRoUHJvcHM8VCwgRSBleHRlbmRzIEpTWC5FbGVtZW50PiB7XG4gICAgdmFsdWU6IEFjY2Vzc29yPFQ+XG4gICAgY2hpbGRyZW46ICh2YWx1ZTogVCkgPT4gRSB8IFwiXCIgfCBmYWxzZSB8IG51bGwgfCB1bmRlZmluZWRcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHJ1biBmb3IgZWFjaCByZW1vdmVkIGVsZW1lbnQuXG4gICAgICogVGhlIGRlZmF1bHQgdmFsdWUgZGVwZW5kcyBvbiB0aGUgZW52aXJvbm1lbnQ6XG4gICAgICpcbiAgICAgKiAtICoqR3RrNCoqOiBudWxsXG4gICAgICogLSAqKkd0azMqKjoge0BsaW5rIEd0ay5XaWRnZXQucHJvdG90eXBlLmRlc3Ryb3l9XG4gICAgICogLSAqKkdub21lKio6IHtAbGluayBDbHV0dGVyLkFjdG9yLnByb3RvdHlwZS5kZXN0cm95fVxuICAgICAqL1xuICAgIGNsZWFudXA/OiBudWxsIHwgKChlbGVtZW50OiBFKSA9PiB2b2lkKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gV2l0aDxULCBFIGV4dGVuZHMgSlNYLkVsZW1lbnQ+KHtcbiAgICB2YWx1ZSxcbiAgICBjaGlsZHJlbjogbWtDaGlsZCxcbiAgICBjbGVhbnVwLFxufTogV2l0aFByb3BzPFQsIEU+KTogRnJhZ21lbnQ8RT4ge1xuICAgIGNvbnN0IGZyYWdtZW50ID0gbmV3IEZyYWdtZW50PEU+KClcblxuICAgIGxldCBzY29wZTogU2NvcGVcblxuICAgIGZ1bmN0aW9uIGNhbGxiYWNrKHY6IFQpIHtcbiAgICAgICAgZm9yIChjb25zdCBjaGlsZCBvZiBmcmFnbWVudC5jaGlsZHJlbikge1xuICAgICAgICAgICAgZnJhZ21lbnQucmVtb3ZlQ2hpbGQoY2hpbGQpXG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY2xlYW51cCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgY2xlYW51cChjaGlsZClcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY2xlYW51cCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGVudi5kZWZhdWx0Q2xlYW51cChjaGlsZClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHNjb3BlKSBzY29wZS5kaXNwb3NlKClcbiAgICAgICAgfVxuXG4gICAgICAgIHNjb3BlID0gbmV3IFNjb3BlKFNjb3BlLmN1cnJlbnQpXG4gICAgICAgIGNvbnN0IGNoID0gc2NvcGUucnVuKCgpID0+IG1rQ2hpbGQodikpXG4gICAgICAgIGlmIChjaCAhPT0gXCJcIiAmJiBjaCAhPT0gZmFsc2UgJiYgY2ggIT09IG51bGwgJiYgY2ggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZnJhZ21lbnQuYWRkQ2hpbGQoY2gpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBkaXNwb3NlID0gdmFsdWUuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgY2FsbGJhY2sodmFsdWUuZ2V0KCkpXG4gICAgfSlcbiAgICBjYWxsYmFjayh2YWx1ZS5nZXQoKSlcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgIHNjb3BlLmRpc3Bvc2UoKVxuICAgICAgICBkaXNwb3NlKClcbiAgICB9KVxuXG4gICAgcmV0dXJuIGZyYWdtZW50XG59XG4iLCAiaW1wb3J0IEFzdGFsSU8gZnJvbSBcImdpOi8vQXN0YWxJT1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCIuLi9nbmltL3NyYy9qc3gvaW5kZXguanNcIlxuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcIi4vcHJvY2Vzcy5qc1wiXG5cbmV4cG9ydCB0eXBlIFRpbWUgPSBBc3RhbElPLlRpbWVcbmV4cG9ydCBjb25zdCBUaW1lID0gQXN0YWxJTy5UaW1lXG5cbmV4cG9ydCBmdW5jdGlvbiBpbnRlcnZhbChpbnRlcnZhbDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLmludGVydmFsKGludGVydmFsLCAoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRpbWVvdXQodGltZW91dDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gQXN0YWxJTy5UaW1lLnRpbWVvdXQodGltZW91dCwgKCkgPT4gdm9pZCBjYWxsYmFjaz8uKCkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpZGxlKGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBBc3RhbElPLlRpbWUuaWRsZSgoKSA9PiB2b2lkIGNhbGxiYWNrPy4oKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGwoXG4gICAgaW5pdDogc3RyaW5nLFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm06IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBmbjogKHByZXY6IFQpID0+IFQgfCBQcm9taXNlPFQ+LFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBpdmFsOiBudW1iZXIsXG4gICAgZXhlY09yRm46IHN0cmluZyB8IHN0cmluZ1tdIHwgKChwcmV2OiBUKSA9PiBUIHwgUHJvbWlzZTxUPiksXG4gICAgdHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IHRpbWVyOiBBc3RhbElPLlRpbWUgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgZnVuY3Rpb24gc2V0KHZhbHVlOiBUKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgdGltZXIgPSBpbnRlcnZhbChpdmFsLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBleGVjT3JGbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZXhlY09yRm4oY3VycmVudFZhbHVlKVxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZS50aGVuKHNldClcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldCh2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNBc3luYyhleGVjT3JGbikudGhlbigoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXQodHJhbnNmb3JtID8gdHJhbnNmb3JtKHN0ZG91dCwgY3VycmVudFZhbHVlKSA6IChzdGRvdXQgYXMgVCkpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aW1lcj8uY2FuY2VsKClcbiAgICAgICAgICAgICAgICB0aW1lciA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiZXhwb3J0IGNsYXNzIFRpbWVyc0RhdGEge1xuICBwdWJsaWMgcnVubmluZ1RpbWVyczogbnVtYmVyID0gMDtcbiAgcHVibGljIGRvbmVUaW1lcnM6IG51bWJlciA9IDA7XG5cbiAgcHVibGljIGdldFVuZG9uZUNvdW50KCkge1xuICAgIHJldHVybiB0aGlzLnJ1bm5pbmdUaW1lcnMgLSB0aGlzLmRvbmVUaW1lcnM7XG4gIH1cblxuICBwdWJsaWMgdXBkYXRlUnVubmluZ1RpbWVycyhjaGFuZ2U6IG51bWJlcik6IFRpbWVyc0RhdGEge1xuICAgIGlmIChNYXRoLmFicyhjaGFuZ2UpICE9PSAxKSByZXR1cm4gdGhpcztcblxuICAgIGNvbnN0IG5ld0RhdGEgPSBuZXcgVGltZXJzRGF0YSgpO1xuICAgIG5ld0RhdGEucnVubmluZ1RpbWVycyA9IHRoaXMucnVubmluZ1RpbWVycyArIGNoYW5nZTtcbiAgICBuZXdEYXRhLmRvbmVUaW1lcnMgPSB0aGlzLmRvbmVUaW1lcnM7XG4gICAgcmV0dXJuIG5ld0RhdGE7XG4gIH1cblxuICBwdWJsaWMgdXBkYXRlRG9uZVRpbWVycyhjaGFuZ2U6IG51bWJlcik6IFRpbWVyc0RhdGEge1xuICAgIGlmIChNYXRoLmFicyhjaGFuZ2UpICE9PSAxKSByZXR1cm4gdGhpcztcblxuICAgIGNvbnN0IG5ld0RhdGEgPSBuZXcgVGltZXJzRGF0YSgpO1xuICAgIG5ld0RhdGEucnVubmluZ1RpbWVycyA9IHRoaXMucnVubmluZ1RpbWVycztcbiAgICBuZXdEYXRhLmRvbmVUaW1lcnMgPSB0aGlzLmRvbmVUaW1lcnMgKyBjaGFuZ2U7XG4gICAgcmV0dXJuIG5ld0RhdGE7XG4gIH1cbn1cbiIsICJpbXBvcnQgeyBSdW5uaW5nVGltZXIgfSBmcm9tIFwiLi9ydW5uaW5nX3RpbWVyXCI7XG5pbXBvcnQgeyBjcmVhdGVTdGF0ZSwgU3RhdGUgfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBTYXZlZFRpbWVyIH0gZnJvbSBcIi4vc2F2ZWRfdGltZXJcIjtcbmltcG9ydCB7IFRpbWVyc0RhdGEgfSBmcm9tIFwiLi90aW1lcnNfZGF0YVwiO1xuXG5leHBvcnQgdHlwZSBUaW1lclN0YXRlcyA9IHtcbiAgcnVubmluZ1RpbWVyczogU3RhdGU8UnVubmluZ1RpbWVyW10+O1xuICBzYXZlZFRpbWVyczogU3RhdGU8U2F2ZWRUaW1lcltdPjtcbiAgdGltZXJzRGF0YTogU3RhdGU8VGltZXJzRGF0YT47XG59O1xuXG5leHBvcnQgY29uc3QgdGltZXJWYXJpYWJsZXM6IFRpbWVyU3RhdGVzID0ge1xuICBydW5uaW5nVGltZXJzOiBjcmVhdGVTdGF0ZShbXSBhcyBSdW5uaW5nVGltZXJbXSksIC8vIDAgcnVubmluZyB0aW1lcnMgYXQgdGhlIGJlZ2dpbmluZ1xuICBzYXZlZFRpbWVyczogY3JlYXRlU3RhdGUoW10gYXMgU2F2ZWRUaW1lcltdKSxcbiAgdGltZXJzRGF0YTogY3JlYXRlU3RhdGUobmV3IFRpbWVyc0RhdGEoKSksXG59O1xuIiwgImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUaW1lTGVmdCh0aW1lSW5TZWNvbmRzOiBudW1iZXIpOiBzdHJpbmcge1xuICAgIGNvbnN0IGhvdXJzID0gdGltZUluU2Vjb25kcyAvIDM2MDA7XG4gICAgdGltZUluU2Vjb25kcyA9IHRpbWVJblNlY29uZHMgJSAzNjAwO1xuICAgIGNvbnN0IG1pbnV0ZXMgPSB0aW1lSW5TZWNvbmRzIC8gNjA7XG4gICAgY29uc3Qgc2Vjb25kcyA9IHRpbWVJblNlY29uZHMgJSA2MDtcblxuICAgIHJldHVybiBgJHtmb3JtYXRUaW1lTnVtYmVyKGhvdXJzKX06JHtmb3JtYXRUaW1lTnVtYmVyKG1pbnV0ZXMpfToke2Zvcm1hdFRpbWVOdW1iZXIoc2Vjb25kcyl9YDtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VGltZU51bWJlcih0aW1lTnVtYmVyOiBudW1iZXIpOiBzdHJpbmcge1xuICAgIHJldHVybiBNYXRoLmZsb29yKHRpbWVOdW1iZXIpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTtcbn0iLCAiaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsSU9cIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuXG5leHBvcnQgZnVuY3Rpb24gcmVhZEZpbGUocGF0aDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gQXN0YWwucmVhZF9maWxlKHBhdGgpIHx8IFwiXCJcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlQXN5bmMocGF0aDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBBc3RhbC5yZWFkX2ZpbGVfYXN5bmMocGF0aCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKEFzdGFsLnJlYWRfZmlsZV9maW5pc2gocmVzKSB8fCBcIlwiKVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdyaXRlRmlsZShwYXRoOiBzdHJpbmcsIGNvbnRlbnQ6IHN0cmluZyk6IHZvaWQge1xuICAgIEFzdGFsLndyaXRlX2ZpbGUocGF0aCwgY29udGVudClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdyaXRlRmlsZUFzeW5jKHBhdGg6IHN0cmluZywgY29udGVudDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgQXN0YWwud3JpdGVfZmlsZV9hc3luYyhwYXRoLCBjb250ZW50LCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoQXN0YWwud3JpdGVfZmlsZV9maW5pc2gocmVzKSlcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb25pdG9yRmlsZShcbiAgICBwYXRoOiBzdHJpbmcsXG4gICAgY2FsbGJhY2s6IChmaWxlOiBzdHJpbmcsIGV2ZW50OiBHaW8uRmlsZU1vbml0b3JFdmVudCkgPT4gdm9pZCxcbik6IEdpby5GaWxlTW9uaXRvciB7XG4gICAgcmV0dXJuIEFzdGFsLm1vbml0b3JfZmlsZShwYXRoLCAoZmlsZTogc3RyaW5nLCBldmVudDogR2lvLkZpbGVNb25pdG9yRXZlbnQpID0+IHtcbiAgICAgICAgY2FsbGJhY2soZmlsZSwgZXZlbnQpXG4gICAgfSkhXG59XG4iLCAiZXhwb3J0IGNsYXNzIENvbW11bmljYXRpb24ge1xuXG4gICAgcHVibGljIHN0YXRpYyBwcmludEluZm8obWVzc2FnZTogc3RyaW5nLCBmaWxlOiBzdHJpbmcgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQpIHtcbiAgICAgICAgQ29tbXVuaWNhdGlvbi5wcmludE1lc3NhZ2UoXCJcdTIxMzlcdUZFMEZcIiwgbWVzc2FnZSwgZmlsZSk7XG4gICAgfVxuICAgIHB1YmxpYyBzdGF0aWMgcHJpbnRTdWNjZXNzKG1lc3NhZ2U6IHN0cmluZywgZmlsZTogc3RyaW5nIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkKSB7XG4gICAgICAgIENvbW11bmljYXRpb24ucHJpbnRNZXNzYWdlKFwiXHUyNzA1XCIsIG1lc3NhZ2UsIGZpbGUpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgcHJpbnRXYXJuaW5nKG1lc3NhZ2U6IHN0cmluZywgZmlsZTogc3RyaW5nIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkKSB7XG4gICAgICAgIENvbW11bmljYXRpb24ucHJpbnRNZXNzYWdlKFwiXHUyNkEwXHVGRTBGXCIsIG1lc3NhZ2UsIGZpbGUpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgcHJpbnRFcnJvcihtZXNzYWdlOiBzdHJpbmcsIGZpbGU6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZCkge1xuICAgICAgICBDb21tdW5pY2F0aW9uLnByaW50TWVzc2FnZShcIlx1RDgzRFx1RENBNVwiLCBtZXNzYWdlLCBmaWxlKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YXRpYyBwcmludE1lc3NhZ2UoaWNvbjogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcsIGZpbGU6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBmaWxlVGV4dCA9IGZpbGUgPT09IHVuZGVmaW5lZCA/IFwiXCIgOiBgWyR7ZmlsZX1dYDtcbiAgICAgICAgY29uc29sZS5sb2coYFske2ljb259XSR7ZmlsZVRleHR9ICR7bWVzc2FnZX1gKTtcbiAgICB9XG5cbn0iLCAiaW1wb3J0IHsgZXhlY0FzeW5jLCBQcm9jZXNzLCBzdWJwcm9jZXNzIH0gZnJvbSBcImFncy9wcm9jZXNzXCI7XG5pbXBvcnQgeyBDb21tdW5pY2F0aW9uIH0gZnJvbSBcIi4vY29tbXVuaWNhdGlvblwiO1xuXG5leHBvcnQgY2xhc3MgU291bmRQbGF5ZXIge1xuICAgIHByaXZhdGUgc3RhdGljIHBsYXllckNvbW1hbmQ6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gICAgcHVibGljIHN0YXRpYyBhc3luYyBpbml0KCkge1xuICAgICAgICBjb25zdCBjYW5kaWRhdGVzID0gW1wibXB2XCIsIFwiZmZwbGF5XCIsIFwicGFwbGF5XCIsIFwicHctcGxheVwiLCBcImFwbGF5XCJdO1xuICAgICAgICBmb3IgKGNvbnN0IGNtZCBvZiBjYW5kaWRhdGVzKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGV4ZWNBc3luYyhbXCJ3aGljaFwiLCBjbWRdKTtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnRyaW0oKSkge1xuICAgICAgICAgICAgICAgICAgICBTb3VuZFBsYXllci5wbGF5ZXJDb21tYW5kID0gY21kO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghU291bmRQbGF5ZXIucGxheWVyQ29tbWFuZCkge1xuICAgICAgICAgICAgQ29tbXVuaWNhdGlvbi5wcmludEVycm9yKGBDYW5ub3QgZmluZCBhbnkgc291bmQgcGxheWVyIHBhY2thZ2UsIHBsZWFzZSBpbnN0YWxsIG9uZSBvZiB0aG9zZTogbXB2LCBmZnBsYXksIHBhcGxheWAsICdTb3VuZFBsYXllcicpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgQ29tbXVuaWNhdGlvbi5wcmludFN1Y2Nlc3MoYFBhY2thZ2UgJyR7U291bmRQbGF5ZXIucGxheWVyQ29tbWFuZH0nIHdhcyBjaG9zZW4gdG8gbWFuYWdlIHNvdW5kc2AsICdTb3VuZFBsYXllcicpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBwbGF5U291bmQoZmlsZVBhdGg6IHN0cmluZyk6IFByb2Nlc3MgfCB1bmRlZmluZWQge1xuICAgICAgICBpZiAoIVNvdW5kUGxheWVyLnBsYXllckNvbW1hbmQpIHtcbiAgICAgICAgICAgIENvbW11bmljYXRpb24ucHJpbnRFcnJvcihgQ2Fubm90IHBsYXkuIFBsYXllciBpcyBub3QgZm91bmQsIHBsZWFzZSBlbnN1cmUgb25lIG9mIHRob3NlIHBhY2thZ2VzIGlzIGluc3RhbGxlZDogbXB2LCBmZnBsYXksIHBhcGxheWAsICdTb3VuZFBsYXllcicpO1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGNtZCA9IFNvdW5kUGxheWVyLnBsYXllckNvbW1hbmQ7XG4gICAgICAgIGxldCBhcmdzOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgICAgIHN3aXRjaCAoY21kKSB7XG4gICAgICAgICAgICBjYXNlIFwicGFwbGF5XCI6XG4gICAgICAgICAgICBjYXNlIFwicHctcGxheVwiOlxuICAgICAgICAgICAgY2FzZSBcImFwbGF5XCI6XG4gICAgICAgICAgICAgICAgYXJncyA9IFtjbWQsIGZpbGVQYXRoXTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJtcHZcIjpcbiAgICAgICAgICAgICAgICBhcmdzID0gW2NtZCwgXCItLW5vLXRlcm1pbmFsXCIsIFwiLS12b2x1bWU9MTAwXCIsIFwiLS1sb29wLWZpbGU9aW5mXCIsIGZpbGVQYXRoXTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJmZnBsYXlcIjpcbiAgICAgICAgICAgICAgICBhcmdzID0gW2NtZCwgXCItbm9kaXNwXCIsIFwiLWF1dG9leGl0XCIsIFwiLWxvZ2xldmVsXCIsIFwicXVpZXRcIiwgXCItbG9vcFwiLCBcIjk5OTlcIiwgZmlsZVBhdGhdO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBDb21tdW5pY2F0aW9uLnByaW50RXJyb3IoYENhbm5vdCBwbGF5LiBQbGF5ZXIgaXMgbm90IGZvdW5kLCBwbGVhc2UgZW5zdXJlIG9uZSBvZiB0aG9zZSBwYWNrYWdlcyBpcyBpbnN0YWxsZWQ6IG1wdiwgZmZwbGF5LCBwYXBsYXlgLCAnU291bmRQbGF5ZXInKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gc3VicHJvY2VzcyhcbiAgICAgICAgICAgIGFyZ3MsXG4gICAgICAgICAgICAob3V0KSA9PiBjb25zb2xlLmxvZyhvdXQpLFxuICAgICAgICAgICAgKGVycikgPT4gY29uc29sZS5lcnJvcihlcnIpLCAvLyBvcHRpb25hbFxuICAgICAgICApXG4gICAgfVxufVxuIiwgImV4cG9ydCBjb25zdCBUSU1FUl9DT05TVEFOVFMgPSB7XG4gICAgTkFNRV9MRU5HVEg6IDEyLFxuICAgIFRJTUVfTEVOR1RIOiAxMixcbiAgICBMQUJFTF9TQUZFU1BBQ0VfQ0hBUlM6IDJcbn0iLCAiaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcImFncy9wcm9jZXNzXCI7XG5pbXBvcnQgeyBDb21tdW5pY2F0aW9uIH0gZnJvbSBcIi4vY29tbXVuaWNhdGlvblwiO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uSWNvbiB9IGZyb20gXCIuLi9lbnVtcy9ub3RpZmljYXRpb25faWNvblwiO1xuaW1wb3J0IHsgY29uZmlndXJhdGlvbiB9IGZyb20gXCIuLi8uLi9hcHBcIjtcblxuXG5cbmV4cG9ydCBjbGFzcyBOb3RpZmljYXRpb25TZW5kZXIge1xuICAgIHByaXZhdGUgc3RhdGljIGNtZDogc3RyaW5nID0gXCJub3RpZnktc2VuZFwiO1xuICAgIHByaXZhdGUgc3RhdGljIHB3ZDogc3RyaW5nIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuXG4gICAgcHVibGljIHN0YXRpYyBhc3luYyBzZW5kKHRpdGxlOiBzdHJpbmcsIGJvZHk6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZCwgaWNvbjogTm90aWZpY2F0aW9uSWNvbiA9IE5vdGlmaWNhdGlvbkljb24uSW5mbywgdXJnZW5jeTogXCJsb3dcIiB8IFwibm9ybWFsXCIgfCBcImNyaXRpY2FsXCIgPSBcIm5vcm1hbFwiKSB7XG4gICAgICAgIENvbW11bmljYXRpb24ucHJpbnRJbmZvKGBOb3RpZmljYXRpb246ICR7dGl0bGV9IC0gJHtib2R5fWApXG5cbiAgICAgICAgY29uc3QgaWNvblBhdGggPSBhd2FpdCBjb25maWd1cmF0aW9uLmdldFB3ZCgpICsgXCIvaWNvbnMvXCIgKyBpY29uO1xuICAgICAgICBjb25zdCBhcmdzOiBzdHJpbmdbXSA9IFt0aGlzLmNtZCwgYC0taWNvbj0ke2ljb25QYXRofWAsIGAtLXVyZ2VuY3k9JHt1cmdlbmN5fWAsIFwiLS1hcHAtbmFtZT1PVlJBRUxfR1RLX0JBUlwiLCB0aXRsZV07XG4gICAgICAgIGlmIChib2R5ICE9PSB1bmRlZmluZWQgJiYgYm9keS5sZW5ndGggPT0gMCkgYXJncy5wdXNoKGJvZHkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCBleGVjQXN5bmMoYXJncyk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBDb21tdW5pY2F0aW9uLnByaW50RXJyb3IoYENhbid0IHNlbmQgbm90aWZpY2F0aW9uICR7dGl0bGV9IC0gJHtib2R5fSwgRVJST1I9JHtlcnJvcn1gLCBcIk5vdGlmaWNhdGlvblNlbmRlclwiKVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImV4cG9ydCBjbGFzcyBUb29scyB7XG5cbiAgICBwdWJsaWMgc3RhdGljIGZvcm1hdFN0cmluZyh0ZXh0OiBzdHJpbmcsIC4uLmFyZ3M6IGFueVtdKSB7XG4gICAgICAgIGlmIChhcmdzLmxlbmd0aCA9PT0gMClcbiAgICAgICAgICAgIHJldHVybiB0ZXh0O1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGV4dCA9IHRleHQucmVwbGFjZShgeyR7aX19YCwgYXJnc1tpXSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGV4dDtcbiAgICB9XG5cblxuXG4gICAgcHVibGljIHN0YXRpYyByYW5kb21JbnQobWluOiBudW1iZXIsIG1heDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIG1heCkgKyBtaW47XG4gICAgfVxufSIsICJjbGFzcyBUZXh0SWNvbnMge1xuXG4gICAgLy8jcmVnaW9uIEdlbmVyYWxcbiAgICBwdWJsaWMgcmVhZG9ubHkgcGx1czogc3RyaW5nID0gXCJcdUYwNjdcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgY2xvc2U6IHN0cmluZyA9IFwiXHVGMDBEXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IHBsYXk6IHN0cmluZyA9IFwiXHVGMDRCXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IHBhdXNlOiBzdHJpbmcgPSBcIlx1RjA0Q1wiO1xuICAgIHB1YmxpYyByZWFkb25seSBhcnJvd1VwOiBzdHJpbmcgPSBcIlx1RjBEOFwiO1xuICAgIHB1YmxpYyByZWFkb25seSBhcnJvd0Rvd246IHN0cmluZyA9IFwiXHVGMEQ3XCI7XG4gICAgcHVibGljIHJlYWRvbmx5IGJhY2s6IHN0cmluZyA9IFwiXHVEQjgyXHVERjVDXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IGVkaXQ6IHN0cmluZyA9IFwiXHVFQTczXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IHNhdmU6IHN0cmluZyA9IFwiXHVEQjgwXHVERDkzXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IHdhcm46IHN0cmluZyA9IFwiXHVGMDcxXCI7XG5cbiAgICAvLyNlbmRyZWdpb25cblxuICAgIC8vI3JlZ2lvbiBUaW1lclxuICAgIHB1YmxpYyByZWFkb25seSBhbGFybUZpbmlzaGVkOiBzdHJpbmcgPSBcIlx1REI4NVx1REYxRVwiO1xuICAgIHB1YmxpYyByZWFkb25seSBhbGFybU9uOiBzdHJpbmcgPSBcIlx1REI4MVx1REY4RlwiO1xuICAgIHB1YmxpYyByZWFkb25seSBhbGFybUNsb2NrOiBzdHJpbmcgPSBcIlx1REI4MVx1REQxQlwiO1xuICAgIHB1YmxpYyByZWFkb25seSBob3VyZ2xhc3M6IHN0cmluZyA9IFwiXHVEQjgxXHVERDFGXCI7XG4gICAgLy8jZW5kcmVnaW9uXG5cbiAgICAvLyNyZWdpb24gTmV0d29yayBzdGF0dXNcbiAgICBwdWJsaWMgcmVhZG9ubHkgc2VhcmNoTmV0d29ya3M6IHN0cmluZyA9IFwiXHVEQjgxXHVERjBGXCI7XG5cbiAgICAvLyBTdGF0ZVxuICAgIHB1YmxpYyByZWFkb25seSB3aWZpQ29ubmVjdGlvbk1heDogc3RyaW5nID0gXCJcdUYxRUJcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgd2lyZWRDb25uZWN0aW9uOiBzdHJpbmcgPSBcIlx1REI4MFx1REUwMFwiO1xuICAgIHB1YmxpYyByZWFkb25seSBub0Nvbm5lY3Rpb246IHN0cmluZyA9IFwiXHVEQjgwXHVERDVCXCI7XG5cbiAgICAvLyBQcm9wZXJ0aWVzXG4gICAgcHVibGljIHJlYWRvbmx5IHVua25vd25OZXR3b3JrOiBzdHJpbmcgPSBcIlx1REI4NVx1REU0M1wiO1xuICAgIHB1YmxpYyByZWFkb25seSBsb2NrOiBzdHJpbmcgPSBcIlx1RjAyM1wiO1xuICAgIHB1YmxpYyByZWFkb25seSBsb2NrT3Blbjogc3RyaW5nID0gXCJcdUYyRkNcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgbmV0d29ya1NwZWVkU2xvdzogc3RyaW5nID0gXCJcdURCODNcdURGODZcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgbmV0d29ya1NwZWVkRmFzdDogc3RyaW5nID0gXCJcdURCODFcdURDQzVcIjtcblxuICAgIC8vIFNwZWVkc1xuICAgIHB1YmxpYyByZWFkb25seSBzaWduYWxTdHJlbmd0aDA6IHN0cmluZyA9IFwiXHVEQjgyXHVEQ0JGXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IHNpZ25hbFN0cmVuZ3RoMTogc3RyaW5nID0gXCJcdURCODJcdURDQkNcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgc2lnbmFsU3RyZW5ndGgyOiBzdHJpbmcgPSBcIlx1REI4Mlx1RENCRFwiO1xuICAgIHB1YmxpYyByZWFkb25seSBzaWduYWxTdHJlbmd0aDM6IHN0cmluZyA9IFwiXHVEQjgyXHVEQ0JFXCI7XG5cbiAgICAvLyBTdGF0c1xuICAgIHB1YmxpYyByZWFkb25seSBkb3dubG9hZDogc3RyaW5nID0gXCJcdUY0MDlcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgdXBsb2FkOiBzdHJpbmcgPSBcIlx1RjQwQVwiO1xuXG4gICAgLy8jZW5kcmVnaW9uXG5cbiAgICAvLyNyZWdpb24gV2VhaHRlclxuXG4gICAgLy8gbmYtd2VhdGhlci1cblxuICAgIHB1YmxpYyByZWFkb25seSBjbG91ZHlGdWxsOiBzdHJpbmcgPSBcIlx1RTMxMlwiO1xuICAgIHB1YmxpYyByZWFkb25seSBwcmVjaXBpdGF0aW9uUHJvYmFiaWxpdHk6IHN0cmluZyA9IFwiXHVFMzRBXCI7XG5cbiAgICAvLyBEQVlcbiAgICBwdWJsaWMgcmVhZG9ubHkgZGF5U3VuOiBzdHJpbmcgPSBcIlx1RTMwRFwiO1xuICAgIHB1YmxpYyByZWFkb25seSBkYXlDbG91ZHlNaWQ6IHN0cmluZyA9IFwiXHVFMzAyXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IGRheVJhaW46IHN0cmluZyA9IFwiXHVFMzA4XCI7XG4gICAgcHVibGljIHJlYWRvbmx5IGRheVNub3c6IHN0cmluZyA9IFwiXHVFMzBBXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IGRheVRodW5kZXJzdG9ybTogc3RyaW5nID0gXCJcdUUzMDVcIjtcblxuICAgIC8vIE5JR0hUXG4gICAgcHVibGljIHJlYWRvbmx5IG5pZ2h0TW9vbjogc3RyaW5nID0gXCJcdUUzMkJcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgbmlnaHRDbG91ZHlNaWQ6IHN0cmluZyA9IFwiXHVFMzdFXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IG5pZ2h0UmFpbjogc3RyaW5nID0gXCJcdUUzMjVcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgbmlnaHRTbm93OiBzdHJpbmcgPSBcIlx1RTMyN1wiO1xuICAgIHB1YmxpYyByZWFkb25seSBuaWdodFRodW5kZXJzdG9ybTogc3RyaW5nID0gXCJcdUUzMjJcIjtcblxuICAgIC8vI2VuZHJlZ2lvblxuXG4gICAgLy8jcmVnaW9uXG4gICAgcHVibGljIHJlYWRvbmx5IHZvbHVtZU11dGU6IHN0cmluZyA9IFwiXHVFRUU4XCI7XG4gICAgcHVibGljIHJlYWRvbmx5IHZvbHVtZUxvdzogc3RyaW5nID0gXCJcdUYwMjZcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgdm9sdW1lTWlkOiBzdHJpbmcgPSBcIlx1RjAyN1wiO1xuICAgIHB1YmxpYyByZWFkb25seSB2b2x1bWVIaWdoOiBzdHJpbmcgPSBcIlx1RjAyOFwiO1xuXG4gICAgcHVibGljIHJlYWRvbmx5IHNwZWFrZXJUYWI6IHN0cmluZyA9IFwiXHVEQjgxXHVEQ0MzXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IG1pY3JvcGhvbmVUYWI6IHN0cmluZyA9IFwiXHVFRDAzXCI7XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgbWljcm9waG9uZTogc3RyaW5nID0gXCJcdUYxMzBcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgbWljcm9waG9uZU11dGU6IHN0cmluZyA9IFwiXHVGMTMxXCI7XG4gICAgLy8jZW5kcmVnaW9uXG59XG5leHBvcnQgY29uc3QgaWNvbnM6IFRleHRJY29ucyA9IG5ldyBUZXh0SWNvbnMoKTsiLCAiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZSAqL1xuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IENDUHJvcHMgfSBmcm9tIFwiLi4vLi4vZ25pbS9zcmMvanN4L2luZGV4LmpzXCJcbmltcG9ydCB7IGludHJpbnNpY0VsZW1lbnRzIH0gZnJvbSBcIi4uLy4uL2duaW0vc3JjL2d0azQvanN4LXJ1bnRpbWUuanNcIlxuXG50eXBlIFByb3BzPFQgZXh0ZW5kcyBHdGsuV2lkZ2V0LCBQcm9wcz4gPSBDQ1Byb3BzPFQsIFBhcnRpYWw8UHJvcHM+PlxuXG5PYmplY3QuYXNzaWduKGludHJpbnNpY0VsZW1lbnRzLCB7XG4gICAgYm94OiBHdGsuQm94LFxuICAgIGJ1dHRvbjogR3RrLkJ1dHRvbixcbiAgICBjZW50ZXJib3g6IEd0ay5DZW50ZXJCb3gsXG4gICAgLy8gY2lyY3VsYXJwcm9ncmVzczogQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcyxcbiAgICBkcmF3aW5nYXJlYTogR3RrLkRyYXdpbmdBcmVhLFxuICAgIGVudHJ5OiBHdGsuRW50cnksXG4gICAgaW1hZ2U6IEd0ay5JbWFnZSxcbiAgICBsYWJlbDogR3RrLkxhYmVsLFxuICAgIGxldmVsYmFyOiBHdGsuTGV2ZWxCYXIsXG4gICAgbWVudWJ1dHRvbjogR3RrLk1lbnVCdXR0b24sXG4gICAgb3ZlcmxheTogR3RrLk92ZXJsYXksXG4gICAgcG9wb3ZlcjogR3RrLlBvcG92ZXIsXG4gICAgcmV2ZWFsZXI6IEd0ay5SZXZlYWxlcixcbiAgICBzY3JvbGxlZHdpbmRvdzogR3RrLlNjcm9sbGVkV2luZG93LFxuICAgIHNsaWRlcjogQXN0YWwuU2xpZGVyLFxuICAgIHN0YWNrOiBHdGsuU3RhY2ssXG4gICAgc3dpdGNoOiBHdGsuU3dpdGNoLFxuICAgIHRvZ2dsZWJ1dHRvbjogR3RrLlRvZ2dsZUJ1dHRvbixcbiAgICB3aW5kb3c6IEFzdGFsLldpbmRvdyxcbn0pXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIGJveDogUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgYnV0dG9uOiBQcm9wczxHdGsuQnV0dG9uLCBHdGsuQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBjZW50ZXJib3g6IFByb3BzPEd0ay5DZW50ZXJCb3gsIEd0ay5DZW50ZXJCb3guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IFByb3BzPEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsIEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGRyYXdpbmdhcmVhOiBQcm9wczxHdGsuRHJhd2luZ0FyZWEsIEd0ay5EcmF3aW5nQXJlYS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZW50cnk6IFByb3BzPEd0ay5FbnRyeSwgR3RrLkVudHJ5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBpbWFnZTogUHJvcHM8R3RrLkltYWdlLCBHdGsuSW1hZ2UuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGxhYmVsOiBQcm9wczxHdGsuTGFiZWwsIEd0ay5MYWJlbC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGV2ZWxiYXI6IFByb3BzPEd0ay5MZXZlbEJhciwgR3RrLkxldmVsQmFyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBtZW51YnV0dG9uOiBQcm9wczxHdGsuTWVudUJ1dHRvbiwgR3RrLk1lbnVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG92ZXJsYXk6IFByb3BzPEd0ay5PdmVybGF5LCBHdGsuT3ZlcmxheS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgcG9wb3ZlcjogUHJvcHM8R3RrLlBvcG92ZXIsIEd0ay5Qb3BvdmVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICByZXZlYWxlcjogUHJvcHM8R3RrLlJldmVhbGVyLCBHdGsuUmV2ZWFsZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHNjcm9sbGVkd2luZG93OiBQcm9wczxHdGsuU2Nyb2xsZWRXaW5kb3csIEd0ay5TY3JvbGxlZFdpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2xpZGVyOiBQcm9wczxBc3RhbC5TbGlkZXIsIEFzdGFsLlNsaWRlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc3RhY2s6IFByb3BzPEd0ay5TdGFjaywgR3RrLlN0YWNrLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzd2l0Y2g6IFByb3BzPEd0ay5Td2l0Y2gsIEd0ay5Td2l0Y2guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHRvZ2dsZWJ1dHRvbjogUHJvcHM8R3RrLlRvZ2dsZUJ1dHRvbiwgR3RrLlRvZ2dsZUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgd2luZG93OiBQcm9wczxBc3RhbC5XaW5kb3csIEFzdGFsLldpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgKiBmcm9tIFwiLi4vLi4vZ25pbS9zcmMvZ3RrNC9qc3gtcnVudGltZS5qc1wiXG4iLCAiaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBnZXRUeXBlLCBvbkNsZWFudXAsIEFjY2Vzc29yLCBGcmFnbWVudCB9IGZyb20gXCIuLi9qc3gvaW5kZXguanNcIlxuaW1wb3J0IHsgY29uZmlndWUgfSBmcm9tIFwiLi4vanN4L2Vudi5qc1wiXG5cbmNvbnN0IGR1bW15QnVpbGRlciA9IG5ldyBHdGsuQnVpbGRlcigpXG5cbmZ1bmN0aW9uIGFkZChwYXJlbnQ6IEd0ay5CdWlsZGFibGUsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCwgXzogbnVtYmVyKSB7XG4gICAgaWYgKCFzcGVjaWFsQWRkKHBhcmVudCwgY2hpbGQsIF8pKSB7XG4gICAgICAgIHBhcmVudC52ZnVuY19hZGRfY2hpbGQoZHVtbXlCdWlsZGVyLCBjaGlsZCwgZ2V0VHlwZShjaGlsZCkpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBzcGVjaWFsUmVtb3ZlKF9wYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBfY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgLy8gVE9ETzogYWRkIGFueSBzcGVjaWFsIGNhc2VcbiAgICByZXR1cm4gZmFsc2Vcbn1cblxuZnVuY3Rpb24gc3BlY2lhbEFkZChwYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBjaGlsZDogR09iamVjdC5PYmplY3QsIF86IG51bWJlcikge1xuICAgIC8vIFRPRE86IGFkZCBhbnkgb3RoZXIgc3BlY2lhbCBjYXNlXG4gICAgaWYgKFxuICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5BZGp1c3RtZW50ICYmXG4gICAgICAgIFwic2V0X2FkanVzdG1lbnRcIiBpbiBwYXJlbnQgJiZcbiAgICAgICAgdHlwZW9mIHBhcmVudC5zZXRfYWRqdXN0bWVudCA9PT0gXCJmdW5jdGlvblwiXG4gICAgKSB7XG4gICAgICAgIHBhcmVudC5zZXRfYWRqdXN0bWVudChjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICAgIGNoaWxkIGluc3RhbmNlb2YgR3RrLldpZGdldCAmJlxuICAgICAgICBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuU3RhY2sgJiZcbiAgICAgICAgY2hpbGQubmFtZSAhPT0gXCJcIiAmJlxuICAgICAgICBjaGlsZC5uYW1lICE9PSBudWxsICYmXG4gICAgICAgIGdldFR5cGUoY2hpbGQpID09PSBcIm5hbWVkXCJcbiAgICApIHtcbiAgICAgICAgcGFyZW50LmFkZF9uYW1lZChjaGlsZCwgY2hpbGQubmFtZSlcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuUG9wb3ZlciAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuTWVudUJ1dHRvbikge1xuICAgICAgICBwYXJlbnQuc2V0X3BvcG92ZXIoY2hpbGQpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEdpby5NZW51TW9kZWwgJiZcbiAgICAgICAgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5NZW51QnV0dG9uIHx8IHBhcmVudCBpbnN0YW5jZW9mIEd0ay5Qb3BvdmVyTWVudSlcbiAgICApIHtcbiAgICAgICAgcGFyZW50LnNldF9tZW51X21vZGVsKGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEdpby5NZW51SXRlbSAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHaW8uTWVudSkge1xuICAgICAgICAvLyBUT0RPOlxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5XaW5kb3cgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLkFwcGxpY2F0aW9uKSB7XG4gICAgICAgIHBhcmVudC5hZGRfd2luZG93KGNoaWxkKVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5UZXh0QnVmZmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5UZXh0Vmlldykge1xuICAgICAgICBwYXJlbnQuc2V0X2J1ZmZlcihjaGlsZClcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2Vcbn1cblxuZnVuY3Rpb24gcmVtb3ZlKHBhcmVudDogR09iamVjdC5PYmplY3QsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIGlmIChzcGVjaWFsUmVtb3ZlKHBhcmVudCwgY2hpbGQpKSByZXR1cm5cblxuICAgIGlmIChcInNldF9jaGlsZFwiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnNldF9jaGlsZCA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfY2hpbGQobnVsbClcbiAgICB9XG5cbiAgICBpZiAoXCJyZW1vdmVcIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5yZW1vdmUgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBwYXJlbnQucmVtb3ZlKGNoaWxkKVxuICAgIH1cblxuICAgIHRocm93IEVycm9yKGBjYW5ub3QgcmVtb3ZlICR7Y2hpbGR9IGZyb20gJHtwYXJlbnR9YClcbn1cblxuY29uc3QgeyBhZGRDaGlsZCwgaW50cmluc2ljRWxlbWVudHMgfSA9IGNvbmZpZ3VlKHtcbiAgICBzZXRDc3Mob2JqZWN0LCBjc3MpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY3NzIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgY3R4ID0gb2JqZWN0LmdldF9zdHlsZV9jb250ZXh0KClcbiAgICAgICAgbGV0IHByb3ZpZGVyOiBHdGsuQ3NzUHJvdmlkZXJcblxuICAgICAgICBjb25zdCBzZXR0ZXIgPSAoY3NzOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgIGlmICghY3NzLmluY2x1ZGVzKFwie1wiKSB8fCAhY3NzLmluY2x1ZGVzKFwifVwiKSkge1xuICAgICAgICAgICAgICAgIGNzcyA9IGAqIHsgJHtjc3N9IH1gXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm92aWRlcikgY3R4LnJlbW92ZV9wcm92aWRlcihwcm92aWRlcilcblxuICAgICAgICAgICAgcHJvdmlkZXIgPSBuZXcgR3RrLkNzc1Byb3ZpZGVyKClcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9zdHJpbmcoY3NzKVxuICAgICAgICAgICAgY3R4LmFkZF9wcm92aWRlcihwcm92aWRlciwgR3RrLlNUWUxFX1BST1ZJREVSX1BSSU9SSVRZX1VTRVIpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY3NzIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIHNldHRlcihjc3MuZ2V0KCkpXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY3NzLnN1YnNjcmliZSgoKSA9PiBzZXR0ZXIoY3NzLmdldCgpKSlcbiAgICAgICAgICAgIG9uQ2xlYW51cChkaXNwb3NlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0dGVyKGNzcylcbiAgICAgICAgfVxuICAgIH0sXG4gICAgc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY2xhc3NOYW1lIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNsYXNzTmFtZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXFxzKy8pXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY2xhc3NOYW1lLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAoKSA9PiAob2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKSksXG4gICAgICAgICAgICApXG4gICAgICAgICAgICBvbkNsZWFudXAoZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9iamVjdC5zZXRfY3NzX2NsYXNzZXMoY2xhc3NOYW1lLnNwbGl0KC9cXHMrLykpXG4gICAgICAgIH1cbiAgICB9LFxuICAgIGFkZENoaWxkKHBhcmVudCwgY2hpbGQsIGluZGV4ID0gLTEpIHtcbiAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgIGNoaWxkID0gR3RrLkxhYmVsLm5ldyhTdHJpbmcoY2hpbGQpKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNwZWNpYWxBZGQocGFyZW50LCBjaGlsZCwgaW5kZXgpKSByZXR1cm5cblxuICAgICAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgICAgIHBhcmVudC5hZGRDaGlsZChjaGlsZClcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5CdWlsZGFibGUpIHtcbiAgICAgICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZC5jaGlsZHJlbikge1xuICAgICAgICAgICAgICAgICAgICBhZGQocGFyZW50LCBjaCwgaW5kZXgpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2hpbGQuY29ubmVjdChcImNoaWxkLWFkZGVkXCIsIChfLCBjaDogdW5rbm93biwgaW5kZXg6IG51bWJlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCBhZGQgJHtjaH0gdG8gJHtwYXJlbnR9YCkpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBhZGRDaGlsZChwYXJlbnQsIGNoLCBpbmRleClcbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgY2hpbGQuY29ubmVjdChcImNoaWxkLXJlbW92ZWRcIiwgKF8sIGNoOiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IHJlbW92ZSAke2NofSBmcm9tICR7cGFyZW50fWApKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlKHBhcmVudCwgY2gpXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIG9uQ2xlYW51cCgoKSA9PiBjaGlsZC5kZXN0cm95KCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFkZChwYXJlbnQsIGNoaWxkLCBpbmRleClcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBhZGQgJHtjaGlsZH0gdG8gJHtwYXJlbnR9YClcbiAgICB9LFxufSlcblxuZXhwb3J0IHsgRnJhZ21lbnQsIGludHJpbnNpY0VsZW1lbnRzIH1cbmV4cG9ydCB7IGpzeCwganN4cyB9IGZyb20gXCIuLi9qc3gvanN4LmpzXCJcbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlU3RhdGUsIFN0YXRlLCBXaXRoIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiO1xuaW1wb3J0IHsgY3JlYXRlVGltZUxlZnQgfSBmcm9tIFwiLi90aW1lcl9oZWxwZXJfZnVuY3Rpb25zXCI7XG5pbXBvcnQgeyB0aW1lclZhcmlhYmxlcyB9IGZyb20gXCIuL3RpbWVyX3ZhcmlhYmxlc1wiO1xuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgeyBQcm9jZXNzIH0gZnJvbSBcImFncy9wcm9jZXNzXCI7XG5pbXBvcnQgeyBTb3VuZFBsYXllciB9IGZyb20gXCIuLi8uLi9tb2RlbHMvdXRpbHMvc291bmRfcGxheWVyXCI7XG5pbXBvcnQgeyBjb25maWd1cmF0aW9uIH0gZnJvbSBcIi4uLy4uL2FwcFwiO1xuaW1wb3J0IHsgVElNRVJfQ09OU1RBTlRTIH0gZnJvbSBcIi4uLy4uL21vZGVscy9jb25zdGFudHMvdGltZXJfY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25TZW5kZXIgfSBmcm9tIFwiLi4vLi4vbW9kZWxzL3V0aWxzL25vdGlmaWNhdGlvbl9zZW5kZXJcIjtcbmltcG9ydCB7IFRvb2xzIH0gZnJvbSBcIi4uLy4uL21vZGVscy91dGlscy90b29sc1wiO1xuaW1wb3J0IHsgaWNvbnMgfSBmcm9tIFwiLi4vLi4vbW9kZWxzL3RleHRzL3RleHRfaWNvbnNcIjtcbmltcG9ydCB7IE5vdGlmaWNhdGlvbkljb24gfSBmcm9tIFwiLi4vLi4vbW9kZWxzL2VudW1zL25vdGlmaWNhdGlvbl9pY29uXCI7XG5cbmV4cG9ydCBjbGFzcyBSdW5uaW5nVGltZXIge1xuICBwdWJsaWMgbmFtZTogc3RyaW5nIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuXG4gIHB1YmxpYyBpbnRlcnZhbFJlZmVyZW5jZTogR0xpYi5Tb3VyY2UgfCB1bmRlZmluZWQ7XG4gIHB1YmxpYyBzdGFydFNlY29uZHM6IG51bWJlciA9IDA7XG4gIHB1YmxpYyBzZWNvbmRzTGVmdDogU3RhdGU8bnVtYmVyPiA9IGNyZWF0ZVN0YXRlKDApO1xuICBwdWJsaWMgaXNSdW5uaW5nKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmludGVydmFsUmVmZXJlbmNlICE9PSB1bmRlZmluZWQ7XG4gIH1cbiAgcHVibGljIGlzUGF1c2VkID0gY3JlYXRlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xuXG4gIHByaXZhdGUgYWxhcm1Tb3VuZFByb2Nlc3M6IFByb2Nlc3MgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gIHByaXZhdGUgcHJvZ3Jlc3NCYXJSZWY6IEd0ay5MZXZlbEJhciB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3RvcihzZWNvbmRzVG9Db3VudDogbnVtYmVyLCBuYW1lOiBzdHJpbmcgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMuc3RhcnRTZWNvbmRzID0gc2Vjb25kc1RvQ291bnQ7XG4gICAgdGhpcy5zZWNvbmRzTGVmdCA9IGNyZWF0ZVN0YXRlKHNlY29uZHNUb0NvdW50KTtcblxuICAgIHRpbWVyVmFyaWFibGVzLnRpbWVyc0RhdGFbMV0oKHYpID0+IHYudXBkYXRlUnVubmluZ1RpbWVycygxKSk7XG5cbiAgICB0aGlzLmludGVydmFsUmVmZXJlbmNlID0gc2V0SW50ZXJ2YWwoYXN5bmMgKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLmlzUGF1c2VkWzBdLmdldCgpKSB0aGlzLmNoYW5nZVNlY29uZHNMZWZ0KC0xKTtcblxuICAgICAgaWYgKHRoaXMuZ2V0U2Vjb25kc0xlZnQoKSA8PSAwKSB7XG4gICAgICAgIHRoaXMuZmluaXNoVGltZXIoKTtcbiAgICAgIH1cbiAgICB9LCAxMDAwKTsgLy8gMSBzZWNvbmQuIGludGVydmFsXG4gIH1cblxuICBwcml2YXRlIGZpbmlzaFRpbWVyKCkge1xuICAgIHRoaXMuaW50ZXJ2YWxSZWZlcmVuY2U/LmRlc3Ryb3koKTtcbiAgICB0aGlzLmludGVydmFsUmVmZXJlbmNlID0gdW5kZWZpbmVkO1xuXG4gICAgdGltZXJWYXJpYWJsZXMudGltZXJzRGF0YVsxXSgodikgPT4gdi51cGRhdGVEb25lVGltZXJzKDEpKTtcblxuICAgIHRoaXMuYWxhcm1Tb3VuZFByb2Nlc3MgPSBTb3VuZFBsYXllci5wbGF5U291bmQoXG4gICAgICBjb25maWd1cmF0aW9uLnRpbWVyLmFsYXJtU291bmRGaWxlUGF0aFxuICAgICk7XG5cbiAgICBjb25zdCBub3RpZmljYXRpb25UZXh0OiBzdHJpbmcgPVxuICAgICAgdGhpcy5uYW1lID09PSB1bmRlZmluZWRcbiAgICAgICAgPyBjb25maWd1cmF0aW9uLmdldFRleHRzKCkudGltZXIuZW5kTm9uYW1lTm90aWZpY2F0aW9uVGl0bGVcbiAgICAgICAgOiBUb29scy5mb3JtYXRTdHJpbmcoXG4gICAgICAgICAgICBjb25maWd1cmF0aW9uLmdldFRleHRzKCkudGltZXIuZW5kTmFtZWROb3RpZmljYXRpb25UaXRsZSxcbiAgICAgICAgICAgIHRoaXMubmFtZVxuICAgICAgICAgICk7XG5cbiAgICBOb3RpZmljYXRpb25TZW5kZXIuc2VuZChcbiAgICAgIG5vdGlmaWNhdGlvblRleHQsXG4gICAgICB1bmRlZmluZWQsXG4gICAgICBOb3RpZmljYXRpb25JY29uLlRpbWVyXG4gICAgKTtcblxuICAgIGlmICh0aGlzLnByb2dyZXNzQmFyUmVmICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMucHJvZ3Jlc3NCYXJSZWYuY3NzQ2xhc3NlcyA9IFtcInRpbWVyLWRvbmVcIl07XG4gICAgfVxuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBpZiAodGhpcy5hbGFybVNvdW5kUHJvY2VzcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRoaXMuYWxhcm1Tb3VuZFByb2Nlc3Mua2lsbCgpO1xuICAgICAgICB0aGlzLmFsYXJtU291bmRQcm9jZXNzID0gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgIH0sIGNvbmZpZ3VyYXRpb24udGltZXIuYWxhcm1Tb3VuZExlbmd0aEluU2Vjb25kcyAqIDEwMDApO1xuICB9XG5cbiAgcHVibGljIGdldFN0YXJ0U2Vjb25kcygpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnN0YXJ0U2Vjb25kcztcbiAgfVxuXG4gIHB1YmxpYyBnZXRTZWNvbmRzTGVmdCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnNlY29uZHNMZWZ0WzBdLmdldCgpO1xuICB9XG5cbiAgcHVibGljIGdldFNlY29uZHNMZWZ0MigpOiBTdGF0ZTxudW1iZXI+IHtcbiAgICByZXR1cm4gdGhpcy5zZWNvbmRzTGVmdDtcbiAgfVxuXG4gIHB1YmxpYyBzZXRTZWNvbmRzTGVmdChuZXdUaW1lTGVmdDogbnVtYmVyKSB7XG4gICAgdGhpcy5zZWNvbmRzTGVmdFsxXShuZXdUaW1lTGVmdCk7XG4gIH1cblxuICBwdWJsaWMgY2hhbmdlU2Vjb25kc0xlZnQodGltZUNoYW5nZTogbnVtYmVyKSB7XG4gICAgaWYgKHRpbWVDaGFuZ2UgPT09IDApIHJldHVybjtcbiAgICB0aGlzLnNlY29uZHNMZWZ0WzFdKCh2KSA9PiB2ICsgdGltZUNoYW5nZSk7XG4gIH1cblxuICBwcml2YXRlIHRvZ2dsZVRpbWVyUGF1c2UoKSB7XG4gICAgdGhpcy5pc1BhdXNlZFsxXSgodikgPT4gIXYpO1xuICB9XG5cbiAgcHVibGljIGNyZWF0ZUxhYmVsKGluZGV4OiBudW1iZXIpIHtcbiAgICBjb25zdCBbc2Vjb25kc0dldHRlciwgc2Vjb25kc1NldHRlcl0gPSB0aGlzLnNlY29uZHNMZWZ0O1xuICAgIGNvbnN0IFtwYXVzZUdldHRlciwgcGF1c2VTZXR0ZXJdID0gdGhpcy5pc1BhdXNlZDtcblxuICAgIGNvbnN0IHRpbWVyTmFtZSA9IHRoaXMubmFtZSA/PyBgIyR7aW5kZXggKyAxfWA7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGJveFxuICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLkhPUklaT05UQUx9XG4gICAgICAgIGhleHBhbmRcbiAgICAgICAgdmV4cGFuZFxuICAgICAgICBtYXJnaW5Ub3A9ezEwfVxuICAgICAgPlxuICAgICAgICA8Ym94IG5hbWU9e1wiUGF1c2UvUGxheSBidXR0b24gY29udGFpbmVyXCJ9PlxuICAgICAgICAgIDxXaXRoIHZhbHVlPXtzZWNvbmRzR2V0dGVyfT5cbiAgICAgICAgICAgIHsoc2Vjb25kcykgPT5cbiAgICAgICAgICAgICAgc2Vjb25kcyA+IDAgJiYgKFxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgIG5hbWU9e1wiU3RhcnQgc2F2ZWQgdGltZXIgYnRuXCJ9XG4gICAgICAgICAgICAgICAgICBjbGFzcz17cGF1c2VHZXR0ZXIoKHBhdXNlZCkgPT5cbiAgICAgICAgICAgICAgICAgICAgcGF1c2VkXG4gICAgICAgICAgICAgICAgICAgICAgPyBcInRpbWVyLXBvcG92ZXItc3RhcnQtYnV0dG9uIHNtYWxsLWJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgOiBcInRpbWVyLXBvcG92ZXItcGF1c2UtdGltZXItYnV0dG9uIHNtYWxsLWJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgbGFiZWw9e3BhdXNlR2V0dGVyKChwYXVzZWQpID0+XG4gICAgICAgICAgICAgICAgICAgIHBhdXNlZCA/IGljb25zLnBsYXkgOiBpY29ucy5wYXVzZVxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgIHRvb2x0aXBUZXh0PXtwYXVzZUdldHRlcigocGF1c2VkKSA9PlxuICAgICAgICAgICAgICAgICAgICBwYXVzZWRcbiAgICAgICAgICAgICAgICAgICAgICA/IGNvbmZpZ3VyYXRpb24uZ2V0VGV4dHMoKS50aW1lci5zdGF0ZVBhdXNlZFxuICAgICAgICAgICAgICAgICAgICAgIDogY29uZmlndXJhdGlvbi5nZXRUZXh0cygpLnRpbWVyLnN0YXRlUnVubmluZ1xuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgIHZleHBhbmQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgaGV4cGFuZD17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICB3aWR0aFJlcXVlc3Q9ezQwfVxuICAgICAgICAgICAgICAgICAgaGVpZ2h0UmVxdWVzdD17MjB9XG4gICAgICAgICAgICAgICAgICBtYXJnaW5FbmQ9ezEwfVxuICAgICAgICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudG9nZ2xlVGltZXJQYXVzZSgpO1xuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICA+PC9idXR0b24+XG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICA8L1dpdGg+XG4gICAgICAgIDwvYm94PlxuXG4gICAgICAgIDxib3hcbiAgICAgICAgICBuYW1lPXtcIlRpbWVyIHByb2dyZXNzIGNvbnRhaW5lclwifVxuICAgICAgICAgIG1hcmdpbkVuZD17MTB9XG4gICAgICAgICAgd2lkdGhSZXF1ZXN0PXsyOTB9XG4gICAgICAgID5cbiAgICAgICAgICA8b3ZlcmxheSB2ZXhwYW5kIGhleHBhbmQ+XG4gICAgICAgICAgICA8bGV2ZWxiYXJcbiAgICAgICAgICAgICAgdmV4cGFuZFxuICAgICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcInJ1bm5pbmctdGltZXItYmFyXCJdfVxuICAgICAgICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLkhPUklaT05UQUx9XG4gICAgICAgICAgICAgIHZhbHVlPXtzZWNvbmRzR2V0dGVyKChzZWNvbmRzKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDEgLSBzZWNvbmRzIC8gdGhpcy5zdGFydFNlY29uZHM7XG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAkPXsoc2VsZikgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3NCYXJSZWYgPSBzZWxmO1xuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxib3ggdmV4cGFuZCBoZXhwYW5kICR0eXBlPVwib3ZlcmxheVwiPlxuICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICBjbGFzcz17XCJydW5uaW5nLXRpbWVyLWxhYmVsXCJ9XG4gICAgICAgICAgICAgICAgbGFiZWw9e3RpbWVyTmFtZX1cbiAgICAgICAgICAgICAgICB3aWR0aENoYXJzPXtcbiAgICAgICAgICAgICAgICAgIFRJTUVSX0NPTlNUQU5UUy5OQU1FX0xFTkdUSCArXG4gICAgICAgICAgICAgICAgICBUSU1FUl9DT05TVEFOVFMuTEFCRUxfU0FGRVNQQUNFX0NIQVJTXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHhhbGlnbj17MS4wfVxuICAgICAgICAgICAgICAgIG1hcmdpbkVuZD17MTB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgIHhhbGlnbj17MC4wfVxuICAgICAgICAgICAgICAgIHdpZHRoQ2hhcnM9e1xuICAgICAgICAgICAgICAgICAgVElNRVJfQ09OU1RBTlRTLlRJTUVfTEVOR1RIICtcbiAgICAgICAgICAgICAgICAgIFRJTUVSX0NPTlNUQU5UUy5MQUJFTF9TQUZFU1BBQ0VfQ0hBUlMgK1xuICAgICAgICAgICAgICAgICAgOFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsYWJlbD17c2Vjb25kc0dldHRlcihcbiAgICAgICAgICAgICAgICAgIChzZWNvbmRzKSA9PlxuICAgICAgICAgICAgICAgICAgICBgJHtjcmVhdGVUaW1lTGVmdChzZWNvbmRzKX0gLSAke3RoaXMuY3JlYXRlUGVyY2VudGFnZURvbmUoXG4gICAgICAgICAgICAgICAgICAgICAgc2Vjb25kc1xuICAgICAgICAgICAgICAgICAgICApfSBcdUYyOTVgXG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPjwvbGFiZWw+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICA8L292ZXJsYXk+XG4gICAgICAgIDwvYm94PlxuXG4gICAgICAgIDxib3ggbmFtZT17XCJSZW1vdmUgcnVubmluZyB0aW1lciBidXR0b24gY29udGFpbmVyXCJ9PlxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIG5hbWU9e1wiU3RhcnQgc2F2ZWQgdGltZXIgYnRuXCJ9XG4gICAgICAgICAgICBjbGFzcz17c2Vjb25kc0dldHRlcigoc2Vjb25kcykgPT5cbiAgICAgICAgICAgICAgc2Vjb25kcyA+IDBcbiAgICAgICAgICAgICAgICA/IFwidGltZXItcG9wb3Zlci1yZW1vdmUtdGltZXItYnV0dG9uIHNtYWxsLWJ1dHRvblwiXG4gICAgICAgICAgICAgICAgOiBcInRpbWVyLXBvcG92ZXItcmVtb3ZlLWRvbmUtdGltZXItYnV0dG9uIHNtYWxsLWJ1dHRvblwiXG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgbGFiZWw9e3NlY29uZHNHZXR0ZXIoKHNlY29uZHMpID0+XG4gICAgICAgICAgICAgIHNlY29uZHMgPiAwID8gaWNvbnMuY2xvc2UgOiBpY29ucy5hbGFybUZpbmlzaGVkXG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgdmV4cGFuZD17ZmFsc2V9XG4gICAgICAgICAgICBoZXhwYW5kPXtmYWxzZX1cbiAgICAgICAgICAgIHdpZHRoUmVxdWVzdD17NDB9XG4gICAgICAgICAgICBoZWlnaHRSZXF1ZXN0PXsyMH1cbiAgICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4ge1xuICAgICAgICAgICAgICB0aGlzLnJlbW92ZVRpbWVyKCk7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgID48L2J1dHRvbj5cbiAgICAgICAgPC9ib3g+XG4gICAgICA8L2JveD5cbiAgICApO1xuICB9XG5cbiAgY3JlYXRlUGVyY2VudGFnZURvbmUoc2Vjb25kc0xlZnQ6IG51bWJlcikge1xuICAgIGNvbnN0IHJhdGlvID0gc2Vjb25kc0xlZnQgLyB0aGlzLnN0YXJ0U2Vjb25kcztcbiAgICByZXR1cm4gTWF0aC5mbG9vcigxMDAgLSByYXRpbyAqIDEwMCk7XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZVRpbWVyKCkge1xuICAgIGlmICh0aGlzLmFsYXJtU291bmRQcm9jZXNzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMuYWxhcm1Tb3VuZFByb2Nlc3Mua2lsbCgpO1xuICAgICAgdGhpcy5hbGFybVNvdW5kUHJvY2VzcyA9IHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pbnRlcnZhbFJlZmVyZW5jZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLmludGVydmFsUmVmZXJlbmNlPy5kZXN0cm95KCk7XG4gICAgICB0aGlzLmludGVydmFsUmVmZXJlbmNlID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIHRpbWVyVmFyaWFibGVzLnJ1bm5pbmdUaW1lcnNbMV0oKHYpID0+IHtcbiAgICAgIGNvbnN0IGluZGV4ID0gdi5pbmRleE9mKHRoaXMpO1xuICAgICAgY29uc3QgZmlyc3RQYXJ0ID0gdi5zbGljZSgwLCBpbmRleCk7XG4gICAgICBjb25zdCBzZWNvbmRQYXJ0ID0gdi5zbGljZShpbmRleCArIDEpO1xuICAgICAgcmV0dXJuIGZpcnN0UGFydC5jb25jYXQoc2Vjb25kUGFydCk7XG4gICAgfSk7XG5cbiAgICB0aW1lclZhcmlhYmxlcy50aW1lcnNEYXRhWzFdKCh2KSA9PiB2LnVwZGF0ZVJ1bm5pbmdUaW1lcnMoLTEpKTtcblxuICAgIGlmICh0aGlzLnNlY29uZHNMZWZ0WzBdLmdldCgpIDw9IDApXG4gICAgICB0aW1lclZhcmlhYmxlcy50aW1lcnNEYXRhWzFdKCh2KSA9PiB2LnVwZGF0ZURvbmVUaW1lcnMoLTEpKTtcbiAgfVxufVxuIiwgImltcG9ydCB7IHJlYWRGaWxlQXN5bmMsIHdyaXRlRmlsZUFzeW5jIH0gZnJvbSBcImFncy9maWxlXCI7XG5pbXBvcnQgeyB0aW1lclZhcmlhYmxlcyB9IGZyb20gXCIuL3RpbWVyX3ZhcmlhYmxlc1wiO1xuaW1wb3J0IHsgU2F2ZWRUaW1lciB9IGZyb20gXCIuL3NhdmVkX3RpbWVyXCI7XG5pbXBvcnQgeyBSdW5uaW5nVGltZXIgfSBmcm9tIFwiLi9ydW5uaW5nX3RpbWVyXCI7XG5pbXBvcnQgeyBjb25maWd1cmF0aW9uIH0gZnJvbSBcIi4uLy4uL2FwcFwiO1xuaW1wb3J0IHsgQ29tbXVuaWNhdGlvbiB9IGZyb20gXCIuLi8uLi9tb2RlbHMvdXRpbHMvY29tbXVuaWNhdGlvblwiO1xuXG5leHBvcnQgY2xhc3MgVGltZXJVdGlscyB7XG4gIHB1YmxpYyBzdGF0aWMgYXN5bmMgc2F2ZVRpbWVyc1RvRmlsZSgpIHtcbiAgICBhd2FpdCB3cml0ZUZpbGVBc3luYyhcbiAgICAgIGNvbmZpZ3VyYXRpb24udGltZXIuc2F2ZWRUaW1lcnNGaWxlUGF0aCxcbiAgICAgIEpTT04uc3RyaW5naWZ5KHRpbWVyVmFyaWFibGVzLnNhdmVkVGltZXJzWzBdLmdldCgpLCB1bmRlZmluZWQsIFwiXFx0XCIpXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgYXN5bmMgbG9hZFRpbWVyc0Zyb21GaWxlKCkge1xuICAgIGNvbnN0IHNhdmVkVGltZXJzSnNvbiA9IGF3YWl0IHJlYWRGaWxlQXN5bmMoXG4gICAgICBjb25maWd1cmF0aW9uLnRpbWVyLnNhdmVkVGltZXJzRmlsZVBhdGhcbiAgICApO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBzYXZlZFRpbWVyczogU2F2ZWRUaW1lcltdID0gSlNPTi5wYXJzZShcbiAgICAgICAgc2F2ZWRUaW1lcnNKc29uXG4gICAgICApIGFzIFNhdmVkVGltZXJbXTtcbiAgICAgIHRpbWVyVmFyaWFibGVzLnNhdmVkVGltZXJzWzFdKFxuICAgICAgICBzYXZlZFRpbWVycy5tYXAoKHQpID0+IG5ldyBTYXZlZFRpbWVyKHQubmFtZSwgdC5zdGFydFNlY29uZHMpKVxuICAgICAgKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgQ29tbXVuaWNhdGlvbi5wcmludEVycm9yKFxuICAgICAgICBcIkNhbm5vdCBjcmVhdGUgc2F2ZWQgdGltZXJzID0+IGVycm9yOiBcIiArIGVycm9yLFxuICAgICAgICBcIlRpbWVyVXRpbHNcIlxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIHJ1blRpbWVyKFxuICAgIHRpbWVJblNlY29uZHM6IG51bWJlcixcbiAgICBuYW1lOiBzdHJpbmcgfCB1bmRlZmluZWQgPSB1bmRlZmluZWRcbiAgKSB7XG4gICAgaWYgKHRpbWVJblNlY29uZHMgPD0gMSkgcmV0dXJuO1xuXG4gICAgdGltZXJWYXJpYWJsZXMucnVubmluZ1RpbWVyc1sxXSgodikgPT4ge1xuICAgICAgaWYgKHYubGVuZ3RoIDwgY29uZmlndXJhdGlvbi50aW1lci5tYXhSdW5uaW5nVGltZXJzKVxuICAgICAgICByZXR1cm4gdi5jb25jYXQobmV3IFJ1bm5pbmdUaW1lcih0aW1lSW5TZWNvbmRzLCBuYW1lKSk7XG4gICAgICByZXR1cm4gdjtcbiAgICB9KTtcbiAgfVxufVxuIiwgImltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgY3JlYXRlVGltZUxlZnQgfSBmcm9tIFwiLi90aW1lcl9oZWxwZXJfZnVuY3Rpb25zXCI7XG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IFRpbWVyVXRpbHMgfSBmcm9tIFwiLi90aW1lcl91dGlsc1wiO1xuaW1wb3J0IHsgVElNRVJfQ09OU1RBTlRTIH0gZnJvbSBcIi4uLy4uL21vZGVscy9jb25zdGFudHMvdGltZXJfY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBjbGFzcyBTYXZlZFRpbWVyIHtcbiAgcHVibGljIG5hbWU6IHN0cmluZyA9IFwiXCI7XG4gIHB1YmxpYyBzdGFydFNlY29uZHM6IG51bWJlciA9IDA7XG5cbiAgY29uc3RydWN0b3IobmFtZTogc3RyaW5nLCBzZWNvbmRzVG9Db3VudDogbnVtYmVyKSB7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLnN0YXJ0U2Vjb25kcyA9IHNlY29uZHNUb0NvdW50O1xuICB9XG5cbiAgcHVibGljIGNyZWF0ZUxhYmVsKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8Ym94IG5hbWU9e1wiU2F2ZWQgdGltZXIgbGFiZWxcIn0gb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMfT5cbiAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJzYXZlZC10aW1lci1jb250YWluZXJcIl19IG1hcmdpbkVuZD17OH0+XG4gICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICBsYWJlbD17YCR7dGhpcy5uYW1lfWB9XG4gICAgICAgICAgICB3aWR0aENoYXJzPXtcbiAgICAgICAgICAgICAgVElNRVJfQ09OU1RBTlRTLk5BTUVfTEVOR1RIICtcbiAgICAgICAgICAgICAgVElNRVJfQ09OU1RBTlRTLkxBQkVMX1NBRkVTUEFDRV9DSEFSU1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeGFsaWduPXsxLjB9XG4gICAgICAgICAgICBtYXJnaW5FbmQ9ezEwfVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICBsYWJlbD17YFx1REI4NFx1REZBQiAke2NyZWF0ZVRpbWVMZWZ0KHRoaXMuc3RhcnRTZWNvbmRzKX1gfVxuICAgICAgICAgICAgd2lkdGhDaGFycz17XG4gICAgICAgICAgICAgIFRJTUVSX0NPTlNUQU5UUy5USU1FX0xFTkdUSCArXG4gICAgICAgICAgICAgIFRJTUVSX0NPTlNUQU5UUy5MQUJFTF9TQUZFU1BBQ0VfQ0hBUlNcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHhhbGlnbj17MC4wfVxuICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgIC8+XG4gICAgICAgIDwvYm94PlxuICAgICAgPC9ib3g+XG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBydW5UaW1lcigpIHtcbiAgICBUaW1lclV0aWxzLnJ1blRpbWVyKHRoaXMuc3RhcnRTZWNvbmRzLCB0aGlzLm5hbWUpO1xuICB9XG59XG4iLCAiaW1wb3J0IHsgVGltZXJEaWdpdCB9IGZyb20gXCIuL3RpbWVyX2VudW1zXCI7XG5cblxuZXhwb3J0IGNsYXNzIFRpbWVyRGlnaXRzIHtcbiAgICBwdWJsaWMgaG91cjE6IG51bWJlciA9IDA7XG4gICAgcHVibGljIGhvdXIyOiBudW1iZXIgPSAwO1xuICAgIHB1YmxpYyBtaW51dGUxOiBudW1iZXIgPSAwO1xuICAgIHB1YmxpYyBtaW51dGUyOiBudW1iZXIgPSAwO1xuICAgIHB1YmxpYyBzZWNvbmQxOiBudW1iZXIgPSAwO1xuICAgIHB1YmxpYyBzZWNvbmQyOiBudW1iZXIgPSAwO1xuXG4gICAgY29uc3RydWN0b3IoZGVmYXVsdFRpbWVTZWNvbmRzOiBudW1iZXIgPSAwKSB7XG4gICAgICAgIGNvbnN0IGhvdXJzID0gTWF0aC5mbG9vcihkZWZhdWx0VGltZVNlY29uZHMgLyAzNjAwKTtcbiAgICAgICAgY29uc3QgbWludXRlcyA9IE1hdGguZmxvb3IoKGRlZmF1bHRUaW1lU2Vjb25kcyAlIDM2MDApIC8gNjApO1xuICAgICAgICBjb25zdCBzZWNvbmRzID0gTWF0aC5mbG9vcihkZWZhdWx0VGltZVNlY29uZHMgJSA2MCk7XG5cbiAgICAgICAgdGhpcy5ob3VyMSA9IE1hdGguZmxvb3IoaG91cnMgLyAxMCk7XG4gICAgICAgIHRoaXMuaG91cjIgPSBNYXRoLmZsb29yKGhvdXJzICUgMTApO1xuXG4gICAgICAgIHRoaXMubWludXRlMSA9IE1hdGguZmxvb3IobWludXRlcyAvIDEwKTtcbiAgICAgICAgdGhpcy5taW51dGUyID0gTWF0aC5mbG9vcihtaW51dGVzICUgMTApO1xuXG4gICAgICAgIHRoaXMuc2Vjb25kMSA9IE1hdGguZmxvb3Ioc2Vjb25kcyAvIDEwKTtcbiAgICAgICAgdGhpcy5zZWNvbmQyID0gTWF0aC5mbG9vcihzZWNvbmRzICUgMTApO1xuICAgIH1cblxuICAgIHB1YmxpYyB1cGRhdGVUaW1lKGRpZ2l0OiBUaW1lckRpZ2l0LCBzY3JvbGxDaGFuZ2U6IG51bWJlcik6IHZvaWQge1xuXG4gICAgICAgIGNvbnN0IGNoYW5nZSA9IDAuMSAqIE1hdGguc2lnbihzY3JvbGxDaGFuZ2UpO1xuXG4gICAgICAgIHN3aXRjaCAoZGlnaXQpIHtcbiAgICAgICAgICAgIGNhc2UgVGltZXJEaWdpdC5Ib3VyMTpcbiAgICAgICAgICAgICAgICB0aGlzLmhvdXIxICs9IGNoYW5nZTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBUaW1lckRpZ2l0LkhvdXIyOlxuICAgICAgICAgICAgICAgIHRoaXMuaG91cjIgKz0gY2hhbmdlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFRpbWVyRGlnaXQuTWludXRlMTpcbiAgICAgICAgICAgICAgICB0aGlzLm1pbnV0ZTEgKz0gY2hhbmdlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFRpbWVyRGlnaXQuTWludXRlMjpcbiAgICAgICAgICAgICAgICB0aGlzLm1pbnV0ZTIgKz0gY2hhbmdlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFRpbWVyRGlnaXQuU2Vjb25kMTpcbiAgICAgICAgICAgICAgICB0aGlzLnNlY29uZDEgKz0gY2hhbmdlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFRpbWVyRGlnaXQuU2Vjb25kMjpcbiAgICAgICAgICAgICAgICB0aGlzLnNlY29uZDIgKz0gY2hhbmdlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZWNvbmQyID0gdGhpcy5saW1pdFZhbHVlKHRoaXMuc2Vjb25kMiwgMTApO1xuICAgICAgICB0aGlzLnNlY29uZDEgPSB0aGlzLmxpbWl0VmFsdWUodGhpcy5zZWNvbmQxLCA2KTtcblxuICAgICAgICB0aGlzLm1pbnV0ZTIgPSB0aGlzLmxpbWl0VmFsdWUodGhpcy5taW51dGUyLCAxMCk7XG4gICAgICAgIHRoaXMubWludXRlMSA9IHRoaXMubGltaXRWYWx1ZSh0aGlzLm1pbnV0ZTEsIDYpO1xuXG4gICAgICAgIHRoaXMuaG91cjIgPSB0aGlzLmxpbWl0VmFsdWUodGhpcy5ob3VyMiwgMTApO1xuICAgICAgICB0aGlzLmhvdXIxID0gdGhpcy5saW1pdFZhbHVlKHRoaXMuaG91cjEsIDEwKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGxpbWl0VmFsdWUodmFsdWU6IG51bWJlciwgbWF4OiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgICBpZiAodmFsdWUgPj0gbWF4KSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZSA8IDApIHtcbiAgICAgICAgICAgIHJldHVybiBtYXggLSAwLjE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cblxuXG4gICAgcHVibGljIGdldERpZ2l0KGRpZ2l0OiBUaW1lckRpZ2l0KTogc3RyaW5nIHtcbiAgICAgICAgc3dpdGNoIChkaWdpdCkge1xuICAgICAgICAgICAgY2FzZSBUaW1lckRpZ2l0LkhvdXIxOlxuICAgICAgICAgICAgICAgIHJldHVybiBgJHtNYXRoLmZsb29yKHRoaXMuaG91cjEpfWA7XG5cbiAgICAgICAgICAgIGNhc2UgVGltZXJEaWdpdC5Ib3VyMjpcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7TWF0aC5mbG9vcih0aGlzLmhvdXIyKX1gO1xuXG4gICAgICAgICAgICBjYXNlIFRpbWVyRGlnaXQuTWludXRlMTpcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7TWF0aC5mbG9vcih0aGlzLm1pbnV0ZTEpfWA7XG5cbiAgICAgICAgICAgIGNhc2UgVGltZXJEaWdpdC5NaW51dGUyOlxuICAgICAgICAgICAgICAgIHJldHVybiBgJHtNYXRoLmZsb29yKHRoaXMubWludXRlMil9YDtcblxuICAgICAgICAgICAgY2FzZSBUaW1lckRpZ2l0LlNlY29uZDE6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGAke01hdGguZmxvb3IodGhpcy5zZWNvbmQxKX1gO1xuXG4gICAgICAgICAgICBjYXNlIFRpbWVyRGlnaXQuU2Vjb25kMjpcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7TWF0aC5mbG9vcih0aGlzLnNlY29uZDIpfWA7XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGAke01hdGguZmxvb3IoMCl9YDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBnZXRBbGxTZWNvbmRzKCkge1xuICAgICAgICBsZXQgYWxsU2Vjb25kcyA9IE1hdGguZmxvb3IodGhpcy5zZWNvbmQxKSAqIDEwICsgTWF0aC5mbG9vcih0aGlzLnNlY29uZDIpO1xuICAgICAgICBhbGxTZWNvbmRzICs9IChNYXRoLmZsb29yKHRoaXMubWludXRlMSkgKiAxMCArIE1hdGguZmxvb3IodGhpcy5taW51dGUyKSkgKiA2MDtcbiAgICAgICAgYWxsU2Vjb25kcyArPSAoTWF0aC5mbG9vcih0aGlzLmhvdXIxKSAqIDEwICsgTWF0aC5mbG9vcih0aGlzLmhvdXIyKSkgKiAzNjAwO1xuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihhbGxTZWNvbmRzKTtcbiAgICB9XG59IiwgImltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgdGltZXJWYXJpYWJsZXMgfSBmcm9tIFwiLi90aW1lcl92YXJpYWJsZXNcIjtcbmltcG9ydCB7IFNhdmVkVGltZXIgfSBmcm9tIFwiLi9zYXZlZF90aW1lclwiO1xuaW1wb3J0IHsgVGltZXJVdGlscyB9IGZyb20gXCIuL3RpbWVyX3V0aWxzXCI7XG5pbXBvcnQgeyBUaW1lckRpZ2l0cyB9IGZyb20gXCIuL3RpbWVyX2RpZ2l0XCI7XG5pbXBvcnQgeyBUaW1lckRpZ2l0IH0gZnJvbSBcIi4vdGltZXJfZW51bXNcIjtcbmltcG9ydCB7IGNvbmZpZ3VyYXRpb24gfSBmcm9tIFwiLi4vLi4vYXBwXCI7XG5pbXBvcnQgeyBpY29ucyB9IGZyb20gXCIuLi8uLi9tb2RlbHMvdGV4dHMvdGV4dF9pY29uc1wiO1xuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcImFnc1wiO1xuXG5leHBvcnQgY2xhc3MgU2F2ZVRpbWVyV2luZG93IHtcbiAgc3RhdGljIGluc3RhbmNlOiBTYXZlVGltZXJXaW5kb3cgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gIHByaXZhdGUgd2luZG93OiBHdGsuV2luZG93O1xuXG4gIHByaXZhdGUgdGltZXJOYW1lOiBzdHJpbmcgPSBcIlwiO1xuICBwcml2YXRlIHRpbWVyU2Vjb25kczogVGltZXJEaWdpdHMgPSBuZXcgVGltZXJEaWdpdHMoKTtcbiAgcHJpdmF0ZSBkaWdpdExhYmVsczogR3RrLkxhYmVsW10gPSBbXTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLndpbmRvdyA9IEd0ay5XaW5kb3cubmV3KCk7XG4gICAgdGhpcy53aW5kb3cucmVzaXphYmxlID0gZmFsc2U7XG4gICAgdGhpcy53aW5kb3cuZGVmYXVsdFdpZHRoID0gNDAwO1xuICAgIHRoaXMud2luZG93LmRlZmF1bHRIZWlnaHQgPSAyMDA7XG4gICAgdGhpcy53aW5kb3cud2lkdGhSZXF1ZXN0ID0gNDAwO1xuICAgIHRoaXMud2luZG93LmhlaWdodFJlcXVlc3QgPSAyMDA7XG4gICAgdGhpcy53aW5kb3cudGl0bGUgPSBcIkNyZWF0ZSB0aW1lclwiO1xuICAgIHRoaXMud2luZG93LmNoaWxkID0gdGhpcy5jcmVhdGVDb250ZW50KCk7XG4gICAgdGhpcy53aW5kb3cuY3NzQ2xhc3NlcyA9IFtcImNyZWF0ZS1zYXZlLXRpbWVyLXdpbmRvd1wiXTtcblxuICAgIGNvbnN0IGNsb3NlSGFuZGxlciA9IHRoaXMud2luZG93LmNvbm5lY3QoXCJjbG9zZS1yZXF1ZXN0XCIsICgpID0+IHtcbiAgICAgIFNhdmVUaW1lcldpbmRvdy5pbnN0YW5jZSA9IHVuZGVmaW5lZDtcbiAgICAgIHJldHVybiBmYWxzZTsgLy8gY2xvc2Ugd2luZG93XG4gICAgfSk7XG5cbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgdGhpcy53aW5kb3cuZGlzY29ubmVjdChjbG9zZUhhbmRsZXIpO1xuICAgIH0pO1xuXG4gICAgdGhpcy53aW5kb3cucHJlc2VudCgpO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBjcmVhdGUoKSB7XG4gICAgaWYgKFNhdmVUaW1lcldpbmRvdy5pbnN0YW5jZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBTYXZlVGltZXJXaW5kb3cuaW5zdGFuY2UgPSBuZXcgU2F2ZVRpbWVyV2luZG93KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFNldCBmb2N1cyBzb21laG93P1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgY3JlYXRlQ29udGVudCgpOiBHdGsuV2lkZ2V0IHtcbiAgICBjb25zdCBjb250ZW50ID0gbmV3IEd0ay5Cb3goeyBvcmllbnRhdGlvbjogR3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMIH0pO1xuXG4gICAgLy8gRGVzY3JpcHRpb25cbiAgICBjb25zdCBhc2tMYWJlbCA9IG5ldyBHdGsuTGFiZWwoKTtcbiAgICBhc2tMYWJlbC5sYWJlbCA9IGNvbmZpZ3VyYXRpb24uZ2V0VGV4dHMoKS50aW1lci5zYXZlQXNrTGFiZWw7XG4gICAgY29udGVudC5hcHBlbmQoYXNrTGFiZWwpO1xuXG4gICAgLy8gVGV4dCBlbnRyeVxuICAgIGNvbnN0IG5hbWVFbnRyeSA9IG5ldyBHdGsuRW50cnkoKTtcbiAgICBuYW1lRW50cnkubmFtZSA9IFwiVXNlckVudHJ5XCI7XG4gICAgbmFtZUVudHJ5Lm1heExlbmd0aCA9IDE2O1xuICAgIG5hbWVFbnRyeS5tYXJnaW5Ub3AgPSAyMDtcbiAgICBuYW1lRW50cnkucGxhY2Vob2xkZXJUZXh0ID1cbiAgICAgIGNvbmZpZ3VyYXRpb24uZ2V0VGV4dHMoKS50aW1lci5zYXZlTmFtZVBsYWNlaG9sZGVyO1xuICAgIGNvbnN0IGluc2VydFRleHRIYW5kbGVyID0gbmFtZUVudHJ5LmJ1ZmZlci5jb25uZWN0KFxuICAgICAgXCJpbnNlcnRlZC10ZXh0XCIsXG4gICAgICAoYnVmZmVyKSA9PiB7XG4gICAgICAgIHRoaXMudGltZXJOYW1lID0gYnVmZmVyLmdldF90ZXh0KCk7XG4gICAgICB9XG4gICAgKTtcbiAgICBjb25zdCBkZWxldGVUZXh0SGFuZGxlciA9IG5hbWVFbnRyeS5idWZmZXIuY29ubmVjdChcbiAgICAgIFwiZGVsZXRlZC10ZXh0XCIsXG4gICAgICAoYnVmZmVyKSA9PiB7XG4gICAgICAgIHRoaXMudGltZXJOYW1lID0gYnVmZmVyLmdldF90ZXh0KCk7XG4gICAgICB9XG4gICAgKTtcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICBuYW1lRW50cnkuYnVmZmVyLmRpc2Nvbm5lY3QoaW5zZXJ0VGV4dEhhbmRsZXIpO1xuICAgICAgbmFtZUVudHJ5LmJ1ZmZlci5kaXNjb25uZWN0KGRlbGV0ZVRleHRIYW5kbGVyKTtcbiAgICB9KTtcblxuICAgIGNvbnRlbnQuYXBwZW5kKG5hbWVFbnRyeSk7XG5cbiAgICAvLyBUaW1lIGVudHJ5XG4gICAgY29uc3QgdGltZUVudHJ5ID0gdGhpcy5jcmVhdGVUaW1lRW50cnkoKTtcbiAgICBjb250ZW50LmFwcGVuZCh0aW1lRW50cnkpO1xuXG4gICAgLy8gQnV0dG9ucyB7IEFERCB8IENBTkNFTCB9XG4gICAgY29uc3QgYnV0dG9uc0JveCA9IG5ldyBHdGsuQm94KHsgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMIH0pO1xuICAgIGNvbnN0IGFkZEJ1dHRvbiA9IHRoaXMuY3JlYXRlQWRkQnV0dG9uKCk7XG4gICAgYnV0dG9uc0JveC5hcHBlbmQoYWRkQnV0dG9uKTtcbiAgICBjb25zdCBjYW5jZWxCdXR0b24gPSB0aGlzLmNyZWF0ZUNhbmNlbEJ1dHRvbigpO1xuICAgIGJ1dHRvbnNCb3guYXBwZW5kKGNhbmNlbEJ1dHRvbik7XG5cbiAgICBjb250ZW50LmFwcGVuZChidXR0b25zQm94KTtcblxuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVUaW1lRW50cnkoKTogR3RrLkJveCB7XG4gICAgY29uc3QgdGltZUVudHJ5Q29udGFpbmVyID0gbmV3IEd0ay5Cb3goe1xuICAgICAgaGV4cGFuZDogdHJ1ZSxcbiAgICAgIG1hcmdpblRvcDogNDAsXG4gICAgICBtYXJnaW5Cb3R0b206IDQwLFxuICAgIH0pO1xuXG4gICAgY29uc3Qgb3ZlcmxheSA9IG5ldyBHdGsuT3ZlcmxheSh7XG4gICAgICBoZXhwYW5kOiB0cnVlLFxuICAgICAgY3NzQ2xhc3NlczogW1widGltZXItcG9wb3Zlci1sYWJlbC1kaWdpdC1jb250YWluZXJcIl0sXG4gICAgfSk7XG5cbiAgICBjb25zdCBmb3JlZ3JvdW5kVGltZUVudHJ5Q29udGFpbmVyID0gbmV3IEd0ay5Cb3goe1xuICAgICAgaGV4cGFuZDogdHJ1ZSxcbiAgICAgIG5hbWU6IFwic2F2ZS13aW5kb3ctdGltZS1lbnRyeS1mb3JlZ3JvdW5kXCIsXG4gICAgfSk7XG5cbiAgICBmb3JlZ3JvdW5kVGltZUVudHJ5Q29udGFpbmVyLmFwcGVuZCh0aGlzLmNyZWF0ZVRpbWVFbnRyeUZvcmVncm91bmQoKSk7XG5cbiAgICBjb25zdCBiYWNrZ3JvdW5kVGltZUVudHJ5Q29udGFpbmVyID0gbmV3IEd0ay5Cb3goe1xuICAgICAgaGV4cGFuZDogdHJ1ZSxcbiAgICAgIG5hbWU6IFwic2F2ZS13aW5kb3ctdGltZS1lbnRyeS1iYWNrZ3JvdW5kXCIsXG4gICAgfSk7XG4gICAgYmFja2dyb3VuZFRpbWVFbnRyeUNvbnRhaW5lci5hcHBlbmQodGhpcy5jcmVhdGVUaW1lRW50cnlCYWNrZ3JvdW5kKCkpO1xuXG4gICAgb3ZlcmxheS5hZGRfb3ZlcmxheShmb3JlZ3JvdW5kVGltZUVudHJ5Q29udGFpbmVyKTtcbiAgICBvdmVybGF5LnNldF9jaGlsZChiYWNrZ3JvdW5kVGltZUVudHJ5Q29udGFpbmVyKTtcblxuICAgIHRpbWVFbnRyeUNvbnRhaW5lci5hcHBlbmQob3ZlcmxheSk7XG5cbiAgICByZXR1cm4gdGltZUVudHJ5Q29udGFpbmVyO1xuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVUaW1lRW50cnlGb3JlZ3JvdW5kKCk6IEd0ay5Cb3gge1xuICAgIGNvbnN0IHRpbWVFbnRyeUJveCA9IG5ldyBHdGsuQm94KHtcbiAgICAgIG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTCxcbiAgICAgIGhleHBhbmQ6IHRydWUsXG4gICAgICBoYWxpZ246IEd0ay5BbGlnbi5DRU5URVIsXG4gICAgfSk7XG5cbiAgICBjb25zdCBob3Vyc0JveCA9IG5ldyBHdGsuQm94KHsgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMIH0pO1xuICAgIGNvbnN0IGhvdXJMYWJlbDEgPSB0aGlzLmNyZWF0ZVRpbWVFbnRyeURpZ2l0TGFiZWwoVGltZXJEaWdpdC5Ib3VyMSk7XG4gICAgY29uc3QgaG91ckxhYmVsMiA9IHRoaXMuY3JlYXRlVGltZUVudHJ5RGlnaXRMYWJlbChUaW1lckRpZ2l0LkhvdXIyKTtcbiAgICBob3Vyc0JveC5hcHBlbmQoaG91ckxhYmVsMSk7XG4gICAgaG91cnNCb3guYXBwZW5kKGhvdXJMYWJlbDIpO1xuXG4gICAgY29uc3QgbWludXRlc0JveCA9IG5ldyBHdGsuQm94KHsgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMIH0pO1xuICAgIGNvbnN0IG1pbnV0ZXNMYWJlbDEgPSB0aGlzLmNyZWF0ZVRpbWVFbnRyeURpZ2l0TGFiZWwoVGltZXJEaWdpdC5NaW51dGUxKTtcbiAgICBjb25zdCBtaW51dGVzTGFiZWwyID0gdGhpcy5jcmVhdGVUaW1lRW50cnlEaWdpdExhYmVsKFRpbWVyRGlnaXQuTWludXRlMik7XG4gICAgbWludXRlc0JveC5hcHBlbmQobWludXRlc0xhYmVsMSk7XG4gICAgbWludXRlc0JveC5hcHBlbmQobWludXRlc0xhYmVsMik7XG5cbiAgICBjb25zdCBzZWNvbmRzQm94ID0gbmV3IEd0ay5Cb3goeyBvcmllbnRhdGlvbjogR3RrLk9yaWVudGF0aW9uLkhPUklaT05UQUwgfSk7XG4gICAgY29uc3Qgc2Vjb25kc0xhYmVsMSA9IHRoaXMuY3JlYXRlVGltZUVudHJ5RGlnaXRMYWJlbChUaW1lckRpZ2l0LlNlY29uZDEpO1xuICAgIGNvbnN0IHNlY29uZHNMYWJlbDIgPSB0aGlzLmNyZWF0ZVRpbWVFbnRyeURpZ2l0TGFiZWwoVGltZXJEaWdpdC5TZWNvbmQyKTtcbiAgICBzZWNvbmRzQm94LmFwcGVuZChzZWNvbmRzTGFiZWwxKTtcbiAgICBzZWNvbmRzQm94LmFwcGVuZChzZWNvbmRzTGFiZWwyKTtcblxuICAgIGNvbnN0IHNlcGFyYXRvckxhYmVsID0gbmV3IEd0ay5MYWJlbCh7XG4gICAgICBsYWJlbDogXCI6XCIsXG4gICAgICBjc3NDbGFzc2VzOiBbXCJ0aW1lci1wb3BvdmVyLWxhYmVsLWRpZ2l0XCJdLFxuICAgIH0pO1xuICAgIGNvbnN0IHNlcGFyYXRvckxhYmVsMiA9IG5ldyBHdGsuTGFiZWwoe1xuICAgICAgbGFiZWw6IFwiOlwiLFxuICAgICAgY3NzQ2xhc3NlczogW1widGltZXItcG9wb3Zlci1sYWJlbC1kaWdpdFwiXSxcbiAgICB9KTtcblxuICAgIHRpbWVFbnRyeUJveC5hcHBlbmQoaG91cnNCb3gpO1xuICAgIHRpbWVFbnRyeUJveC5hcHBlbmQoc2VwYXJhdG9yTGFiZWwpO1xuICAgIHRpbWVFbnRyeUJveC5hcHBlbmQobWludXRlc0JveCk7XG4gICAgdGltZUVudHJ5Qm94LmFwcGVuZChzZXBhcmF0b3JMYWJlbDIpO1xuICAgIHRpbWVFbnRyeUJveC5hcHBlbmQoc2Vjb25kc0JveCk7XG5cbiAgICByZXR1cm4gdGltZUVudHJ5Qm94O1xuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVUaW1lRW50cnlEaWdpdExhYmVsKGRpZ2l0SW5kZXg6IFRpbWVyRGlnaXQpOiBHdGsuTGFiZWwge1xuICAgIGNvbnN0IGRpZ2l0TGFiZWwgPSBuZXcgR3RrLkxhYmVsKHtcbiAgICAgIG5hbWU6IGRpZ2l0SW5kZXgudG9TdHJpbmcoKSxcbiAgICAgIGxhYmVsOiBcIjBcIixcbiAgICAgIGNzc0NsYXNzZXM6IFtcInRpbWVyLXBvcG92ZXItbGFiZWwtZGlnaXRcIl0sXG4gICAgfSk7XG5cbiAgICBjb25zdCBzY3JvbGxDb250cm9sbGVyID0gbmV3IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGwoe1xuICAgICAgbmFtZTogXCJzY3JvbGxDb250cm9sbGVyXCIsXG4gICAgICBmbGFnczogR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbEZsYWdzLlZFUlRJQ0FMLFxuICAgIH0pO1xuXG4gICAgY29uc3Qgc2Nyb2xsSGFuZGxlciA9IHNjcm9sbENvbnRyb2xsZXIuY29ubmVjdChcbiAgICAgIFwic2Nyb2xsXCIsXG4gICAgICAoY29udHJvbGxlciwgZHgsIGR5KSA9PiB7XG4gICAgICAgIHRoaXMudGltZXJTZWNvbmRzLnVwZGF0ZVRpbWUoZGlnaXRJbmRleCwgLWR5KTtcbiAgICAgICAgdGhpcy5kaWdpdExhYmVscy5mb3JFYWNoKChsYWJlbCkgPT4ge1xuICAgICAgICAgIGxhYmVsLmxhYmVsID0gdGhpcy50aW1lclNlY29uZHMuZ2V0RGlnaXQoXG4gICAgICAgICAgICBsYWJlbC5uYW1lIGFzIHVua25vd24gYXMgVGltZXJEaWdpdFxuICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICk7XG4gICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgIHNjcm9sbENvbnRyb2xsZXIuZGlzY29ubmVjdChzY3JvbGxIYW5kbGVyKTtcbiAgICB9KTtcbiAgICBkaWdpdExhYmVsLmFkZF9jb250cm9sbGVyKHNjcm9sbENvbnRyb2xsZXIpO1xuICAgIHRoaXMuZGlnaXRMYWJlbHMucHVzaChkaWdpdExhYmVsKTtcblxuICAgIHJldHVybiBkaWdpdExhYmVsO1xuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVUaW1lRW50cnlCYWNrZ3JvdW5kKCkge1xuICAgIGNvbnN0IHRpbWVFbnRyeUJveCA9IG5ldyBHdGsuQm94KHtcbiAgICAgIG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTCxcbiAgICAgIGhleHBhbmQ6IHRydWUsXG4gICAgICBoYWxpZ246IEd0ay5BbGlnbi5DRU5URVIsXG4gICAgfSk7XG5cbiAgICBjb25zdCBob3Vyc0JveCA9IG5ldyBHdGsuQm94KHsgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMIH0pO1xuICAgIGNvbnN0IGhvdXJMYWJlbDEgPSBuZXcgR3RrLkxhYmVsKHtcbiAgICAgIGxhYmVsOiBcIjBcIixcbiAgICAgIGNzc0NsYXNzZXM6IFtcInRpbWVyLXBvcG92ZXItbGFiZWwtZGlnaXQtYmFja2dyb3VuZFwiXSxcbiAgICB9KTtcbiAgICBjb25zdCBob3VyTGFiZWwyID0gbmV3IEd0ay5MYWJlbCh7XG4gICAgICBsYWJlbDogXCIwXCIsXG4gICAgICBjc3NDbGFzc2VzOiBbXCJ0aW1lci1wb3BvdmVyLWxhYmVsLWRpZ2l0LWJhY2tncm91bmRcIl0sXG4gICAgfSk7XG4gICAgaG91cnNCb3guYXBwZW5kKGhvdXJMYWJlbDEpO1xuICAgIGhvdXJzQm94LmFwcGVuZChob3VyTGFiZWwyKTtcblxuICAgIGNvbnN0IG1pbnV0ZXNCb3ggPSBuZXcgR3RrLkJveCh7IG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTCB9KTtcbiAgICBjb25zdCBtaW51dGVzTGFiZWwxID0gbmV3IEd0ay5MYWJlbCh7XG4gICAgICBsYWJlbDogXCIwXCIsXG4gICAgICBjc3NDbGFzc2VzOiBbXCJ0aW1lci1wb3BvdmVyLWxhYmVsLWRpZ2l0LWJhY2tncm91bmRcIl0sXG4gICAgfSk7XG4gICAgY29uc3QgbWludXRlc0xhYmVsMiA9IG5ldyBHdGsuTGFiZWwoe1xuICAgICAgbGFiZWw6IFwiMFwiLFxuICAgICAgY3NzQ2xhc3NlczogW1widGltZXItcG9wb3Zlci1sYWJlbC1kaWdpdC1iYWNrZ3JvdW5kXCJdLFxuICAgIH0pO1xuICAgIG1pbnV0ZXNCb3guYXBwZW5kKG1pbnV0ZXNMYWJlbDEpO1xuICAgIG1pbnV0ZXNCb3guYXBwZW5kKG1pbnV0ZXNMYWJlbDIpO1xuXG4gICAgY29uc3Qgc2Vjb25kc0JveCA9IG5ldyBHdGsuQm94KHsgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMIH0pO1xuICAgIGNvbnN0IHNlY29uZHNMYWJlbDEgPSBuZXcgR3RrLkxhYmVsKHtcbiAgICAgIGxhYmVsOiBcIjBcIixcbiAgICAgIGNzc0NsYXNzZXM6IFtcInRpbWVyLXBvcG92ZXItbGFiZWwtZGlnaXQtYmFja2dyb3VuZFwiXSxcbiAgICB9KTtcbiAgICBjb25zdCBzZWNvbmRzTGFiZWwyID0gbmV3IEd0ay5MYWJlbCh7XG4gICAgICBsYWJlbDogXCIwXCIsXG4gICAgICBjc3NDbGFzc2VzOiBbXCJ0aW1lci1wb3BvdmVyLWxhYmVsLWRpZ2l0LWJhY2tncm91bmRcIl0sXG4gICAgfSk7XG4gICAgc2Vjb25kc0JveC5hcHBlbmQoc2Vjb25kc0xhYmVsMSk7XG4gICAgc2Vjb25kc0JveC5hcHBlbmQoc2Vjb25kc0xhYmVsMik7XG5cbiAgICBjb25zdCBzZXBhcmF0b3JMYWJlbCA9IG5ldyBHdGsuTGFiZWwoe1xuICAgICAgbGFiZWw6IFwiOlwiLFxuICAgICAgY3NzQ2xhc3NlczogW1widGltZXItcG9wb3Zlci1sYWJlbC1kaWdpdFwiXSxcbiAgICB9KTtcbiAgICBjb25zdCBzZXBhcmF0b3JMYWJlbDIgPSBuZXcgR3RrLkxhYmVsKHtcbiAgICAgIGxhYmVsOiBcIjpcIixcbiAgICAgIGNzc0NsYXNzZXM6IFtcInRpbWVyLXBvcG92ZXItbGFiZWwtZGlnaXRcIl0sXG4gICAgfSk7XG5cbiAgICB0aW1lRW50cnlCb3guYXBwZW5kKGhvdXJzQm94KTtcbiAgICB0aW1lRW50cnlCb3guYXBwZW5kKHNlcGFyYXRvckxhYmVsKTtcbiAgICB0aW1lRW50cnlCb3guYXBwZW5kKG1pbnV0ZXNCb3gpO1xuICAgIHRpbWVFbnRyeUJveC5hcHBlbmQoc2VwYXJhdG9yTGFiZWwyKTtcbiAgICB0aW1lRW50cnlCb3guYXBwZW5kKHNlY29uZHNCb3gpO1xuICAgIHJldHVybiB0aW1lRW50cnlCb3g7XG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZUFkZEJ1dHRvbigpOiBHdGsuQnV0dG9uIHtcbiAgICBjb25zdCBidXR0b24gPSBuZXcgR3RrLkJ1dHRvbigpO1xuICAgIGJ1dHRvbi5sYWJlbCA9IGljb25zLnBsdXMgKyBcIiBcIiArIGNvbmZpZ3VyYXRpb24uZ2V0VGV4dHMoKS5nZW5lcmFsLmFkZDtcbiAgICBidXR0b24uaGV4cGFuZCA9IHRydWU7XG4gICAgYnV0dG9uLm1hcmdpbkVuZCA9IDEyO1xuICAgIGJ1dHRvbi5jc3NDbGFzc2VzID0gW1widGltZXItcG9wb3Zlci1zdGFydC1idXR0b25cIl07XG4gICAgYnV0dG9uLmNvbm5lY3QoXCJjbGlja2VkXCIsIGFzeW5jICgpID0+IHtcbiAgICAgIGNvbnN0IGFsbFNlY29uZHMgPSB0aGlzLnRpbWVyU2Vjb25kcy5nZXRBbGxTZWNvbmRzKCk7XG4gICAgICBpZiAoXG4gICAgICAgIHRoaXMudGltZXJOYW1lID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgdGhpcy50aW1lck5hbWUubGVuZ3RoID09PSAwIHx8XG4gICAgICAgIGFsbFNlY29uZHMgPT09IDBcbiAgICAgICkge1xuICAgICAgICAvLyBXUk9ORyBEQVRBIC0gSU5GT1JNIFVTRVJcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0aW1lclZhcmlhYmxlcy5zYXZlZFRpbWVyc1sxXSgodikgPT4ge1xuICAgICAgICByZXR1cm4gdi5jb25jYXQobmV3IFNhdmVkVGltZXIodGhpcy50aW1lck5hbWUsIGFsbFNlY29uZHMpKTtcbiAgICAgIH0pO1xuXG4gICAgICBhd2FpdCBUaW1lclV0aWxzLnNhdmVUaW1lcnNUb0ZpbGUoKTtcblxuICAgICAgdGhpcy53aW5kb3cuY2xvc2UoKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBidXR0b247XG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZUNhbmNlbEJ1dHRvbigpOiBHdGsuQnV0dG9uIHtcbiAgICBjb25zdCBidXR0b24gPSBuZXcgR3RrLkJ1dHRvbigpO1xuICAgIGJ1dHRvbi5sYWJlbCA9IGljb25zLmJhY2sgKyBcIiBcIiArIGNvbmZpZ3VyYXRpb24uZ2V0VGV4dHMoKS5nZW5lcmFsLmNhbmNlbDtcbiAgICBidXR0b24uaGV4cGFuZCA9IHRydWU7XG4gICAgYnV0dG9uLmNzc0NsYXNzZXMgPSBbXCJ0aW1lci1wb3BvdmVyLXJlbW92ZS10aW1lci1idXR0b25cIl07XG4gICAgY29uc3QgY2xpY2tIYW5kbGVyID0gYnV0dG9uLmNvbm5lY3QoXCJjbGlja2VkXCIsICgpID0+IHtcbiAgICAgIHRoaXMud2luZG93LmNsb3NlKCk7XG4gICAgfSk7XG4gICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgIGJ1dHRvbi5kaXNjb25uZWN0KGNsaWNrSGFuZGxlcik7XG4gICAgfSk7XG4gICAgcmV0dXJuIGJ1dHRvbjtcbiAgfVxufVxuIiwgImltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgdGltZXJWYXJpYWJsZXMgfSBmcm9tIFwiLi90aW1lcl92YXJpYWJsZXNcIjtcbmltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVTdGF0ZSwgRm9yLCBvbkNsZWFudXAsIFN0YXRlLCBXaXRoIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgU2F2ZVRpbWVyV2luZG93IH0gZnJvbSBcIi4vc2F2ZV90aW1lcl93aW5kb3dcIjtcbmltcG9ydCB7IFRpbWVyVXRpbHMgfSBmcm9tIFwiLi90aW1lcl91dGlsc1wiO1xuaW1wb3J0IHsgU2F2ZWRUaW1lciB9IGZyb20gXCIuL3NhdmVkX3RpbWVyXCI7XG5pbXBvcnQgeyBSZW9yZGVyRGlyZWN0aW9uLCBUaW1lckRpZ2l0IH0gZnJvbSBcIi4vdGltZXJfZW51bXNcIjtcbmltcG9ydCB7IFRpbWVyRGlnaXRzIH0gZnJvbSBcIi4vdGltZXJfZGlnaXRcIjtcbmltcG9ydCB7IGNvbmZpZ3VyYXRpb24gfSBmcm9tIFwiLi4vLi4vYXBwXCI7XG5pbXBvcnQgeyBpY29ucyB9IGZyb20gXCIuLi8uLi9tb2RlbHMvdGV4dHMvdGV4dF9pY29uc1wiO1xuXG5sZXQgaW5FZGl0U2F2ZWRUaW1lcnNNb2RlOiBTdGF0ZTxib29sZWFuPiA9IGNyZWF0ZVN0YXRlKGZhbHNlKTtcbmxldCB0aW1lclNlY29uZHM6IFRpbWVyRGlnaXRzID0gbmV3IFRpbWVyRGlnaXRzKCk7XG5jb25zdCBkaWdpdExhYmVsczogR3RrLkxhYmVsW10gPSBbXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVGltZXJQb3BvdmVyKCkge1xuICB0aW1lclNlY29uZHMgPSBuZXcgVGltZXJEaWdpdHMoY29uZmlndXJhdGlvbi50aW1lci5kZWZhdWx0VGltZXJUaW1lU2Vjb25kcyk7XG5cbiAgcmV0dXJuIChcbiAgICA8cG9wb3ZlclxuICAgICAgYXV0b2hpZGU9e3RydWV9XG4gICAgICBoYXNBcnJvdz17ZmFsc2V9XG4gICAgICBjbGFzcz17XCJ3aWRnZXQtcG9wb3ZlclwifVxuICAgICAgb25DbG9zZWQ9eygpID0+IHtcbiAgICAgICAgaW5FZGl0U2F2ZWRUaW1lcnNNb2RlWzFdKGZhbHNlKTtcbiAgICAgIH19XG4gICAgICBoZXhwYW5kPXtmYWxzZX1cbiAgICAgIHdpZHRoUmVxdWVzdD17NDAwfVxuICAgICAgbWFyZ2luRW5kPXs2MH1cbiAgICAgIG1hcmdpbkJvdHRvbT17MzB9XG4gICAgPlxuICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAge2NyZWF0ZVJ1bm5pbmdUaW1lcnMoKX1cbiAgICAgICAge2NyZWF0ZU1haW5JbnRlcmZhY2UoKX1cbiAgICAgICAge2NyZWF0ZVNhdmVkVGltZXJzKCl9XG4gICAgICA8L2JveD5cbiAgICA8L3BvcG92ZXI+XG4gICk7XG5cbiAgZnVuY3Rpb24gY3JlYXRlVGltZUVudHJ5KCkge1xuICAgIGNvbnN0IHRpbWVFbnRyeUJveCA9IG5ldyBHdGsuQm94KHtcbiAgICAgIG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTCxcbiAgICAgIGhleHBhbmQ6IHRydWUsXG4gICAgICBoYWxpZ246IEd0ay5BbGlnbi5DRU5URVIsXG4gICAgfSk7XG5cbiAgICBjb25zdCBob3Vyc0JveCA9IG5ldyBHdGsuQm94KHsgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMIH0pO1xuICAgIGNvbnN0IGhvdXJMYWJlbDEgPSBjcmVhdGVUaW1lRW50cnlEaWdpdExhYmVsKFRpbWVyRGlnaXQuSG91cjEpO1xuICAgIGNvbnN0IGhvdXJMYWJlbDIgPSBjcmVhdGVUaW1lRW50cnlEaWdpdExhYmVsKFRpbWVyRGlnaXQuSG91cjIpO1xuICAgIGhvdXJzQm94LmFwcGVuZChob3VyTGFiZWwxKTtcbiAgICBob3Vyc0JveC5hcHBlbmQoaG91ckxhYmVsMik7XG5cbiAgICBjb25zdCBtaW51dGVzQm94ID0gbmV3IEd0ay5Cb3goeyBvcmllbnRhdGlvbjogR3RrLk9yaWVudGF0aW9uLkhPUklaT05UQUwgfSk7XG4gICAgY29uc3QgbWludXRlc0xhYmVsMSA9IGNyZWF0ZVRpbWVFbnRyeURpZ2l0TGFiZWwoVGltZXJEaWdpdC5NaW51dGUxKTtcbiAgICBjb25zdCBtaW51dGVzTGFiZWwyID0gY3JlYXRlVGltZUVudHJ5RGlnaXRMYWJlbChUaW1lckRpZ2l0Lk1pbnV0ZTIpO1xuICAgIG1pbnV0ZXNCb3guYXBwZW5kKG1pbnV0ZXNMYWJlbDEpO1xuICAgIG1pbnV0ZXNCb3guYXBwZW5kKG1pbnV0ZXNMYWJlbDIpO1xuXG4gICAgY29uc3Qgc2Vjb25kc0JveCA9IG5ldyBHdGsuQm94KHsgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMIH0pO1xuICAgIGNvbnN0IHNlY29uZHNMYWJlbDEgPSBjcmVhdGVUaW1lRW50cnlEaWdpdExhYmVsKFRpbWVyRGlnaXQuU2Vjb25kMSk7XG4gICAgY29uc3Qgc2Vjb25kc0xhYmVsMiA9IGNyZWF0ZVRpbWVFbnRyeURpZ2l0TGFiZWwoVGltZXJEaWdpdC5TZWNvbmQyKTtcbiAgICBzZWNvbmRzQm94LmFwcGVuZChzZWNvbmRzTGFiZWwxKTtcbiAgICBzZWNvbmRzQm94LmFwcGVuZChzZWNvbmRzTGFiZWwyKTtcblxuICAgIGNvbnN0IHNlcGFyYXRvckxhYmVsID0gbmV3IEd0ay5MYWJlbCh7XG4gICAgICBsYWJlbDogXCI6XCIsXG4gICAgICBjc3NDbGFzc2VzOiBbXCJ0aW1lci1wb3BvdmVyLWxhYmVsLWRpZ2l0XCJdLFxuICAgIH0pO1xuICAgIGNvbnN0IHNlcGFyYXRvckxhYmVsMiA9IG5ldyBHdGsuTGFiZWwoe1xuICAgICAgbGFiZWw6IFwiOlwiLFxuICAgICAgY3NzQ2xhc3NlczogW1widGltZXItcG9wb3Zlci1sYWJlbC1kaWdpdFwiXSxcbiAgICB9KTtcblxuICAgIHRpbWVFbnRyeUJveC5hcHBlbmQoaG91cnNCb3gpO1xuICAgIHRpbWVFbnRyeUJveC5hcHBlbmQoc2VwYXJhdG9yTGFiZWwpO1xuICAgIHRpbWVFbnRyeUJveC5hcHBlbmQobWludXRlc0JveCk7XG4gICAgdGltZUVudHJ5Qm94LmFwcGVuZChzZXBhcmF0b3JMYWJlbDIpO1xuICAgIHRpbWVFbnRyeUJveC5hcHBlbmQoc2Vjb25kc0JveCk7XG4gICAgcmV0dXJuIHRpbWVFbnRyeUJveDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVRpbWVFbnRyeURpZ2l0TGFiZWwoZGlnaXRJbmRleDogVGltZXJEaWdpdCk6IEd0ay5MYWJlbCB7XG4gICAgY29uc3QgZGlnaXRMYWJlbCA9IG5ldyBHdGsuTGFiZWwoe1xuICAgICAgbmFtZTogZGlnaXRJbmRleC50b1N0cmluZygpLFxuICAgICAgbGFiZWw6IHRpbWVyU2Vjb25kcy5nZXREaWdpdChkaWdpdEluZGV4KSxcbiAgICAgIGNzc0NsYXNzZXM6IFtcInRpbWVyLXBvcG92ZXItbGFiZWwtZGlnaXRcIl0sXG4gICAgfSk7XG5cbiAgICBjb25zdCBzY3JvbGxDb250cm9sbGVyID0gbmV3IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGwoe1xuICAgICAgbmFtZTogXCJzY3JvbGxDb250cm9sbGVyXCIsXG4gICAgICBmbGFnczogR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbEZsYWdzLlZFUlRJQ0FMLFxuICAgIH0pO1xuXG4gICAgY29uc3Qgc2Nyb2xsSGFuZGxlciA9IHNjcm9sbENvbnRyb2xsZXIuY29ubmVjdChcbiAgICAgIFwic2Nyb2xsXCIsXG4gICAgICAoY29udHJvbGxlciwgZHgsIGR5KSA9PiB7XG4gICAgICAgIHRpbWVyU2Vjb25kcy51cGRhdGVUaW1lKGRpZ2l0SW5kZXgsIC1keSk7XG4gICAgICAgIGRpZ2l0TGFiZWxzLmZvckVhY2goKGxhYmVsKSA9PiB7XG4gICAgICAgICAgbGFiZWwubGFiZWwgPSB0aW1lclNlY29uZHMuZ2V0RGlnaXQoXG4gICAgICAgICAgICBsYWJlbC5uYW1lIGFzIHVua25vd24gYXMgVGltZXJEaWdpdFxuICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICk7XG5cbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgc2Nyb2xsQ29udHJvbGxlci5kaXNjb25uZWN0KHNjcm9sbEhhbmRsZXIpO1xuICAgIH0pO1xuXG4gICAgZGlnaXRMYWJlbC5hZGRfY29udHJvbGxlcihzY3JvbGxDb250cm9sbGVyKTtcbiAgICBkaWdpdExhYmVscy5wdXNoKGRpZ2l0TGFiZWwpO1xuXG4gICAgcmV0dXJuIGRpZ2l0TGFiZWw7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVUaW1lRW50cnlCYWNrZ3JvdW5kKCkge1xuICAgIGNvbnN0IHRpbWVFbnRyeUJveCA9IG5ldyBHdGsuQm94KHtcbiAgICAgIG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTCxcbiAgICAgIGhleHBhbmQ6IHRydWUsXG4gICAgICBoYWxpZ246IEd0ay5BbGlnbi5DRU5URVIsXG4gICAgfSk7XG5cbiAgICBjb25zdCBob3Vyc0JveCA9IG5ldyBHdGsuQm94KHsgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMIH0pO1xuICAgIGNvbnN0IGhvdXJMYWJlbDEgPSBuZXcgR3RrLkxhYmVsKHtcbiAgICAgIGxhYmVsOiBcIjBcIixcbiAgICAgIGNzc0NsYXNzZXM6IFtcInRpbWVyLXBvcG92ZXItbGFiZWwtZGlnaXQtYmFja2dyb3VuZFwiXSxcbiAgICB9KTtcbiAgICBjb25zdCBob3VyTGFiZWwyID0gbmV3IEd0ay5MYWJlbCh7XG4gICAgICBsYWJlbDogXCIwXCIsXG4gICAgICBjc3NDbGFzc2VzOiBbXCJ0aW1lci1wb3BvdmVyLWxhYmVsLWRpZ2l0LWJhY2tncm91bmRcIl0sXG4gICAgfSk7XG4gICAgaG91cnNCb3guYXBwZW5kKGhvdXJMYWJlbDEpO1xuICAgIGhvdXJzQm94LmFwcGVuZChob3VyTGFiZWwyKTtcblxuICAgIGNvbnN0IG1pbnV0ZXNCb3ggPSBuZXcgR3RrLkJveCh7IG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTCB9KTtcbiAgICBjb25zdCBtaW51dGVzTGFiZWwxID0gbmV3IEd0ay5MYWJlbCh7XG4gICAgICBsYWJlbDogXCIwXCIsXG4gICAgICBjc3NDbGFzc2VzOiBbXCJ0aW1lci1wb3BvdmVyLWxhYmVsLWRpZ2l0LWJhY2tncm91bmRcIl0sXG4gICAgfSk7XG4gICAgY29uc3QgbWludXRlc0xhYmVsMiA9IG5ldyBHdGsuTGFiZWwoe1xuICAgICAgbGFiZWw6IFwiMFwiLFxuICAgICAgY3NzQ2xhc3NlczogW1widGltZXItcG9wb3Zlci1sYWJlbC1kaWdpdC1iYWNrZ3JvdW5kXCJdLFxuICAgIH0pO1xuICAgIG1pbnV0ZXNCb3guYXBwZW5kKG1pbnV0ZXNMYWJlbDEpO1xuICAgIG1pbnV0ZXNCb3guYXBwZW5kKG1pbnV0ZXNMYWJlbDIpO1xuXG4gICAgY29uc3Qgc2Vjb25kc0JveCA9IG5ldyBHdGsuQm94KHsgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMIH0pO1xuICAgIGNvbnN0IHNlY29uZHNMYWJlbDEgPSBuZXcgR3RrLkxhYmVsKHtcbiAgICAgIGxhYmVsOiBcIjBcIixcbiAgICAgIGNzc0NsYXNzZXM6IFtcInRpbWVyLXBvcG92ZXItbGFiZWwtZGlnaXQtYmFja2dyb3VuZFwiXSxcbiAgICB9KTtcbiAgICBjb25zdCBzZWNvbmRzTGFiZWwyID0gbmV3IEd0ay5MYWJlbCh7XG4gICAgICBsYWJlbDogXCIwXCIsXG4gICAgICBjc3NDbGFzc2VzOiBbXCJ0aW1lci1wb3BvdmVyLWxhYmVsLWRpZ2l0LWJhY2tncm91bmRcIl0sXG4gICAgfSk7XG4gICAgc2Vjb25kc0JveC5hcHBlbmQoc2Vjb25kc0xhYmVsMSk7XG4gICAgc2Vjb25kc0JveC5hcHBlbmQoc2Vjb25kc0xhYmVsMik7XG5cbiAgICBjb25zdCBzZXBhcmF0b3JMYWJlbCA9IG5ldyBHdGsuTGFiZWwoe1xuICAgICAgbGFiZWw6IFwiOlwiLFxuICAgICAgY3NzQ2xhc3NlczogW1widGltZXItcG9wb3Zlci1sYWJlbC1kaWdpdFwiXSxcbiAgICB9KTtcbiAgICBjb25zdCBzZXBhcmF0b3JMYWJlbDIgPSBuZXcgR3RrLkxhYmVsKHtcbiAgICAgIGxhYmVsOiBcIjpcIixcbiAgICAgIGNzc0NsYXNzZXM6IFtcInRpbWVyLXBvcG92ZXItbGFiZWwtZGlnaXRcIl0sXG4gICAgfSk7XG5cbiAgICB0aW1lRW50cnlCb3guYXBwZW5kKGhvdXJzQm94KTtcbiAgICB0aW1lRW50cnlCb3guYXBwZW5kKHNlcGFyYXRvckxhYmVsKTtcbiAgICB0aW1lRW50cnlCb3guYXBwZW5kKG1pbnV0ZXNCb3gpO1xuICAgIHRpbWVFbnRyeUJveC5hcHBlbmQoc2VwYXJhdG9yTGFiZWwyKTtcbiAgICB0aW1lRW50cnlCb3guYXBwZW5kKHNlY29uZHNCb3gpO1xuICAgIHJldHVybiB0aW1lRW50cnlCb3g7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVTYXZlZFRpbWVycygpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGJveFxuICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICBjc3NDbGFzc2VzPXtbXCJ0aW1lci1wb3BvdmVyLXNhdmVkLXRpbWVycy1jb250YWluZXJcIl19XG4gICAgICA+XG4gICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiXCJdfT5cbiAgICAgICAgICA8V2l0aCB2YWx1ZT17dGltZXJWYXJpYWJsZXMuc2F2ZWRUaW1lcnNbMF19PlxuICAgICAgICAgICAgeyhzYXZlZFRpbWVycykgPT5cbiAgICAgICAgICAgICAgc2F2ZWRUaW1lcnMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLkhPUklaT05UQUx9PlxuICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiY29udGFpbmVyLWxhYmVsXCJdfVxuICAgICAgICAgICAgICAgICAgICBsYWJlbD17Y29uZmlndXJhdGlvbi50ZXh0c1swXSgodCkgPT4gYCR7dC50aW1lci5zYXZlZH1gKX1cbiAgICAgICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgbmFtZT17XCJFZGl0IHNhdmVkIHRpbWVycyBidG5cIn1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3M9e1widGltZXItcG9wb3Zlci1lZGl0LXRpbWVycy1idXR0b24gc21hbGwtYnV0dG9uXCJ9XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsPXtpbkVkaXRTYXZlZFRpbWVyc01vZGVbMF0oKHYpID0+XG4gICAgICAgICAgICAgICAgICAgICAgdiA/IGljb25zLmJhY2sgOiBpY29ucy5lZGl0XG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgIHZleHBhbmQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgICBoZXhwYW5kPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgd2lkdGhSZXF1ZXN0PXs0MH1cbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0UmVxdWVzdD17MjB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGluRWRpdFNhdmVkVGltZXJzTW9kZVsxXSgodikgPT4gIXYpO1xuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICB0b29sdGlwVGV4dD17aW5FZGl0U2F2ZWRUaW1lcnNNb2RlWzBdKCh2KSA9PlxuICAgICAgICAgICAgICAgICAgICAgIHZcbiAgICAgICAgICAgICAgICAgICAgICAgID8gY29uZmlndXJhdGlvbi50ZXh0c1swXShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAodCkgPT4gdC50aW1lci5leGl0RWRpdE1vZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKS5nZXQoKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBjb25maWd1cmF0aW9uLnRleHRzWzBdKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICh0KSA9PiB0LnRpbWVyLmVudGVyRWRpdE1vZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKS5nZXQoKVxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgPjwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9XG4gICAgICAgICAgPC9XaXRoPlxuICAgICAgICA8L2JveD5cblxuICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgIDxGb3IgZWFjaD17dGltZXJWYXJpYWJsZXMuc2F2ZWRUaW1lcnNbMF19PlxuICAgICAgICAgICAgeyhpdGVtLCBpbmRleDogQWNjZXNzb3I8bnVtYmVyPikgPT4gKFxuICAgICAgICAgICAgICA8Ym94XG4gICAgICAgICAgICAgICAgb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMfVxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcInRpbWVyLXBvcG92ZXItc2F2ZWQtdGltZXJcIl19XG4gICAgICAgICAgICAgICAgbWFyZ2luVG9wPXsxMH1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtjcmVhdGVNb3ZlU2F2ZVRpbWVyQnV0dG9uQm94KGl0ZW0pfVxuICAgICAgICAgICAgICAgIHtpdGVtLmNyZWF0ZUxhYmVsKCl9XG4gICAgICAgICAgICAgICAge2NyZWF0ZVNhdmVUaW1lckFjdGlvbkJ1dHRvbihpdGVtKX1cbiAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvRm9yPlxuICAgICAgICA8L2JveD5cblxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgbmFtZT17XCJDcmVhdGUgc2F2ZWQgdGltZXJzIGJ0blwifVxuICAgICAgICAgIGNsYXNzPXtcInRpbWVyLXBvcG92ZXItYWRkLXRpbWVyLWJ1dHRvblwifVxuICAgICAgICAgIGxhYmVsPXtjb25maWd1cmF0aW9uLnRleHRzWzBdKCh0KSA9PiBgJHtpY29ucy5wbHVzfSAke3QudGltZXIuYWRkfWApfVxuICAgICAgICAgIG1hcmdpblRvcD17MTB9XG4gICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4ge1xuICAgICAgICAgICAgU2F2ZVRpbWVyV2luZG93LmNyZWF0ZSgpO1xuICAgICAgICAgIH19XG4gICAgICAgID48L2J1dHRvbj5cbiAgICAgIDwvYm94PlxuICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVNb3ZlU2F2ZVRpbWVyQnV0dG9uQm94KHNhdmVkVGltZXI6IFNhdmVkVGltZXIpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGJveCBuYW1lPXtcIk1vdmUgdGltZXIgYnRuIGNvbnRhaW5lciBvdXRlclwifT5cbiAgICAgICAgPFdpdGggdmFsdWU9e2luRWRpdFNhdmVkVGltZXJzTW9kZVswXX0+XG4gICAgICAgICAgeyhjYW5FZGl0KSA9PlxuICAgICAgICAgICAgY2FuRWRpdCAmJiAoXG4gICAgICAgICAgICAgIDxib3ggbmFtZT17XCJNb3ZlIHRpbWVyIGJ0biBjb250YWluZXIgaW5uZXJcIn0+XG4gICAgICAgICAgICAgICAgPFdpdGggdmFsdWU9e3RpbWVyVmFyaWFibGVzLnNhdmVkVGltZXJzWzBdfT5cbiAgICAgICAgICAgICAgICAgIHsodGltZXJzKSA9PlxuICAgICAgICAgICAgICAgICAgICB0aW1lcnMubGVuZ3RoID4gMSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT17XCJNb3ZlIHRpbWVyIGJ0biBjb250YWluZXIgaW5uZXIgaW5uZXJcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9XG4gICAgICAgICAgICAgICAgICAgICAgICBoZXhwYW5kPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZleHBhbmQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGhSZXF1ZXN0PXszMH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodFJlcXVlc3Q9ezIwfVxuICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aW1lcnMuaW5kZXhPZihzYXZlZFRpbWVyKSA+IDAgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT17XCJtb3ZlIHVwIGJ1dHRvblwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXtpY29ucy5hcnJvd1VwfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoUmVxdWVzdD17MzB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0UmVxdWVzdD17MTB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uRklMTH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZXhwYW5kPXt0cnVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidGltZXItcG9wb3Zlci1tb3ZlLXRpbWVyLWJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzbWFsbC1idXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVvcmRlclNhdmVkVGltZXJzKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZW9yZGVyRGlyZWN0aW9uLlVQLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXZlZFRpbWVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAge3RpbWVycy5pbmRleE9mKHNhdmVkVGltZXIpIDwgdGltZXJzLmxlbmd0aCAtIDEgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT17XCJtb3ZlIGRvd24gYnV0dG9uXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2ljb25zLmFycm93RG93bn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aFJlcXVlc3Q9ezMwfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodFJlcXVlc3Q9ezEwfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkZJTEx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmV4cGFuZD17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRpbWVyLXBvcG92ZXItbW92ZS10aW1lci1idXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwic21hbGwtYnV0dG9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrZWQ9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlb3JkZXJTYXZlZFRpbWVycyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVvcmRlckRpcmVjdGlvbi5ET1dOLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXZlZFRpbWVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgPC9XaXRoPlxuICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIClcbiAgICAgICAgICB9XG4gICAgICAgIDwvV2l0aD5cbiAgICAgIDwvYm94PlxuICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiByZW9yZGVyU2F2ZWRUaW1lcnMoXG4gICAgZGlyZWN0aW9uOiBSZW9yZGVyRGlyZWN0aW9uLFxuICAgIHNhdmVkVGltZXI6IFNhdmVkVGltZXJcbiAgKSB7XG4gICAgdGltZXJWYXJpYWJsZXMuc2F2ZWRUaW1lcnNbMV0oKHRpbWVycykgPT4ge1xuICAgICAgY29uc3QgaW5kZXggPSB0aW1lcnMuaW5kZXhPZihzYXZlZFRpbWVyKTtcbiAgICAgIGNvbnN0IGZpcnN0UGFydEluZGV4ID0gaW5kZXggLSAoZGlyZWN0aW9uID09IFJlb3JkZXJEaXJlY3Rpb24uVVAgPyAxIDogMCk7XG4gICAgICBjb25zdCBzZWNvbmRQYXJ0SW5kZXggPVxuICAgICAgICBpbmRleCArIChkaXJlY3Rpb24gPT0gUmVvcmRlckRpcmVjdGlvbi5VUCA/IDAgOiAxKTtcblxuICAgICAgbGV0IG5ld09yZGVyOiBTYXZlZFRpbWVyW10gPSBbXTtcbiAgICAgIGNvbnN0IGZpcnN0UGFydCA9IHRpbWVycy5zbGljZSgwLCBmaXJzdFBhcnRJbmRleCk7XG4gICAgICBjb25zdCB0aW1lcjEgPSB0aW1lcnNbZmlyc3RQYXJ0SW5kZXhdO1xuICAgICAgY29uc3QgdGltZXIyID0gdGltZXJzW3NlY29uZFBhcnRJbmRleF07XG4gICAgICBjb25zdCBzZWNvbmRQYXJ0ID0gdGltZXJzLnNsaWNlKHNlY29uZFBhcnRJbmRleCArIDEpO1xuXG4gICAgICBuZXdPcmRlci5wdXNoKC4uLmZpcnN0UGFydCk7XG4gICAgICBuZXdPcmRlci5wdXNoKHRpbWVyMik7XG4gICAgICBuZXdPcmRlci5wdXNoKHRpbWVyMSk7XG4gICAgICBuZXdPcmRlci5wdXNoKC4uLnNlY29uZFBhcnQpO1xuXG4gICAgICByZXR1cm4gbmV3T3JkZXI7XG4gICAgfSk7XG5cbiAgICBUaW1lclV0aWxzLnNhdmVUaW1lcnNUb0ZpbGUoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVNhdmVUaW1lckFjdGlvbkJ1dHRvbihzYXZlZFRpbWVyOiBTYXZlZFRpbWVyKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxib3ggbmFtZT17XCJTYXZlZCB0aW1lciBhY3Rpb24gYnRuIGNvbnRhaW5lclwifT5cbiAgICAgICAgPFdpdGggdmFsdWU9e2luRWRpdFNhdmVkVGltZXJzTW9kZVswXX0+XG4gICAgICAgICAgeyhjYW5FZGl0KSA9PlxuICAgICAgICAgICAgY2FuRWRpdCA/IChcbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIG5hbWU9e1wiRGVsZXRlIHNhdmVkIHRpbWVyIGJ0blwifVxuICAgICAgICAgICAgICAgIGNsYXNzPXtcInRpbWVyLXBvcG92ZXItcmVtb3ZlLXRpbWVyLWJ1dHRvbiBzbWFsbC1idXR0b25cIn1cbiAgICAgICAgICAgICAgICBsYWJlbD17aWNvbnMuY2xvc2V9XG4gICAgICAgICAgICAgICAgdmV4cGFuZD17ZmFsc2V9XG4gICAgICAgICAgICAgICAgaGV4cGFuZD17ZmFsc2V9XG4gICAgICAgICAgICAgICAgd2lkdGhSZXF1ZXN0PXs0MH1cbiAgICAgICAgICAgICAgICBoZWlnaHRSZXF1ZXN0PXsyMH1cbiAgICAgICAgICAgICAgICBvbkNsaWNrZWQ9e2FzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICAgIGF3YWl0IHJlbW92ZVRpbWVyKHNhdmVkVGltZXIpO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgID48L2J1dHRvbj5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBuYW1lPXtcIlN0YXJ0IHNhdmVkIHRpbWVyIGJ0blwifVxuICAgICAgICAgICAgICAgIGNsYXNzPXtcInRpbWVyLXBvcG92ZXItc3RhcnQtYnV0dG9uIHNtYWxsLWJ1dHRvblwifVxuICAgICAgICAgICAgICAgIGxhYmVsPXtpY29ucy5wbGF5fVxuICAgICAgICAgICAgICAgIHZleHBhbmQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgIGhleHBhbmQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgIHdpZHRoUmVxdWVzdD17NDB9XG4gICAgICAgICAgICAgICAgaGVpZ2h0UmVxdWVzdD17MjB9XG4gICAgICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICBzYXZlZFRpbWVyLnJ1blRpbWVyKCk7XG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgPjwvYnV0dG9uPlxuICAgICAgICAgICAgKVxuICAgICAgICAgIH1cbiAgICAgICAgPC9XaXRoPlxuICAgICAgPC9ib3g+XG4gICAgKTtcbiAgfVxuXG4gIGFzeW5jIGZ1bmN0aW9uIHJlbW92ZVRpbWVyKHNhdmVkVGltZXI6IFNhdmVkVGltZXIpIHtcbiAgICB0aW1lclZhcmlhYmxlcy5zYXZlZFRpbWVyc1sxXSgodikgPT4ge1xuICAgICAgY29uc3QgaW5kZXggPSB2LmluZGV4T2Yoc2F2ZWRUaW1lcik7XG4gICAgICBjb25zdCBmaXJzdFBhcnQgPSB2LnNsaWNlKDAsIGluZGV4KTtcbiAgICAgIGNvbnN0IHNlY29uZFBhcnQgPSB2LnNsaWNlKGluZGV4ICsgMSk7XG4gICAgICByZXR1cm4gZmlyc3RQYXJ0LmNvbmNhdChzZWNvbmRQYXJ0KTtcbiAgICB9KTtcblxuICAgIGF3YWl0IFRpbWVyVXRpbHMuc2F2ZVRpbWVyc1RvRmlsZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlUnVubmluZ1RpbWVycygpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGJveD5cbiAgICAgICAgPFdpdGggdmFsdWU9e3RpbWVyVmFyaWFibGVzLnRpbWVyc0RhdGFbMF19PlxuICAgICAgICAgIHsodGQpID0+XG4gICAgICAgICAgICB0ZC5ydW5uaW5nVGltZXJzID4gMCAmJiAoXG4gICAgICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0gbWFyZ2luQm90dG9tPXszMH0+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJjb250YWluZXItbGFiZWxcIl19XG4gICAgICAgICAgICAgICAgICBsYWJlbD17Y29uZmlndXJhdGlvbi50ZXh0c1swXSgodCkgPT4gYCR7dC50aW1lci5ydW5uaW5nfWApfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfSB2ZXhwYW5kPXt0cnVlfT5cbiAgICAgICAgICAgICAgICAgIDxGb3IgZWFjaD17dGltZXJWYXJpYWJsZXMucnVubmluZ1RpbWVyc1swXX0+XG4gICAgICAgICAgICAgICAgICAgIHsoaXRlbSwgaW5kZXg6IEFjY2Vzc29yPG51bWJlcj4pID0+XG4gICAgICAgICAgICAgICAgICAgICAgaW5kZXgoKGkpID0+IGl0ZW0uY3JlYXRlTGFiZWwoaSkpLmdldCgpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIDwvRm9yPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIClcbiAgICAgICAgICB9XG4gICAgICAgIDwvV2l0aD5cbiAgICAgIDwvYm94PlxuICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVNYWluSW50ZXJmYWNlKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9IG1hcmdpbkJvdHRvbT17MzB9PlxuICAgICAgICA8Ym94IGhleHBhbmQ+XG4gICAgICAgICAgPG92ZXJsYXkgY3NzQ2xhc3Nlcz17W1widGltZXItcG9wb3Zlci1sYWJlbC1kaWdpdC1jb250YWluZXJcIl19PlxuICAgICAgICAgICAgPGJveCBoZXhwYW5kICR0eXBlPVwib3ZlcmxheVwiPlxuICAgICAgICAgICAgICB7Y3JlYXRlVGltZUVudHJ5KCl9XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgIDxib3ggaGV4cGFuZD57Y3JlYXRlVGltZUVudHJ5QmFja2dyb3VuZCgpfTwvYm94PlxuICAgICAgICAgIDwvb3ZlcmxheT5cbiAgICAgICAgPC9ib3g+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBjbGFzcz17XCJ0aW1lci1wb3BvdmVyLXN0YXJ0LWJ1dHRvblwifVxuICAgICAgICAgIG9uQ2xpY2tlZD17KCkgPT4ge1xuICAgICAgICAgICAgVGltZXJVdGlscy5ydW5UaW1lcih0aW1lclNlY29uZHMuZ2V0QWxsU2Vjb25kcygpKTtcbiAgICAgICAgICB9fVxuICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgPlxuICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgbGFiZWw9e2NvbmZpZ3VyYXRpb24udGV4dHNbMF0oXG4gICAgICAgICAgICAgICh0KSA9PiBgJHtpY29ucy5wbGF5fSAke3QudGltZXIucnVufWBcbiAgICAgICAgICAgICl9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2JveD5cbiAgICApO1xuICB9XG59XG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IsIFdpdGggfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgVGltZXJQb3BvdmVyIGZyb20gXCIuL3RpbWVyX3BvcG92ZXJcIjtcbmltcG9ydCB7IHRpbWVyVmFyaWFibGVzIH0gZnJvbSBcIi4vdGltZXJfdmFyaWFibGVzXCI7XG5pbXBvcnQgeyBUaW1lcnNEYXRhIH0gZnJvbSBcIi4vdGltZXJzX2RhdGFcIjtcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgaWNvbnMgfSBmcm9tIFwiLi4vLi4vbW9kZWxzL3RleHRzL3RleHRfaWNvbnNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIFRpbWVyKCkge1xuICByZXR1cm4gKFxuICAgIDxtZW51YnV0dG9uPlxuICAgICAgPFdpdGggdmFsdWU9e3RpbWVyVmFyaWFibGVzLnRpbWVyc0RhdGFbMF19PlxuICAgICAgICB7KHRkKSA9PiAoXG4gICAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJ0aW1lci1idXR0b25cIl19IG92ZXJmbG93PXtHdGsuT3ZlcmZsb3cuSElEREVOfT5cbiAgICAgICAgICAgIHtjcmVhdGVMYWJlbCh0ZCl9XG4gICAgICAgICAgPC9ib3g+XG4gICAgICAgICl9XG4gICAgICA8L1dpdGg+XG4gICAgICA8VGltZXJQb3BvdmVyIC8+XG4gICAgPC9tZW51YnV0dG9uPlxuICApO1xuXG4gIGZ1bmN0aW9uIGNyZWF0ZUxhYmVsKHRpbWVyc0RhdGE6IFRpbWVyc0RhdGEpIHtcbiAgICBpZiAodGltZXJzRGF0YS5ydW5uaW5nVGltZXJzID09PSAwKVxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGxhYmVsXG4gICAgICAgICAgY2xhc3M9e1widGltZXItYnV0dG9uLWZyZWUgYmFyLWJ1dHRvbi1sYWJlbFwifVxuICAgICAgICAgIGxhYmVsPXtpY29ucy5hbGFybUNsb2NrfVxuICAgICAgICAvPlxuICAgICAgKTtcblxuICAgIGlmICh0aW1lcnNEYXRhLmRvbmVUaW1lcnMgPT09IDApXG4gICAgICByZXR1cm4gKFxuICAgICAgICA8bGFiZWxcbiAgICAgICAgICBjbGFzcz17XCJ0aW1lci1idXR0b24tcnVubmluZyBiYXItYnV0dG9uLWxhYmVsXCJ9XG4gICAgICAgICAgbGFiZWw9e2Ake2ljb25zLmhvdXJnbGFzc30gJHt0aW1lcnNEYXRhLnJ1bm5pbmdUaW1lcnN9YH1cbiAgICAgICAgLz5cbiAgICAgICk7XG5cbiAgICBpZiAodGltZXJzRGF0YS5nZXRVbmRvbmVDb3VudCgpID09PSAwKVxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGxhYmVsXG4gICAgICAgICAgY2xhc3M9e1widGltZXItYnV0dG9uLWRvbmUgYmFyLWJ1dHRvbi1sYWJlbFwifVxuICAgICAgICAgIGxhYmVsPXtgJHtpY29ucy5hbGFybU9ufSAke3RpbWVyc0RhdGEuZG9uZVRpbWVyc31gfVxuICAgICAgICAvPlxuICAgICAgKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8Ym94PlxuICAgICAgICA8bGFiZWxcbiAgICAgICAgICBjbGFzcz17XCJ0aW1lci1idXR0b24tcnVubmluZy1hcy1sZWZ0IGJhci1idXR0b24tbGFiZWxcIn1cbiAgICAgICAgICBsYWJlbD17YCR7aWNvbnMuaG91cmdsYXNzfSAke3RpbWVyc0RhdGEuZ2V0VW5kb25lQ291bnQoKX1gfVxuICAgICAgICAvPlxuICAgICAgICA8bGFiZWxcbiAgICAgICAgICBjbGFzcz17XCJ0aW1lci1idXR0b24tZG9uZS1hcy1yaWdodCBiYXItYnV0dG9uLWxhYmVsXCJ9XG4gICAgICAgICAgbGFiZWw9e2Ake2ljb25zLmFsYXJtT259ICR7dGltZXJzRGF0YS5kb25lVGltZXJzfWB9XG4gICAgICAgIC8+XG4gICAgICA8L2JveD5cbiAgICApO1xuICB9XG59XG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIFdpdGggfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IGljb25zIH0gZnJvbSBcIi4uLy4uL21vZGVscy90ZXh0cy90ZXh0X2ljb25zXCI7XG5pbXBvcnQgTmV0d29yayBmcm9tIFwiZ2k6Ly9Bc3RhbE5ldHdvcmtcIjtcbmltcG9ydCB7IE5ldHdvcmtTdGF0dXNQb3BvdmVyIH0gZnJvbSBcIi4vbmV0d29ya19zdGF0dXNfcG9wb3ZlclwiO1xuaW1wb3J0IHsgQ29tbXVuaWNhdGlvbiB9IGZyb20gXCIuLi8uLi9tb2RlbHMvdXRpbHMvY29tbXVuaWNhdGlvblwiO1xuXG5leHBvcnQgZnVuY3Rpb24gTmV0d29ya1N0YXR1cygpIHtcbiAgY29uc3QgbmV0d29yazogTmV0d29yay5OZXR3b3JrID0gTmV0d29yay5nZXRfZGVmYXVsdCgpO1xuICBjb25zdCBuZXR3b3JrU3RhdGUgPSBjcmVhdGVCaW5kaW5nKG5ldHdvcmssIFwicHJpbWFyeVwiKTtcblxuICByZXR1cm4gKFxuICAgIDxtZW51YnV0dG9uPlxuICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJuZXR3b3JrLWJ1dHRvblwiXX0gb3ZlcmZsb3c9e0d0ay5PdmVyZmxvdy5ISURERU59PlxuICAgICAgICA8V2l0aCB2YWx1ZT17bmV0d29ya1N0YXRlfT5cbiAgICAgICAgICB7KHN0YXRlKSA9PiB7XG4gICAgICAgICAgICBpZiAoc3RhdGUgPT09IG51bGwgfHwgc3RhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVMYWJlbChzdGF0ZSk7XG4gICAgICAgICAgfX1cbiAgICAgICAgPC9XaXRoPlxuICAgICAgPC9ib3g+XG4gICAgICA8TmV0d29ya1N0YXR1c1BvcG92ZXIgbmV0d29yaz17bmV0d29ya30gLz5cbiAgICA8L21lbnVidXR0b24+XG4gICk7XG5cbiAgZnVuY3Rpb24gY3JlYXRlTGFiZWwobmV0d29ya1R5cGU6IE5ldHdvcmsuUHJpbWFyeSkge1xuICAgIHRyeSB7XG4gICAgICBsZXQgaWNvbiA9IGljb25zLm5vQ29ubmVjdGlvbjtcbiAgICAgIHN3aXRjaCAobmV0d29ya1R5cGUpIHtcbiAgICAgICAgY2FzZSBOZXR3b3JrLlByaW1hcnkuVU5LTk9XTjpcbiAgICAgICAgICBpY29uID0gaWNvbnMubm9Db25uZWN0aW9uO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgTmV0d29yay5QcmltYXJ5LldJRkk6XG4gICAgICAgICAgaWNvbiA9IGljb25zLndpZmlDb25uZWN0aW9uTWF4O1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgTmV0d29yay5QcmltYXJ5LldJUkVEOlxuICAgICAgICAgIGljb24gPSBpY29ucy53aXJlZENvbm5lY3Rpb247XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICBpY29uID0gaWNvbnMubm9Db25uZWN0aW9uO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gKFxuICAgICAgICA8Ym94PlxuICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgY2xhc3M9e1wibmV0d29yay1idXR0b24tZ29vZCBiYXItYnV0dG9uLWxhYmVsXCJ9XG4gICAgICAgICAgICBsYWJlbD17YCR7aWNvbn1gfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvYm94PlxuICAgICAgKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgQ29tbXVuaWNhdGlvbi5wcmludEVycm9yKGBFUlJPUiBjcmVhdGUgbGFiZWw6ICR7ZXJyb3J9YCksXG4gICAgICAgIFwibmV0d29ya19zdGF0dXNcIjtcblxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGJveD5cbiAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgIGNsYXNzPXtcIm5ldHdvcmstYnV0dG9uLWdvb2QgYmFyLWJ1dHRvbi1sYWJlbFwifVxuICAgICAgICAgICAgbGFiZWw9e2Ake2ljb25zLm5vQ29ubmVjdGlvbn0gZXJyb3JgfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvYm94PlxuICAgICAgKTtcbiAgICB9XG4gIH1cbn1cbiIsICJpbXBvcnQge1xuICBBY2Nlc3NvcixcbiAgY3JlYXRlQmluZGluZyxcbiAgY3JlYXRlQ29tcHV0ZWQsXG4gIGNyZWF0ZVN0YXRlLFxuICBGb3IsXG4gIFdpdGgsXG59IGZyb20gXCJhZ3NcIjtcbmltcG9ydCB7IEFzdGFsLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IGludGVydmFsIH0gZnJvbSBcImFncy90aW1lXCI7XG5pbXBvcnQgQXN0YWxJTyBmcm9tIFwiZ2k6Ly9Bc3RhbElPP3ZlcnNpb249MC4xXCI7XG5pbXBvcnQgTmV0d29yayBmcm9tIFwiZ2k6Ly9Bc3RhbE5ldHdvcmtcIjtcbmltcG9ydCB7IGNvbmZpZ3VyYXRpb24gfSBmcm9tIFwiLi4vLi4vYXBwXCI7XG5pbXBvcnQgeyBpY29ucyB9IGZyb20gXCIuLi8uLi9tb2RlbHMvdGV4dHMvdGV4dF9pY29uc1wiO1xuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiO1xuaW1wb3J0IHsgQ3VycmVudENvbm5lY3Rpb25TdGF0dXMgfSBmcm9tIFwiLi9jdXJyZW50X2Nvbm5lY3Rpb25fc3RhdHVzXCI7XG5cbnR5cGUgTmV0d29ya1Byb3BzID0ge1xuICBuZXR3b3JrOiBOZXR3b3JrLk5ldHdvcms7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gTmV0d29ya1N0YXR1c1BvcG92ZXIoeyBuZXR3b3JrIH06IE5ldHdvcmtQcm9wcykge1xuICBsZXQgc2NhbldpZmlJbnRlcnZhbDogQXN0YWxJTy5UaW1lIHwgdW5kZWZpbmVkO1xuXG4gIGNvbnN0IHdpZmkgPSBjcmVhdGVCaW5kaW5nKG5ldHdvcmssIFwid2lmaVwiKTtcbiAgY29uc3QgcHJpbWFyeSA9IGNyZWF0ZUJpbmRpbmcobmV0d29yaywgXCJwcmltYXJ5XCIpO1xuXG4gIGNvbnN0IHVzZVdpZmkgPSBjcmVhdGVDb21wdXRlZChcbiAgICBbd2lmaSwgcHJpbWFyeV0sXG4gICAgKGE6IE5ldHdvcmsuV2lmaSwgYjogTmV0d29yay5QcmltYXJ5KSA9PiB7XG4gICAgICBpZiAoYSA9PSB1bmRlZmluZWQgfHwgYSA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG4gICAgICBpZiAoYiAhPT0gTmV0d29yay5QcmltYXJ5LldJRkkpIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxwb3BvdmVyXG4gICAgICBhdXRvaGlkZT17ZmFsc2V9XG4gICAgICBoYXNBcnJvdz17ZmFsc2V9XG4gICAgICBjbGFzcz17XCJ3aWRnZXQtcG9wb3ZlclwifVxuICAgICAgd2lkdGhSZXF1ZXN0PXs1MDB9XG4gICAgICBtYXJnaW5FbmQ9ezYwfVxuICAgICAgbWFyZ2luQm90dG9tPXszMH1cbiAgICAgIG9uU2hvdz17KCkgPT4ge1xuICAgICAgICBzY2FuV2lmaUludGVydmFsID0gaW50ZXJ2YWwoNTAwMCwgKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IHdpZmlWYWx1ZSA9IHdpZmkuZ2V0KCk7XG4gICAgICAgICAgaWYgKHdpZmlWYWx1ZSAhPT0gdW5kZWZpbmVkICYmIHdpZmlWYWx1ZS5lbmFibGVkKSBuZXR3b3JrLndpZmkuc2NhbigpO1xuICAgICAgICB9KTtcbiAgICAgIH19XG4gICAgICBvbkNsb3NlZD17KCkgPT4ge1xuICAgICAgICBpZiAoc2NhbldpZmlJbnRlcnZhbCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgc2NhbldpZmlJbnRlcnZhbC5jYW5jZWwoKTtcbiAgICAgICAgICBzY2FuV2lmaUludGVydmFsID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICB9fVxuICAgID5cbiAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgIDxib3g+e0N1cnJlbnRDb25uZWN0aW9uU3RhdHVzKHsgbmV0d29yayB9KX08L2JveD5cbiAgICAgICAgPGJveCBoZXhwYW5kIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0+XG4gICAgICAgICAge2NyZWF0ZVdpZmlTd2l0Y2goKX1cbiAgICAgICAgPC9ib3g+XG5cbiAgICAgICAgPGJveCB2aXNpYmxlPXt1c2VXaWZpfSBtYXJnaW5Ub3A9ezEwfT5cbiAgICAgICAgICA8V2l0aCB2YWx1ZT17d2lmaX0+XG4gICAgICAgICAgICB7KHdpZmkpID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8Ym94PlxuICAgICAgICAgICAgICAgICAgPFdpdGggdmFsdWU9e2NyZWF0ZUJpbmRpbmcod2lmaSwgXCJzdGF0ZVwiKX0+XG4gICAgICAgICAgICAgICAgICAgIHsoc3RhdGU6IE5ldHdvcmsuRGV2aWNlU3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNXaWZpT2soc3RhdGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYWNjZXNzUG9pbnRzTGlzdCgpO1xuICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8Ym94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maWd1cmF0aW9uLmdldFRleHRzKCkubmV0d29yay53aWZpVW5hdmFpbGFibGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPC9XaXRoPlxuICAgICAgICA8L2JveD5cbiAgICAgIDwvYm94PlxuICAgIDwvcG9wb3Zlcj5cbiAgKTtcblxuICBmdW5jdGlvbiBjcmVhdGVXaWZpU3dpdGNoKCkge1xuICAgIGNvbnN0IHVzZVdpZmkgPSBjcmVhdGVDb21wdXRlZChcbiAgICAgIFt3aWZpLCBwcmltYXJ5XSxcbiAgICAgIChhOiBOZXR3b3JrLldpZmksIGI6IE5ldHdvcmsuUHJpbWFyeSkgPT4ge1xuICAgICAgICBpZiAoYSA9PSB1bmRlZmluZWQgfHwgYSA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIGlmIChiID09PSBOZXR3b3JrLlByaW1hcnkuV0lSRUQpIHJldHVybiBmYWxzZTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8Ym94XG4gICAgICAgIHZpc2libGU9e3VzZVdpZml9XG4gICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTH1cbiAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICBtYXJnaW5Ub3A9ezIwfVxuICAgICAgPlxuICAgICAgICA8bGFiZWwgbGFiZWw9e1wiV2lmaSBcIn0+PC9sYWJlbD5cbiAgICAgICAgPHN3aXRjaFxuICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIm5ldHdvcmstd2lmaS1zd2l0Y2hcIl19XG4gICAgICAgICAgYWN0aXZlPXt3aWZpKCh3KSA9PiB3LmVuYWJsZWQpfVxuICAgICAgICAgIG9uTm90aWZ5QWN0aXZlPXsoc2VsZikgPT4ge1xuICAgICAgICAgICAgbmV0d29yay53aWZpLnNldF9lbmFibGVkKHNlbGYuc3RhdGUpO1xuICAgICAgICAgIH19XG4gICAgICAgID48L3N3aXRjaD5cbiAgICAgIDwvYm94PlxuICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiBpc1dpZmlPayhzdGF0ZTogTmV0d29yay5EZXZpY2VTdGF0ZSkge1xuICAgIHJldHVybiAoXG4gICAgICBzdGF0ZSAhPT0gbnVsbCAmJlxuICAgICAgc3RhdGUgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgc3RhdGUgIT09IE5ldHdvcmsuRGV2aWNlU3RhdGUuVU5LTk9XTiAmJlxuICAgICAgc3RhdGUgIT09IE5ldHdvcmsuRGV2aWNlU3RhdGUuVU5BVkFJTEFCTEUgJiZcbiAgICAgIHN0YXRlICE9PSBOZXR3b3JrLkRldmljZVN0YXRlLlVOTUFOQUdFRFxuICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiBhY2Nlc3NQb2ludHNMaXN0KCkge1xuICAgIGNvbnN0IHNhdmVkQ29ubmVjdGlvbnM6IHN0cmluZ1tdID0gZ2V0U2F2ZWRDb25uZWN0aW9ucygpO1xuICAgIGNvbnN0IGZpbHRlckFjY2Vzc1BvaW50cyA9IChhcnI6IE5ldHdvcmsuQWNjZXNzUG9pbnRbXSkgPT4ge1xuICAgICAgcmV0dXJuIGFyclxuICAgICAgICAuZmlsdGVyKChhcCkgPT4gISFhcC5zc2lkICYmIGFwICE9PSBuZXR3b3JrLndpZmkuYWN0aXZlQWNjZXNzUG9pbnQpXG4gICAgICAgIC5zb3J0KChhLCBiKSA9PiBiLnN0cmVuZ3RoIC0gYS5zdHJlbmd0aCk7XG4gICAgfTtcbiAgICBjb25zdCB3aWZpQXZhaWxhYmxlTmV0d29ya3MgPSBjcmVhdGVCaW5kaW5nKFxuICAgICAgbmV0d29yay53aWZpLFxuICAgICAgXCJhY2Nlc3NQb2ludHNcIlxuICAgICkoZmlsdGVyQWNjZXNzUG9pbnRzKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICA8bGFiZWxcbiAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgeGFsaWduPXswLjV9XG4gICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiY29udGFpbmVyLWxhYmVsXCJdfVxuICAgICAgICAgIGxhYmVsPXtjb25maWd1cmF0aW9uLnRleHRzWzBdKFxuICAgICAgICAgICAgKHQpID0+IGAke3QubmV0d29yay5hdmFpbGFibGVOZXR3b3Jrc0xhYmVsfWBcbiAgICAgICAgICApfVxuICAgICAgICAvPlxuICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9IG1hcmdpblRvcD17MTB9PlxuICAgICAgICAgIDxXaXRoIHZhbHVlPXt3aWZpQXZhaWxhYmxlTmV0d29ya3N9PlxuICAgICAgICAgICAgeyhhcHMpID0+XG4gICAgICAgICAgICAgIChhcHMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgICAgICAgPHNjcm9sbGVkd2luZG93IGhlaWdodFJlcXVlc3Q9ezIwMH0+XG4gICAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9IG1hcmdpbkVuZD17Nn0+XG4gICAgICAgICAgICAgICAgICAgIDxGb3IgZWFjaD17d2lmaUF2YWlsYWJsZU5ldHdvcmtzKGZpbHRlckFjY2Vzc1BvaW50cyl9PlxuICAgICAgICAgICAgICAgICAgICAgIHsoYXA6IE5ldHdvcmsuQWNjZXNzUG9pbnQpID0+XG4gICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVBY2Nlc3NQb2ludExhYmVsKGFwLCBzYXZlZENvbm5lY3Rpb25zKVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPC9Gb3I+XG4gICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8L3Njcm9sbGVkd2luZG93PlxuICAgICAgICAgICAgICApKSB8fCAoXG4gICAgICAgICAgICAgICAgPGJveCBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9IHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0+XG4gICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wibGFiZWwtdGV4dFwiXX1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2NvbmZpZ3VyYXRpb24udGV4dHNbMF0oXG4gICAgICAgICAgICAgICAgICAgICAgKHQpID0+IGAke3QubmV0d29yay5zZWFyY2hOZXR3b3Jrc31gXG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbkVuZD17Nn1cbiAgICAgICAgICAgICAgICAgID48L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcImxhYmVsLWljb25cIl19XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsPXtpY29ucy5zZWFyY2hOZXR3b3Jrc31cbiAgICAgICAgICAgICAgICAgID48L2xhYmVsPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9XG4gICAgICAgICAgPC9XaXRoPlxuICAgICAgICA8L2JveD5cbiAgICAgIDwvYm94PlxuICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRTYXZlZENvbm5lY3Rpb25zKCk6IHN0cmluZ1tdIHtcbiAgICBjb25zdCBjb25uZWN0aW9uczogc3RyaW5nW10gPSBbXTtcblxuICAgIG5ldHdvcmsuY2xpZW50LmNvbm5lY3Rpb25zLmZvckVhY2goKGNvbm5lY3Rpb24pID0+IHtcbiAgICAgIGlmIChjb25uZWN0aW9uICE9IHVuZGVmaW5lZCkge1xuICAgICAgICBsZXQgY29ubmVjdGlvbk5hbWUgPSBcIlwiO1xuICAgICAgICBjb25zdCB3aXJlbGVzc1NldHRpbmcgPSBjb25uZWN0aW9uLmdldF9zZXR0aW5nX3dpcmVsZXNzKCk7XG4gICAgICAgIGlmICh3aXJlbGVzc1NldHRpbmcgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgY29uc3Qgc3NpZEJ5dGVBcnJheSA9IHdpcmVsZXNzU2V0dGluZy5nZXRfc3NpZCgpO1xuICAgICAgICAgIGNvbnN0IHNzaWRBcnJheSA9IHNzaWRCeXRlQXJyYXkudG9BcnJheSgpOyAvLyBudW1iZXJbXVxuICAgICAgICAgIGNvbm5lY3Rpb25OYW1lID0gbmV3IFRleHREZWNvZGVyKFwidXRmLThcIikuZGVjb2RlKFxuICAgICAgICAgICAgbmV3IFVpbnQ4QXJyYXkoc3NpZEFycmF5KVxuICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjb25uZWN0aW9uU2V0dGluZyA9IGNvbm5lY3Rpb24uZ2V0X3NldHRpbmdfY29ubmVjdGlvbigpO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgY29ubmVjdGlvbk5hbWUgIT09IFwiXCIgJiZcbiAgICAgICAgICBjb25uZWN0aW9uU2V0dGluZyAmJlxuICAgICAgICAgIGNvbm5lY3Rpb25TZXR0aW5nLnRpbWVzdGFtcCA+IDBcbiAgICAgICAgKSB7XG4gICAgICAgICAgY29ubmVjdGlvbnMucHVzaChjb25uZWN0aW9uTmFtZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBjb25uZWN0aW9ucztcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUFjY2Vzc1BvaW50TGFiZWwoXG4gICAgYXA6IE5ldHdvcmsuQWNjZXNzUG9pbnQsXG4gICAgc2F2ZWRDb25uZWN0aW9uczogc3RyaW5nW11cbiAgKSB7XG4gICAgY29uc3Qgc2lnbmFsU3RyZW5ndGhUaHJlc2hvbGQgPSBNYXRoLmZsb29yKGFwLnN0cmVuZ3RoIC8gMjUpO1xuICAgIGxldCBzdHJlbmd0aEljb24gPSBpY29ucy5zaWduYWxTdHJlbmd0aDA7XG4gICAgc3dpdGNoIChzaWduYWxTdHJlbmd0aFRocmVzaG9sZCkge1xuICAgICAgY2FzZSAwOlxuICAgICAgICBzdHJlbmd0aEljb24gPSBpY29ucy5zaWduYWxTdHJlbmd0aDA7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAxOlxuICAgICAgICBzdHJlbmd0aEljb24gPSBpY29ucy5zaWduYWxTdHJlbmd0aDE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDI6XG4gICAgICAgIHN0cmVuZ3RoSWNvbiA9IGljb25zLnNpZ25hbFN0cmVuZ3RoMjtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgMzpcbiAgICAgIGNhc2UgNDpcbiAgICAgICAgc3RyZW5ndGhJY29uID0gaWNvbnMuc2lnbmFsU3RyZW5ndGgzO1xuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgc3RyZW5ndGhJY29uID0gaWNvbnMuc2lnbmFsU3RyZW5ndGgwO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICBjb25zdCBwYXNzd29yZEljb24gPSBhcC5yZXF1aXJlc1Bhc3N3b3JkID8gaWNvbnMubG9jayA6IGljb25zLmxvY2tPcGVuO1xuICAgIGNvbnN0IHBhc3N3b3JkSWNvbkNvbG9yID1cbiAgICAgIFwiYWNjZXNzLXBvaW50LWxhYmVsLWljb24tXCIgK1xuICAgICAgKHBhc3N3b3JkSWNvbiA9PT0gaWNvbnMubG9jayA/IFwiYmFkXCIgOiBcImdvb2RcIik7XG5cbiAgICBjb25zdCBzcGVlZEljb24gPVxuICAgICAgYXAuZnJlcXVlbmN5IDwgNDAwMCA/IGljb25zLm5ldHdvcmtTcGVlZFNsb3cgOiBpY29ucy5uZXR3b3JrU3BlZWRGYXN0O1xuICAgIGNvbnN0IHNwZWVkSWNvbkNvbG9yID1cbiAgICAgIFwiYWNjZXNzLXBvaW50LWxhYmVsLWljb24tXCIgK1xuICAgICAgKHNwZWVkSWNvbiA9PT0gaWNvbnMubmV0d29ya1NwZWVkU2xvdyA/IFwiYmFkXCIgOiBcImdvb2RcIik7XG5cbiAgICBjb25zdCBzYXZlZEljb24gPSBzYXZlZENvbm5lY3Rpb25zLmluY2x1ZGVzKGFwLnNzaWQpXG4gICAgICA/IGljb25zLnNhdmVcbiAgICAgIDogaWNvbnMudW5rbm93bk5ldHdvcms7XG4gICAgY29uc3Qgc2F2ZWRJY29uQ29sb3IgPVxuICAgICAgXCJhY2Nlc3MtcG9pbnQtbGFiZWwtaWNvbi1cIiArXG4gICAgICAoc2F2ZWRJY29uID09PSBpY29ucy51bmtub3duTmV0d29yayA/IFwiYmFkXCIgOiBcImdvb2RcIik7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGJveFxuICAgICAgICB2ZXhwYW5kPXtmYWxzZX1cbiAgICAgICAgY3NzQ2xhc3Nlcz17W1wiYWNjZXNzLXBvaW50LWNvbnRhaW5lclwiXX1cbiAgICAgICAgdG9vbHRpcFRleHQ9e2Ake2FwLnNzaWR9ICR7YXAuc3RyZW5ndGh9LzEwMGB9XG4gICAgICA+XG4gICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiYWNjZXNzLXBvaW50LWxhYmVsLWNvbnRhaW5lclwiXX0gbWFyZ2luRW5kPXsxMH0+XG4gICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICB4YWxpZ249ezB9XG4gICAgICAgICAgICBtYXJnaW5FbmQ9ezZ9XG4gICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJsYWJlbC1pY29uXCJdfVxuICAgICAgICAgICAgbGFiZWw9e2Ake3N0cmVuZ3RoSWNvbn1gfVxuICAgICAgICAgID48L2xhYmVsPlxuICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgeGFsaWduPXswfVxuICAgICAgICAgICAgeWFsaWduPXswLjZ9XG4gICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICBtYXJnaW5FbmQ9ezZ9XG4gICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJsYWJlbC10ZXh0XCJdfVxuICAgICAgICAgICAgbGFiZWw9e2Ake2FwLnNzaWR9YH1cbiAgICAgICAgICA+PC9sYWJlbD5cbiAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgIHhhbGlnbj17MH1cbiAgICAgICAgICAgIG1hcmdpbkVuZD17Nn1cbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcImxhYmVsLWljb25cIiwgc3BlZWRJY29uQ29sb3JdfVxuICAgICAgICAgICAgbGFiZWw9e2Ake3NwZWVkSWNvbn1gfVxuICAgICAgICAgID48L2xhYmVsPlxuICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgeGFsaWduPXswfVxuICAgICAgICAgICAgbWFyZ2luRW5kPXs2fVxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wibGFiZWwtaWNvblwiLCBzYXZlZEljb25Db2xvcl19XG4gICAgICAgICAgICBsYWJlbD17YCR7c2F2ZWRJY29ufWB9XG4gICAgICAgICAgPjwvbGFiZWw+XG4gICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICB4YWxpZ249ezB9XG4gICAgICAgICAgICBtYXJnaW5FbmQ9ezZ9XG4gICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJsYWJlbC1pY29uXCIsIHBhc3N3b3JkSWNvbkNvbG9yXX1cbiAgICAgICAgICAgIGxhYmVsPXtgJHtwYXNzd29yZEljb259YH1cbiAgICAgICAgICA+PC9sYWJlbD5cbiAgICAgICAgPC9ib3g+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJuZXR3b3JrLWNvbm5lY3QtYnV0dG9uXCJdfVxuICAgICAgICAgIGxhYmVsPXtjb25maWd1cmF0aW9uLnRleHRzWzBdKCh0KSA9PiB0Lm5ldHdvcmsuY29ubmVjdEJ1dHRvbkxhYmVsKX1cbiAgICAgICAgICBvbkNsaWNrZWQ9e2FzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGNvbm5lY3RUb0FjY2Vzc1BvaW50KGFwKTtcbiAgICAgICAgICB9fVxuICAgICAgICA+PC9idXR0b24+XG4gICAgICA8L2JveD5cbiAgICApO1xuICB9XG5cbiAgYXN5bmMgZnVuY3Rpb24gY29ubmVjdFRvQWNjZXNzUG9pbnQoYXA6IE5ldHdvcmsuQWNjZXNzUG9pbnQpIHtcbiAgICBsZXQgcHc6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gICAgLy8gaWYoYXAucmVxdWlyZXNQYXNzd29yZCA9PT0gZmFsc2UpXG4gICAgLy8ge1xuICAgIC8vICAgbmV0d29yay5jbGllbnQuYWRkX2Nvbm5lY3Rpb25fYXN5bmMoKVxuICAgIC8vIH1cblxuICAgIGlmIChhcC5nZXRfY29ubmVjdGlvbnMoKS5sZW5ndGggPT0gMCAmJiBhcC5yZXF1aXJlc1Bhc3N3b3JkKSB7XG4gICAgICAvLyBwb3B1cCBhc2tpbmcgZm9yIHBhc3N3b3JkXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGFwLmFjdGl2YXRlKHB3LCAoXywgcmVzKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcmVzb2x2ZShhcC5hY3RpdmF0ZV9maW5pc2gocmVzKSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQmluZGluZywgY3JlYXRlU3RhdGUsIFdpdGggfSBmcm9tIFwiYWdzXCI7XG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCB7IGludGVydmFsIH0gZnJvbSBcImFncy90aW1lXCI7XG5pbXBvcnQgTmV0d29yayBmcm9tIFwiZ2k6Ly9Bc3RhbE5ldHdvcmtcIjtcbmltcG9ydCB7IGljb25zIH0gZnJvbSBcIi4uLy4uL21vZGVscy90ZXh0cy90ZXh0X2ljb25zXCI7XG5pbXBvcnQgeyByZWFkRmlsZSB9IGZyb20gXCJhZ3MvZmlsZVwiO1xuaW1wb3J0IHsgSW50ZXJuZXRTcGVlZCB9IGZyb20gXCIuL2ludGVybmV0X3NwZWVkXCI7XG5pbXBvcnQgeyBjb25maWd1cmF0aW9uIH0gZnJvbSBcIi4uLy4uL2FwcFwiO1xuXG50eXBlIE5ldHdvcmtQcm9wcyA9IHtcbiAgbmV0d29yazogTmV0d29yay5OZXR3b3JrO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIEN1cnJlbnRDb25uZWN0aW9uU3RhdHVzKHsgbmV0d29yayB9OiBOZXR3b3JrUHJvcHMpIHtcbiAgY29uc3QgcHJpbWFyeUNvbm5lY3Rpb25UeXBlID0gY3JlYXRlQmluZGluZyhuZXR3b3JrLCBcInByaW1hcnlcIik7XG4gIGNvbnN0IGRvd25sb2FkU3BlZWQgPSBjcmVhdGVTdGF0ZShuZXcgSW50ZXJuZXRTcGVlZCgpKTtcbiAgY29uc3QgdXBsb2FkU3BlZWQgPSBjcmVhdGVTdGF0ZShuZXcgSW50ZXJuZXRTcGVlZCgpKTtcblxuICBpbnRlcnZhbCgxMDAwLCB1cGRhdGVDb25uZWN0aW9uU3RhdHMpO1xuXG4gIHJldHVybiAoXG4gICAgPGJveD5cbiAgICAgIDxXaXRoIHZhbHVlPXtwcmltYXJ5Q29ubmVjdGlvblR5cGV9PlxuICAgICAgICB7KHByaW1hcnkpID0+IHtcbiAgICAgICAgICBzd2l0Y2ggKHByaW1hcnkpIHtcbiAgICAgICAgICAgIGNhc2UgTmV0d29yay5QcmltYXJ5LldJRkk6XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDdXJyZW50V2lmaShuZXR3b3JrKTtcblxuICAgICAgICAgICAgY2FzZSBOZXR3b3JrLlByaW1hcnkuV0lSRUQ6XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDdXJyZW50V2lyZWQobmV0d29yayk7XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVOb0Nvbm5lY3Rpb24oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH19XG4gICAgICA8L1dpdGg+XG4gICAgPC9ib3g+XG4gICk7XG5cbiAgZnVuY3Rpb24gY3JlYXRlQ3VycmVudFdpZmkobmV0d29yazogTmV0d29yay5OZXR3b3JrKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiY3VycmVudC1jb25uZWN0aW9uLWNvbnRhaW5lclwiXX0gaGV4cGFuZCB2ZXhwYW5kPlxuICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcImN1cnJlbnQtY29ubmVjdGlvbi1kYXRhLWNvbnRhaW5lclwiXX0gaGV4cGFuZCB2ZXhwYW5kPlxuICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiY3VycmVudC1jb25uZWN0aW9uLWljb25cIl19XG4gICAgICAgICAgICBsYWJlbD17aWNvbnMud2lmaUNvbm5lY3Rpb25NYXh9XG4gICAgICAgICAgICBtYXJnaW5FbmQ9ezIwfVxuICAgICAgICAgID48L2xhYmVsPlxuXG4gICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfSBoZXhwYW5kIHZleHBhbmQ+XG4gICAgICAgICAgICB7LyogTkFNRSAqL31cbiAgICAgICAgICAgIDxib3ggdmFsaWduPXtHdGsuQWxpZ24uU1RBUlR9PlxuICAgICAgICAgICAgICA8V2l0aCB2YWx1ZT17Y3JlYXRlQmluZGluZyhuZXR3b3JrLndpZmksIFwic3NpZFwiKX0+XG4gICAgICAgICAgICAgICAgeyhzc2lkOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgICAgICAgICAgIHhhbGlnbj17MH1cbiAgICAgICAgICAgICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiY3VycmVudC1uZXR3b3JrLWxhYmVsXCJdfVxuICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXtzc2lkfVxuICAgICAgICAgICAgICAgICAgICA+PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgPC9XaXRoPlxuICAgICAgICAgICAgPC9ib3g+XG5cbiAgICAgICAgICAgIHtjcmVhdGVEb3dubG9hZFNwZWVkKCl9XG4gICAgICAgICAgICB7Y3JlYXRlVXBsb2FkU3BlZWQoKX1cblxuICAgICAgICAgICAgey8qIFN0cmVuZ3RoICovfVxuICAgICAgICAgICAgPGJveCBoZXhwYW5kIHZleHBhbmQgaGVpZ2h0UmVxdWVzdD17MjB9IGNzcz17XCJwYWRkaW5nOiAycHggMHB4O1wifT5cbiAgICAgICAgICAgICAgPFdpdGggdmFsdWU9e2NyZWF0ZUJpbmRpbmcobmV0d29yay53aWZpLCBcInN0cmVuZ3RoXCIpfT5cbiAgICAgICAgICAgICAgICB7KHN0cmVuZ3RoOiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIDxvdmVybGF5XG4gICAgICAgICAgICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICAgICAgICAgICAgIHZleHBhbmRcbiAgICAgICAgICAgICAgICAgICAgICBuYW1lPXtcInN0cmVuZ3RoIGxldmVsYmFyIGNvbnRhaW5lclwifVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgPGxldmVsYmFyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICB2ZXhwYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJuZXR3b3JrLXN0cmVuZ3RoLWJhclwiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtzdHJlbmd0aCAvIDEwMH1cbiAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgIDxib3ggaGV4cGFuZCB2ZXhwYW5kICR0eXBlPVwib3ZlcmxheVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNzcz17XCJmb250LXNpemU6IDE0cHg7XCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmV4cGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2Ake3N0cmVuZ3RofSAlYH1cbiAgICAgICAgICAgICAgICAgICAgICAgID48L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICA8L292ZXJsYXk+XG4gICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L2JveD5cbiAgICAgIDwvYm94PlxuICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVDdXJyZW50V2lyZWQobmV0d29yazogTmV0d29yay5OZXR3b3JrKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxib3g+XG4gICAgICAgIDxXaXRoIHZhbHVlPXtjcmVhdGVCaW5kaW5nKG5ldHdvcmssIFwid2lyZWRcIil9PlxuICAgICAgICAgIHsod2lyZWQ6IE5ldHdvcmsuV2lyZWQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiY3VycmVudC1jb25uZWN0aW9uLWRhdGEtY29udGFpbmVyXCJdfSBoZXhwYW5kPlxuICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiY3VycmVudC1jb25uZWN0aW9uLWljb25cIl19XG4gICAgICAgICAgICAgICAgICBsYWJlbD17aWNvbnMud2lyZWRDb25uZWN0aW9ufVxuICAgICAgICAgICAgICAgICAgbWFyZ2luRW5kPXsyMH1cbiAgICAgICAgICAgICAgICA+PC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8Ym94IGhleHBhbmQgb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICAgICAgICAgIHhhbGlnbj17MC4wfVxuICAgICAgICAgICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcImN1cnJlbnQtbmV0d29yay1sYWJlbFwiXX1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3dpcmVkLmRldmljZS5hY3RpdmVDb25uZWN0aW9uLmlkfVxuICAgICAgICAgICAgICAgICAgPjwvbGFiZWw+XG5cbiAgICAgICAgICAgICAgICAgIHtjcmVhdGVEb3dubG9hZFNwZWVkKCl9XG4gICAgICAgICAgICAgICAgICB7Y3JlYXRlVXBsb2FkU3BlZWQoKX1cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH19XG4gICAgICAgIDwvV2l0aD5cbiAgICAgIDwvYm94PlxuICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVOb0Nvbm5lY3Rpb24oKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wiY3VycmVudC1jb25uZWN0aW9uLWNvbnRhaW5lclwiXX0gaGV4cGFuZCB2ZXhwYW5kPlxuICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcImN1cnJlbnQtY29ubmVjdGlvbi1kYXRhLWNvbnRhaW5lclwiXX0gaGV4cGFuZCB2ZXhwYW5kPlxuICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wiY3VycmVudC1jb25uZWN0aW9uLWljb25cIl19XG4gICAgICAgICAgICBsYWJlbD17aWNvbnMubm9Db25uZWN0aW9ufVxuICAgICAgICAgICAgbWFyZ2luRW5kPXsyMH1cbiAgICAgICAgICA+PC9sYWJlbD5cblxuICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0gaGV4cGFuZCB2ZXhwYW5kPlxuICAgICAgICAgICAgey8qIE5BTUUgKi99XG4gICAgICAgICAgICA8Ym94IHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0+XG4gICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICB4YWxpZ249ezAuNX1cbiAgICAgICAgICAgICAgICB5YWxpZ249ezAuNX1cbiAgICAgICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICAgICAgdmV4cGFuZFxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcImN1cnJlbnQtbmV0d29yay1sYWJlbFwiXX1cbiAgICAgICAgICAgICAgICBsYWJlbD17Y29uZmlndXJhdGlvbi5nZXRUZXh0cygpLm5ldHdvcmsubm9DdXJyZW50Q29ubmVjdGlvbn1cbiAgICAgICAgICAgICAgPjwvbGFiZWw+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC9ib3g+XG4gICAgICA8L2JveD5cbiAgICApO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlRG93bmxvYWRTcGVlZCgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGJveCB0b29sdGlwVGV4dD17Y29uZmlndXJhdGlvbi5nZXRUZXh0cygpLm5ldHdvcmsuZG93bmxvYWRTcGVlZH0+XG4gICAgICAgIDxXaXRoIHZhbHVlPXtkb3dubG9hZFNwZWVkWzBdfT5cbiAgICAgICAgICB7KHNwZWVkKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTH0+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICB4YWxpZ249ezB9XG4gICAgICAgICAgICAgICAgICBtYXJnaW5FbmQ9ezV9XG4gICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJsYWJlbC1pY29uLW5vLXBhZGRpbmdcIl19XG4gICAgICAgICAgICAgICAgICBsYWJlbD17aWNvbnMuZG93bmxvYWR9XG4gICAgICAgICAgICAgICAgPjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICB4YWxpZ249ezF9XG4gICAgICAgICAgICAgICAgICB5YWxpZ249ezAuNzV9XG4gICAgICAgICAgICAgICAgICB3aWR0aENoYXJzPXsxMX0gLy8gNiBudW1iZXIgKyA1IHVuaXRcbiAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcImxhYmVsLXRleHRcIl19XG4gICAgICAgICAgICAgICAgICBsYWJlbD17c3BlZWQuZ2V0U3BlZWQoKX1cbiAgICAgICAgICAgICAgICA+PC9sYWJlbD5cbiAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH19XG4gICAgICAgIDwvV2l0aD5cbiAgICAgIDwvYm94PlxuICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVVcGxvYWRTcGVlZCgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGJveCB0b29sdGlwVGV4dD17Y29uZmlndXJhdGlvbi5nZXRUZXh0cygpLm5ldHdvcmsudXBsb2FkU3BlZWR9PlxuICAgICAgICA8V2l0aCB2YWx1ZT17dXBsb2FkU3BlZWRbMF19PlxuICAgICAgICAgIHsoc3BlZWQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5IT1JJWk9OVEFMfT5cbiAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgIHhhbGlnbj17MH1cbiAgICAgICAgICAgICAgICAgIG1hcmdpbkVuZD17NX1cbiAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcImxhYmVsLWljb24tbm8tcGFkZGluZ1wiXX1cbiAgICAgICAgICAgICAgICAgIGxhYmVsPXtpY29ucy51cGxvYWR9XG4gICAgICAgICAgICAgICAgPjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICB4YWxpZ249ezF9XG4gICAgICAgICAgICAgICAgICB5YWxpZ249ezAuNzV9XG4gICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJsYWJlbC10ZXh0XCJdfVxuICAgICAgICAgICAgICAgICAgd2lkdGhDaGFycz17MTF9IC8vIDYgbnVtYmVyICsgNSB1bml0XG4gICAgICAgICAgICAgICAgICBsYWJlbD17c3BlZWQuZ2V0U3BlZWQoKX1cbiAgICAgICAgICAgICAgICA+PC9sYWJlbD5cbiAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH19XG4gICAgICAgIDwvV2l0aD5cbiAgICAgIDwvYm94PlxuICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVDb25uZWN0aW9uU3RhdHMoKSB7XG4gICAgLy8gQ2hlY2sgaWYgY29ubmVjdGlvbiBleGlzdHNcbiAgICBpZiAoXG4gICAgICBuZXR3b3JrLmNsaWVudCA9PSB1bmRlZmluZWQgfHxcbiAgICAgIG5ldHdvcmsuY2xpZW50LnByaW1hcnlDb25uZWN0aW9uID09IHVuZGVmaW5lZFxuICAgICkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIEdldCBpbnRlcmZhY2UgbmFtZSBlLmcuIHdsYW4wXG4gICAgbGV0IGNvbm5lY3Rpb25JbnRlcmZhY2UgPSBcIlwiO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbmV0d29yay5jbGllbnQucHJpbWFyeUNvbm5lY3Rpb24uZGV2aWNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgZGV2aWNlID0gbmV0d29yay5jbGllbnQucHJpbWFyeUNvbm5lY3Rpb24uZGV2aWNlc1tpXTtcbiAgICAgIGlmIChkZXZpY2Uuc3RhdGUgPT09IE5ldHdvcmsuRGV2aWNlU3RhdGUuQUNUSVZBVEVEKSB7XG4gICAgICAgIGNvbm5lY3Rpb25JbnRlcmZhY2UgPSBkZXZpY2UuaW50ZXJmYWNlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGNvbm5lY3Rpb25JbnRlcmZhY2UubGVuZ3RoID09PSAwKSByZXR1cm47XG5cbiAgICAvLyBHZXQgdGV4dCBsaW5lIHdpdGggY29ubmVjdGlvbiBkYXRhXG4gICAgY29uc3QgbmV0ZGV2RmlsZXBhdGggPSBcIi9wcm9jL25ldC9kZXZcIjtcbiAgICBjb25zdCBjb250ZW50ID0gcmVhZEZpbGUobmV0ZGV2RmlsZXBhdGgpO1xuXG4gICAgaWYgKGNvbnRlbnQgPT09IHVuZGVmaW5lZCB8fCBjb250ZW50Lmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuXG4gICAgY29uc3QgbGluZXMgPSBjb250ZW50LnNwbGl0KFwiXFxuXCIpO1xuXG4gICAgbGV0IGludGVyZmFjZUxpbmUgPSBcIlwiO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGluZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGxpbmUgPSBsaW5lc1tpXS50cmltU3RhcnQoKTtcbiAgICAgIGlmIChsaW5lLnN0YXJ0c1dpdGgoY29ubmVjdGlvbkludGVyZmFjZSkpIHtcbiAgICAgICAgaW50ZXJmYWNlTGluZSA9IGxpbmU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGVsZW1lbnRzOiBzdHJpbmdbXSA9IGludGVyZmFjZUxpbmUuc3BsaXQoXCI6XCIpO1xuICAgIGlmIChlbGVtZW50cy5sZW5ndGggIT09IDIpIHJldHVybjtcblxuICAgIGNvbnN0IHN0YXRzID0gZWxlbWVudHNbMV0uc3BsaXQoXCIgXCIpLmZpbHRlcigodCkgPT4gdC5sZW5ndGggPiAwKTtcbiAgICBpZiAoc3RhdHMubGVuZ3RoIDw9IDgpIHJldHVybjtcblxuICAgIGNvbnN0IGRvd25sb2FkQnl0ZXM6IG51bWJlciA9IHBhcnNlSW50KHN0YXRzWzBdLCAxMCk7XG4gICAgY29uc3QgdXBsb2FkQnl0ZXM6IG51bWJlciA9IHBhcnNlSW50KHN0YXRzWzhdLCAxMCk7XG5cbiAgICBkb3dubG9hZFNwZWVkWzFdKCh2KSA9PiB2LnVwZGF0ZShkb3dubG9hZEJ5dGVzKSk7XG4gICAgdXBsb2FkU3BlZWRbMV0oKHYpID0+IHYudXBkYXRlKHVwbG9hZEJ5dGVzKSk7XG4gIH1cbn1cbiIsICJleHBvcnQgY2xhc3MgSW50ZXJuZXRTcGVlZCB7XG4gICAgcHJpdmF0ZSBieXRlczogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIGJ5dGVzSGlzdG9yeTogbnVtYmVyW10gPSBbXTtcbiAgICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBNYXhIaXN0b3J5OiBudW1iZXIgPSA4O1xuXG4gICAgcHJpdmF0ZSBkYXRhUGVyU2Vjb25kOiBudW1iZXIgPSAwO1xuICAgIHByaXZhdGUgdW5pdDogc3RyaW5nID0gXCJCL3NcIlxuXG4gICAgcHVibGljIGdldFNwZWVkKCk6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBNYXRoLnJvdW5kKCh0aGlzLmRhdGFQZXJTZWNvbmQgKyBOdW1iZXIuRVBTSUxPTikgKiAxMDApIC8gMTAwO1xuICAgICAgICByZXR1cm4gYCR7ZGF0YX0gJHt0aGlzLnVuaXR9YDtcbiAgICB9XG5cbiAgICBwdWJsaWMgdXBkYXRlKG5ld0J5dGVzOiBudW1iZXIpOiBJbnRlcm5ldFNwZWVkIHtcbiAgICAgICAgaWYgKHRoaXMuYnl0ZXMgPiAwKSB7XG4gICAgICAgICAgICB0aGlzLmJ5dGVzSGlzdG9yeS5wdXNoKG5ld0J5dGVzIC0gdGhpcy5ieXRlcyk7XG4gICAgICAgICAgICBpZiAodGhpcy5ieXRlc0hpc3RvcnkubGVuZ3RoID4gSW50ZXJuZXRTcGVlZC5NYXhIaXN0b3J5KVxuICAgICAgICAgICAgICAgIHRoaXMuYnl0ZXNIaXN0b3J5LnNoaWZ0KCk7XG5cbiAgICAgICAgICAgIGxldCBzdW0gPSAwO1xuICAgICAgICAgICAgdGhpcy5ieXRlc0hpc3RvcnkuZm9yRWFjaChieXRlc0RhdGEgPT4ge1xuICAgICAgICAgICAgICAgIHN1bSArPSBieXRlc0RhdGE7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgY29uc3QgYXZnID0gc3VtIC8gdGhpcy5ieXRlc0hpc3RvcnkubGVuZ3RoO1xuICAgICAgICAgICAgdGhpcy5jb21wdXRlU3BlZWRBbmRVbml0KGF2Zyk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB1cGRhdGVkID0gbmV3IEludGVybmV0U3BlZWQoKTtcbiAgICAgICAgdXBkYXRlZC5ieXRlcyA9IG5ld0J5dGVzO1xuICAgICAgICB1cGRhdGVkLmJ5dGVzSGlzdG9yeSA9IHRoaXMuYnl0ZXNIaXN0b3J5O1xuICAgICAgICB1cGRhdGVkLmRhdGFQZXJTZWNvbmQgPSB0aGlzLmRhdGFQZXJTZWNvbmQ7XG4gICAgICAgIHVwZGF0ZWQudW5pdCA9IHRoaXMudW5pdDtcbiAgICAgICAgcmV0dXJuIHVwZGF0ZWQ7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjb21wdXRlU3BlZWRBbmRVbml0KGRhdGE6IG51bWJlciwgdW5pdEluZGV4OiBudW1iZXIgPSAwKSB7XG5cbiAgICAgICAgaWYgKHVuaXRJbmRleCA8IDApIHVuaXRJbmRleCA9IDA7XG5cbiAgICAgICAgY29uc3Qgc3BlZWRVbml0czogc3RyaW5nW10gPSBbXCJCL3NcIiwgXCJrQi9zXCIsIFwiTUIvc1wiLCBcIkdCL3NcIl1cbiAgICAgICAgaWYgKGRhdGEgPCAxMDAwIHx8IHVuaXRJbmRleCA9PT0gc3BlZWRVbml0cy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICB0aGlzLnVuaXQgPSBzcGVlZFVuaXRzW3VuaXRJbmRleF07XG4gICAgICAgICAgICB0aGlzLmRhdGFQZXJTZWNvbmQgPSBkYXRhO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZGF0YSAvPSAxMDAwO1xuICAgICAgICB1bml0SW5kZXgrKztcblxuICAgICAgICB0aGlzLmNvbXB1dGVTcGVlZEFuZFVuaXQoZGF0YSwgdW5pdEluZGV4KTtcbiAgICB9XG59IiwgImltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWJcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW9cIlxuaW1wb3J0IFNvdXAgZnJvbSBcImdpOi8vU291cD92ZXJzaW9uPTMuMFwiXG5cbnR5cGUgUmVzcG9uc2VUeXBlID0gXCJiYXNpY1wiIHwgXCJjb3JzXCIgfCBcImRlZmF1bHRcIiB8IFwiZXJyb3JcIiB8IFwib3BhcXVlXCIgfCBcIm9wYXF1ZXJlZGlyZWN0XCJcbmV4cG9ydCB0eXBlIEhlYWRlcnNJbml0ID0gSGVhZGVycyB8IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gfCBbc3RyaW5nLCBzdHJpbmddW11cbmV4cG9ydCB0eXBlIFJlc3BvbnNlSW5pdCA9IHtcbiAgICBoZWFkZXJzPzogSGVhZGVyc0luaXRcbiAgICBzdGF0dXM/OiBudW1iZXJcbiAgICBzdGF0dXNUZXh0Pzogc3RyaW5nXG59XG5leHBvcnQgdHlwZSBSZXF1ZXN0SW5pdCA9IHtcbiAgICBib2R5Pzogc3RyaW5nXG4gICAgaGVhZGVycz86IEhlYWRlcnNJbml0XG4gICAgbWV0aG9kPzogc3RyaW5nXG59XG5cbmV4cG9ydCBjbGFzcyBIZWFkZXJzIHtcbiAgICBwcml2YXRlIGhlYWRlcnM6IE1hcDxzdHJpbmcsIHN0cmluZ1tdPiA9IG5ldyBNYXAoKVxuXG4gICAgY29uc3RydWN0b3IoaW5pdDogSGVhZGVyc0luaXQgPSB7fSkge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShpbml0KSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBbbmFtZSwgdmFsdWVdIG9mIGluaXQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFwcGVuZChuYW1lLCB2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChpbml0IGluc3RhbmNlb2YgSGVhZGVycykge1xuICAgICAgICAgICAgaW5pdC5mb3JFYWNoKCh2YWx1ZSwgbmFtZSkgPT4gdGhpcy5zZXQobmFtZSwgdmFsdWUpKVxuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBpbml0ID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IG5hbWUgaW4gaW5pdCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0KG5hbWUsIGluaXRbbmFtZV0pXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhcHBlbmQobmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIG5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKClcbiAgICAgICAgaWYgKCF0aGlzLmhlYWRlcnMuaGFzKG5hbWUpKSB7XG4gICAgICAgICAgICB0aGlzLmhlYWRlcnMuc2V0KG5hbWUsIFtdKVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuaGVhZGVycy5nZXQobmFtZSkhLnB1c2godmFsdWUpXG4gICAgfVxuXG4gICAgZGVsZXRlKG5hbWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmhlYWRlcnMuZGVsZXRlKG5hbWUudG9Mb3dlckNhc2UoKSlcbiAgICB9XG5cbiAgICBnZXQobmFtZTogc3RyaW5nKTogc3RyaW5nIHwgbnVsbCB7XG4gICAgICAgIGNvbnN0IHZhbHVlcyA9IHRoaXMuaGVhZGVycy5nZXQobmFtZS50b0xvd2VyQ2FzZSgpKVxuICAgICAgICByZXR1cm4gdmFsdWVzID8gdmFsdWVzLmpvaW4oXCIsIFwiKSA6IG51bGxcbiAgICB9XG5cbiAgICBnZXRBbGwobmFtZTogc3RyaW5nKTogc3RyaW5nW10ge1xuICAgICAgICByZXR1cm4gdGhpcy5oZWFkZXJzLmdldChuYW1lLnRvTG93ZXJDYXNlKCkpIHx8IFtdXG4gICAgfVxuXG4gICAgaGFzKG5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5oZWFkZXJzLmhhcyhuYW1lLnRvTG93ZXJDYXNlKCkpXG4gICAgfVxuXG4gICAgc2V0KG5hbWU6IHN0cmluZywgdmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmhlYWRlcnMuc2V0KG5hbWUudG9Mb3dlckNhc2UoKSwgW3ZhbHVlXSlcbiAgICB9XG5cbiAgICBmb3JFYWNoKFxuICAgICAgICBjYWxsYmFja2ZuOiAodmFsdWU6IHN0cmluZywgbmFtZTogc3RyaW5nLCBwYXJlbnQ6IEhlYWRlcnMpID0+IHZvaWQsXG4gICAgICAgIHRoaXNBcmc/OiBhbnksXG4gICAgKTogdm9pZCB7XG4gICAgICAgIGZvciAoY29uc3QgW25hbWUsIHZhbHVlc10gb2YgdGhpcy5oZWFkZXJzLmVudHJpZXMoKSkge1xuICAgICAgICAgICAgY2FsbGJhY2tmbi5jYWxsKHRoaXNBcmcsIHZhbHVlcy5qb2luKFwiLCBcIiksIG5hbWUsIHRoaXMpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAqZW50cmllcygpOiBJdGVyYWJsZUl0ZXJhdG9yPFtzdHJpbmcsIHN0cmluZ10+IHtcbiAgICAgICAgZm9yIChjb25zdCBbbmFtZSwgdmFsdWVzXSBvZiB0aGlzLmhlYWRlcnMuZW50cmllcygpKSB7XG4gICAgICAgICAgICB5aWVsZCBbbmFtZSwgdmFsdWVzLmpvaW4oXCIsIFwiKV1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICprZXlzKCk6IEl0ZXJhYmxlSXRlcmF0b3I8c3RyaW5nPiB7XG4gICAgICAgIGZvciAoY29uc3QgbmFtZSBvZiB0aGlzLmhlYWRlcnMua2V5cygpKSB7XG4gICAgICAgICAgICB5aWVsZCBuYW1lXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAqdmFsdWVzKCk6IEl0ZXJhYmxlSXRlcmF0b3I8c3RyaW5nPiB7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWVzIG9mIHRoaXMuaGVhZGVycy52YWx1ZXMoKSkge1xuICAgICAgICAgICAgeWllbGQgdmFsdWVzLmpvaW4oXCIsIFwiKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgW1N5bWJvbC5pdGVyYXRvcl0oKTogSXRlcmFibGVJdGVyYXRvcjxbc3RyaW5nLCBzdHJpbmddPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmVudHJpZXMoKVxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFVSTFNlYXJjaFBhcmFtcyB7XG4gICAgcHJpdmF0ZSBwYXJhbXMgPSBuZXcgTWFwPHN0cmluZywgQXJyYXk8c3RyaW5nPj4oKVxuXG4gICAgY29uc3RydWN0b3IoaW5pdDogc3RyaW5nW11bXSB8IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gfCBzdHJpbmcgfCBVUkxTZWFyY2hQYXJhbXMgPSBcIlwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaW5pdCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgdGhpcy5wYXJzZVN0cmluZyhpbml0KVxuICAgICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoaW5pdCkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGluaXQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFwcGVuZChrZXksIHZhbHVlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGluaXQgaW5zdGFuY2VvZiBVUkxTZWFyY2hQYXJhbXMpIHtcbiAgICAgICAgICAgIGluaXQuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4gdGhpcy5hcHBlbmQoa2V5LCB2YWx1ZSkpXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGluaXQgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIGluaXQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldChrZXksIGluaXRba2V5XSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgcGFyc2VTdHJpbmcocXVlcnk6IHN0cmluZykge1xuICAgICAgICBxdWVyeVxuICAgICAgICAgICAgLnJlcGxhY2UoL15cXD8vLCBcIlwiKVxuICAgICAgICAgICAgLnNwbGl0KFwiJlwiKVxuICAgICAgICAgICAgLmZvckVhY2goKHBhaXIpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXBhaXIpIHJldHVyblxuICAgICAgICAgICAgICAgIGNvbnN0IFtrZXksIHZhbHVlXSA9IHBhaXIuc3BsaXQoXCI9XCIpLm1hcChkZWNvZGVVUklDb21wb25lbnQpXG4gICAgICAgICAgICAgICAgdGhpcy5hcHBlbmQoa2V5LCB2YWx1ZSA/PyBcIlwiKVxuICAgICAgICAgICAgfSlcbiAgICB9XG5cbiAgICBnZXQgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyYW1zLnNpemVcbiAgICB9XG5cbiAgICBhcHBlbmQobmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIGlmICghdGhpcy5wYXJhbXMuaGFzKG5hbWUpKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmFtcy5zZXQobmFtZSwgW10pXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYXJhbXMuZ2V0KG5hbWUpIS5wdXNoKHZhbHVlKVxuICAgIH1cblxuICAgIGRlbGV0ZShuYW1lOiBzdHJpbmcsIHZhbHVlPzogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmFtcy5kZWxldGUobmFtZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IHRoaXMucGFyYW1zLmdldChuYW1lKSB8fCBbXVxuICAgICAgICAgICAgdGhpcy5wYXJhbXMuc2V0KFxuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgdmFsdWVzLmZpbHRlcigodikgPT4gdiAhPT0gdmFsdWUpLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgaWYgKHRoaXMucGFyYW1zLmdldChuYW1lKSEubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMuZGVsZXRlKG5hbWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXQobmFtZTogc3RyaW5nKTogc3RyaW5nIHwgbnVsbCB7XG4gICAgICAgIGNvbnN0IHZhbHVlcyA9IHRoaXMucGFyYW1zLmdldChuYW1lKVxuICAgICAgICByZXR1cm4gdmFsdWVzID8gdmFsdWVzWzBdIDogbnVsbFxuICAgIH1cblxuICAgIGdldEFsbChuYW1lOiBzdHJpbmcpOiBBcnJheTxzdHJpbmc+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyYW1zLmdldChuYW1lKSB8fCBbXVxuICAgIH1cblxuICAgIGhhcyhuYW1lOiBzdHJpbmcsIHZhbHVlPzogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICAgIGlmICghdGhpcy5wYXJhbXMuaGFzKG5hbWUpKSByZXR1cm4gZmFsc2VcbiAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHJldHVybiB0cnVlXG4gICAgICAgIHJldHVybiB0aGlzLnBhcmFtcy5nZXQobmFtZSk/LmluY2x1ZGVzKHZhbHVlKSB8fCBmYWxzZVxuICAgIH1cblxuICAgIHNldChuYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5wYXJhbXMuc2V0KG5hbWUsIFt2YWx1ZV0pXG4gICAgfVxuXG4gICAgc29ydCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5wYXJhbXMgPSBuZXcgTWFwKFsuLi50aGlzLnBhcmFtcy5lbnRyaWVzKCldLnNvcnQoKSlcbiAgICB9XG5cbiAgICB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gWy4uLnRoaXMucGFyYW1zLmVudHJpZXMoKV1cbiAgICAgICAgICAgIC5mbGF0TWFwKChba2V5LCB2YWx1ZXNdKSA9PlxuICAgICAgICAgICAgICAgIHZhbHVlcy5tYXAoKHZhbHVlKSA9PiBgJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQodmFsdWUpfWApLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLmpvaW4oXCImXCIpXG4gICAgfVxuXG4gICAgZm9yRWFjaChcbiAgICAgICAgY2FsbGJhY2tmbjogKHZhbHVlOiBzdHJpbmcsIGtleTogc3RyaW5nLCBwYXJlbnQ6IFVSTFNlYXJjaFBhcmFtcykgPT4gdm9pZCxcbiAgICAgICAgdGhpc0FyZz86IGFueSxcbiAgICApOiB2b2lkIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZXNdIG9mIHRoaXMucGFyYW1zLmVudHJpZXMoKSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFja2ZuLmNhbGwodGhpc0FyZywgdmFsdWUsIGtleSwgdGhpcylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIFtTeW1ib2wuaXRlcmF0b3JdKCk6IE1hcEl0ZXJhdG9yPFtzdHJpbmcsIEFycmF5PHN0cmluZz5dPiB7XG4gICAgICAgIHJldHVybiB0aGlzLnBhcmFtcy5lbnRyaWVzKClcbiAgICB9XG59XG5cbi8vIFRPRE86IGltcGwgc2V0dGVyc1xuZXhwb3J0IGNsYXNzIFVSTCB7XG4gICAgcmVhZG9ubHkgdXJpOiBHTGliLlVyaVxuXG4gICAgcmVhZG9ubHkgc2VhcmNoUGFyYW1zOiBVUkxTZWFyY2hQYXJhbXNcblxuICAgIGNvbnN0cnVjdG9yKHVybDogc3RyaW5nIHwgVVJMLCBiYXNlPzogc3RyaW5nIHwgVVJMKSB7XG4gICAgICAgIGlmIChiYXNlKSB7XG4gICAgICAgICAgICB1cmwgPSBHTGliLlVyaS5yZXNvbHZlX3JlbGF0aXZlKFxuICAgICAgICAgICAgICAgIGJhc2UgaW5zdGFuY2VvZiBVUkwgPyBiYXNlLnRvU3RyaW5nKCkgOiBiYXNlLFxuICAgICAgICAgICAgICAgIHVybCBpbnN0YW5jZW9mIFVSTCA/IHVybC50b1N0cmluZygpIDogdXJsLFxuICAgICAgICAgICAgICAgIEdMaWIuVXJpRmxhZ3MuSEFTX1BBU1NXT1JELFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICAgIHRoaXMudXJpID0gR0xpYi5VcmkucGFyc2UoXG4gICAgICAgICAgICB1cmwgaW5zdGFuY2VvZiBVUkwgPyB1cmwudG9TdHJpbmcoKSA6IHVybCxcbiAgICAgICAgICAgIEdMaWIuVXJpRmxhZ3MuSEFTX1BBU1NXT1JELFxuICAgICAgICApXG4gICAgICAgIHRoaXMuc2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh0aGlzLnVyaS5nZXRfcXVlcnkoKSA/PyBcIlwiKVxuICAgIH1cblxuICAgIGdldCBocmVmKCk6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IHVyaSA9IEdMaWIuVXJpLmJ1aWxkX3dpdGhfdXNlcihcbiAgICAgICAgICAgIEdMaWIuVXJpRmxhZ3MuSEFTX1BBU1NXT1JELFxuICAgICAgICAgICAgdGhpcy51cmkuZ2V0X3NjaGVtZSgpLFxuICAgICAgICAgICAgdGhpcy51cmkuZ2V0X3VzZXIoKSxcbiAgICAgICAgICAgIHRoaXMudXJpLmdldF9wYXNzd29yZCgpLFxuICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgIHRoaXMudXJpLmdldF9ob3N0KCksXG4gICAgICAgICAgICB0aGlzLnVyaS5nZXRfcG9ydCgpLFxuICAgICAgICAgICAgdGhpcy51cmkuZ2V0X3BhdGgoKSxcbiAgICAgICAgICAgIHRoaXMuc2VhcmNoUGFyYW1zLnRvU3RyaW5nKCksXG4gICAgICAgICAgICB0aGlzLnVyaS5nZXRfZnJhZ21lbnQoKSxcbiAgICAgICAgKVxuXG4gICAgICAgIHJldHVybiB1cmkudG9fc3RyaW5nKClcbiAgICB9XG5cbiAgICBnZXQgb3JpZ2luKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBcIm51bGxcIiAvLyBUT0RPOlxuICAgIH1cblxuICAgIGdldCBwcm90b2NvbCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy51cmkuZ2V0X3NjaGVtZSgpICsgXCI6XCJcbiAgICB9XG5cbiAgICBnZXQgdXNlcm5hbWUoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudXJpLmdldF91c2VyKCkgPz8gXCJcIlxuICAgIH1cblxuICAgIGdldCBwYXNzd29yZCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy51cmkuZ2V0X3Bhc3N3b3JkKCkgPz8gXCJcIlxuICAgIH1cblxuICAgIGdldCBob3N0KCk6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IGhvc3QgPSB0aGlzLmhvc3RuYW1lXG4gICAgICAgIGNvbnN0IHBvcnQgPSB0aGlzLnBvcnRcbiAgICAgICAgcmV0dXJuIGhvc3QgPyBob3N0ICsgKHBvcnQgPyBcIjpcIiArIHBvcnQgOiBcIlwiKSA6IFwiXCJcbiAgICB9XG5cbiAgICBnZXQgaG9zdG5hbWUoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudXJpLmdldF9ob3N0KCkgPz8gXCJcIlxuICAgIH1cblxuICAgIGdldCBwb3J0KCk6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IHAgPSB0aGlzLnVyaS5nZXRfcG9ydCgpXG4gICAgICAgIHJldHVybiBwID49IDAgPyBwLnRvU3RyaW5nKCkgOiBcIlwiXG4gICAgfVxuXG4gICAgZ2V0IHBhdGhuYW1lKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLnVyaS5nZXRfcGF0aCgpXG4gICAgfVxuXG4gICAgZ2V0IGhhc2goKTogc3RyaW5nIHtcbiAgICAgICAgY29uc3QgZnJhZyA9IHRoaXMudXJpLmdldF9mcmFnbWVudCgpXG4gICAgICAgIHJldHVybiBmcmFnID8gXCIjXCIgKyBmcmFnIDogXCJcIlxuICAgIH1cblxuICAgIGdldCBzZWFyY2goKTogc3RyaW5nIHtcbiAgICAgICAgY29uc3QgcSA9IHRoaXMuc2VhcmNoUGFyYW1zLnRvU3RyaW5nKClcbiAgICAgICAgcmV0dXJuIHEgPyBcIj9cIiArIHEgOiBcIlwiXG4gICAgfVxuXG4gICAgdG9TdHJpbmcoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHJlZlxuICAgIH1cblxuICAgIHRvSlNPTigpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5ocmVmXG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgUmVzcG9uc2Uge1xuICAgIHJlYWRvbmx5IGJvZHk6IEdpby5JbnB1dFN0cmVhbSB8IG51bGwgPSBudWxsXG4gICAgcmVhZG9ubHkgYm9keVVzZWQ6IGJvb2xlYW4gPSBmYWxzZVxuXG4gICAgcmVhZG9ubHkgaGVhZGVyczogSGVhZGVyc1xuICAgIHJlYWRvbmx5IG9rOiBib29sZWFuXG4gICAgcmVhZG9ubHkgcmVkaXJlY3RlZDogYm9vbGVhbiA9IGZhbHNlXG4gICAgcmVhZG9ubHkgc3RhdHVzOiBudW1iZXJcbiAgICByZWFkb25seSBzdGF0dXNUZXh0OiBzdHJpbmdcbiAgICByZWFkb25seSB0eXBlOiBSZXNwb25zZVR5cGUgPSBcImRlZmF1bHRcIlxuICAgIHJlYWRvbmx5IHVybDogc3RyaW5nID0gXCJcIlxuXG4gICAgc3RhdGljIGVycm9yKCk6IFJlc3BvbnNlIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpXG4gICAgfVxuXG4gICAgc3RhdGljIGpzb24oX2RhdGE6IGFueSwgX2luaXQ/OiBSZXNwb25zZUluaXQpOiBSZXNwb25zZSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKVxuICAgIH1cblxuICAgIHN0YXRpYyByZWRpcmVjdChfdXJsOiBzdHJpbmcgfCBVUkwsIF9zdGF0dXM/OiBudW1iZXIpOiBSZXNwb25zZSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKVxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKGJvZHk6IEdpby5JbnB1dFN0cmVhbSB8IG51bGwgPSBudWxsLCBvcHRpb25zOiBSZXNwb25zZUluaXQgPSB7fSkge1xuICAgICAgICB0aGlzLmJvZHkgPSBib2R5XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IG5ldyBIZWFkZXJzKG9wdGlvbnMuaGVhZGVycyA/PyB7fSlcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBvcHRpb25zLnN0YXR1cyA/PyAyMDBcbiAgICAgICAgdGhpcy5zdGF0dXNUZXh0ID0gb3B0aW9ucy5zdGF0dXNUZXh0ID8/IFwiXCJcbiAgICAgICAgdGhpcy5vayA9IHRoaXMuc3RhdHVzID49IDIwMCAmJiB0aGlzLnN0YXR1cyA8IDMwMFxuICAgIH1cblxuICAgIGFzeW5jIGJsb2IoKTogUHJvbWlzZTxuZXZlcj4ge1xuICAgICAgICB0aHJvdyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKVxuICAgIH1cblxuICAgIGFzeW5jIGJ5dGVzKCkge1xuICAgICAgICBjb25zdCB7IENMT1NFX1NPVVJDRSwgQ0xPU0VfVEFSR0VUIH0gPSBHaW8uT3V0cHV0U3RyZWFtU3BsaWNlRmxhZ3NcbiAgICAgICAgY29uc3Qgb3V0cHV0U3RyZWFtID0gR2lvLk1lbW9yeU91dHB1dFN0cmVhbS5uZXdfcmVzaXphYmxlKClcbiAgICAgICAgaWYgKCF0aGlzLmJvZHkpIHJldHVybiBudWxsXG5cbiAgICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgb3V0cHV0U3RyZWFtLnNwbGljZV9hc3luYyhcbiAgICAgICAgICAgICAgICB0aGlzLmJvZHkhLFxuICAgICAgICAgICAgICAgIENMT1NFX1RBUkdFVCB8IENMT1NFX1NPVVJDRSxcbiAgICAgICAgICAgICAgICBHTGliLlBSSU9SSVRZX0RFRkFVTFQsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKG91dHB1dFN0cmVhbS5zcGxpY2VfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgKVxuICAgICAgICB9KVxuXG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgeyBib2R5VXNlZDogdHJ1ZSB9KVxuICAgICAgICByZXR1cm4gb3V0cHV0U3RyZWFtLnN0ZWFsX2FzX2J5dGVzKClcbiAgICB9XG5cbiAgICBhc3luYyBmb3JtRGF0YSgpOiBQcm9taXNlPG5ldmVyPiB7XG4gICAgICAgIHRocm93IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKVxuICAgIH1cblxuICAgIGFzeW5jIGFycmF5QnVmZmVyKCkge1xuICAgICAgICBjb25zdCBibG9iID0gYXdhaXQgdGhpcy5ieXRlcygpXG4gICAgICAgIGlmICghYmxvYikgcmV0dXJuIG51bGxcblxuICAgICAgICByZXR1cm4gYmxvYi50b0FycmF5KCkuYnVmZmVyXG4gICAgfVxuXG4gICAgYXN5bmMgdGV4dCgpIHtcbiAgICAgICAgY29uc3QgYmxvYiA9IGF3YWl0IHRoaXMuYnl0ZXMoKVxuICAgICAgICByZXR1cm4gYmxvYiA/IG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShibG9iLnRvQXJyYXkoKSkgOiBcIlwiXG4gICAgfVxuXG4gICAgYXN5bmMganNvbigpIHtcbiAgICAgICAgY29uc3QgdGV4dCA9IGF3YWl0IHRoaXMudGV4dCgpXG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKHRleHQpXG4gICAgfVxuXG4gICAgY2xvbmUoKTogUmVzcG9uc2Uge1xuICAgICAgICB0aHJvdyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIilcbiAgICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaCh1cmw6IHN0cmluZyB8IFVSTCwgeyBtZXRob2QsIGhlYWRlcnMsIGJvZHkgfTogUmVxdWVzdEluaXQgPSB7fSkge1xuICAgIGNvbnN0IHNlc3Npb24gPSBuZXcgU291cC5TZXNzaW9uKClcblxuICAgIGNvbnN0IG1lc3NhZ2UgPSBuZXcgU291cC5NZXNzYWdlKHtcbiAgICAgICAgbWV0aG9kOiBtZXRob2QgfHwgXCJHRVRcIixcbiAgICAgICAgdXJpOiB1cmwgaW5zdGFuY2VvZiBVUkwgPyB1cmwudXJpIDogR0xpYi5VcmkucGFyc2UodXJsLCBHTGliLlVyaUZsYWdzLk5PTkUpLFxuICAgIH0pXG5cbiAgICBpZiAoaGVhZGVycykge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhoZWFkZXJzKSlcbiAgICAgICAgICAgIG1lc3NhZ2UuZ2V0X3JlcXVlc3RfaGVhZGVycygpLmFwcGVuZChrZXksIFN0cmluZyh2YWx1ZSkpXG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBib2R5ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIG1lc3NhZ2Uuc2V0X3JlcXVlc3RfYm9keV9mcm9tX2J5dGVzKG51bGwsIG5ldyBHTGliLkJ5dGVzKG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShib2R5KSkpXG4gICAgfVxuXG4gICAgY29uc3QgaW5wdXRTdHJlYW06IEdpby5JbnB1dFN0cmVhbSA9IGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgc2Vzc2lvbi5zZW5kX2FzeW5jKG1lc3NhZ2UsIDAsIG51bGwsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShzZXNzaW9uLnNlbmRfZmluaXNoKHJlcykpXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxuXG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShpbnB1dFN0cmVhbSwge1xuICAgICAgICBzdGF0dXNUZXh0OiBtZXNzYWdlLnJlYXNvbl9waHJhc2UsXG4gICAgICAgIHN0YXR1czogbWVzc2FnZS5zdGF0dXNfY29kZSxcbiAgICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCBmZXRjaFxuIiwgImltcG9ydCB7IGljb25zIH0gZnJvbSBcIi4uLy4uL21vZGVscy90ZXh0cy90ZXh0X2ljb25zXCI7XG5cbmV4cG9ydCBjbGFzcyBXZWF0aGVyRGF0YSB7XG4gICAgcHVibGljIHRpbWU6IHN0cmluZyA9IFwiXCI7XG4gICAgcHVibGljIHRpbWUyOiBzdHJpbmcgPSBcIlwiOyAvLyBmLnEuIGRheSBuYW1lXG4gICAgcHVibGljIGlzRGF5OiBib29sZWFuID0gdHJ1ZTtcbiAgICBwdWJsaWMgY29kZTogbnVtYmVyID0gLTE7XG4gICAgcHVibGljIGljb246IHN0cmluZyA9ICcnO1xuICAgIHB1YmxpYyB0ZW1wZXJhdHVyZTogbnVtYmVyID0gMDtcbiAgICBwdWJsaWMgdGVtcGVyYXR1cmVVbml0OiBzdHJpbmcgPSAnJztcbiAgICBwdWJsaWMgcHJlY2lwaXRhdGlvblByb2JhYmlsaXR5OiBudW1iZXIgPSAwO1xuICAgIHByaXZhdGUgY3NzQ2xhc3M6IHN0cmluZyA9ICcnO1xuXG4gICAgcHVibGljIGdldENsYXNzKGZvckJ1dHRvbjogYm9vbGVhbiA9IGZhbHNlKSB7XG4gICAgICAgIHJldHVybiBmb3JCdXR0b24gPyB0aGlzLmNzc0NsYXNzIDogdGhpcy5jc3NDbGFzcy5yZXBsYWNlKCdidXR0b24nLCAnaWNvbicpO1xuICAgIH1cblxuICAgIHB1YmxpYyB1cGRhdGVTdHlsZSgpIHtcblxuICAgICAgICAvLyBEZWZhdWx0XG4gICAgICAgIHRoaXMuaWNvbiA9IHRoaXMuaXNEYXkgPyBpY29ucy5kYXlTdW4gOiBpY29ucy5uaWdodE1vb247XG4gICAgICAgIHRoaXMuY3NzQ2xhc3MgPSB0aGlzLmlzRGF5ID8gXCJ3ZWF0aGVyLWJ1dHRvbi1zdW5cIiA6IFwid2VhdGhlci1idXR0b24tbW9vblwiO1xuXG4gICAgICAgIC8vIEZyb20gbW9zdCBhbGFybWluZyB0byBsZWFzdFxuXG4gICAgICAgIC8vIFRodW5kZXJzdG9ybVxuICAgICAgICBpZiAodGhpcy5jb2RlID49IDkwKSB7XG4gICAgICAgICAgICB0aGlzLmljb24gPSB0aGlzLmlzRGF5ID8gaWNvbnMuZGF5VGh1bmRlcnN0b3JtIDogaWNvbnMubmlnaHRUaHVuZGVyc3Rvcm07XG4gICAgICAgICAgICB0aGlzLmNzc0NsYXNzID0gXCJ3ZWF0aGVyLWJ1dHRvbi10aHVuZGVyc3Rvcm1cIjtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFNub3dcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgKHRoaXMuY29kZSA+PSA3MCAmJiB0aGlzLmNvZGUgPCA4MCkgfHxcbiAgICAgICAgICAgICh0aGlzLmNvZGUgPj0gODUgJiYgdGhpcy5jb2RlIDwgOTApXG4gICAgICAgICkge1xuICAgICAgICAgICAgdGhpcy5pY29uID0gdGhpcy5pc0RheSA/IGljb25zLmRheVNub3cgOiBpY29ucy5uaWdodFNub3c7XG4gICAgICAgICAgICB0aGlzLmNzc0NsYXNzID0gXCJ3ZWF0aGVyLWJ1dHRvbi1zbm93XCI7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBSYWluXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgICh0aGlzLmNvZGUgPj0gODAgJiYgdGhpcy5jb2RlIDwgODUpIHx8XG4gICAgICAgICAgICAodGhpcy5jb2RlID49IDUwICYmIHRoaXMuY29kZSA8IDcwKVxuICAgICAgICApIHtcbiAgICAgICAgICAgIHRoaXMuaWNvbiA9IHRoaXMuaXNEYXkgPyBpY29ucy5kYXlSYWluIDogaWNvbnMubmlnaHRSYWluO1xuICAgICAgICAgICAgdGhpcy5jc3NDbGFzcyA9IFwid2VhdGhlci1idXR0b24tcmFpblwiO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gT3ZlcmNhc3RcbiAgICAgICAgaWYgKHRoaXMuY29kZSA9PT0gMykge1xuICAgICAgICAgICAgdGhpcy5pY29uID0gaWNvbnMuY2xvdWR5RnVsbDtcbiAgICAgICAgICAgIHRoaXMuY3NzQ2xhc3MgPSBcIndlYXRoZXItYnV0dG9uLWNsb3VkLWZ1bGxcIjtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFBhcnRseSBjbG91ZHlcbiAgICAgICAgaWYgKHRoaXMuY29kZSA9PT0gMikge1xuICAgICAgICAgICAgdGhpcy5pY29uID0gdGhpcy5pc0RheSA/IGljb25zLmRheUNsb3VkeU1pZCA6IGljb25zLm5pZ2h0Q2xvdWR5TWlkO1xuICAgICAgICAgICAgdGhpcy5jc3NDbGFzcyA9IFwid2VhdGhlci1idXR0b24tY2xvdWQtbWlkXCI7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDbGVhciBza3lcbiAgICAgICAgaWYgKHRoaXMuY29kZSA8PSAxKSB7XG4gICAgICAgICAgICB0aGlzLmljb24gPSB0aGlzLmlzRGF5ID8gaWNvbnMuZGF5U3VuIDogaWNvbnMubmlnaHRNb29uO1xuICAgICAgICAgICAgdGhpcy5jc3NDbGFzcyA9IHRoaXMuaXNEYXkgPyBcIndlYXRoZXItYnV0dG9uLXN1blwiIDogXCJ3ZWF0aGVyLWJ1dHRvbi1tb29uXCI7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9XG59IiwgImltcG9ydCB7IFdlYXRoZXJEYXRhIH0gZnJvbSBcIi4vd2VhdGhlcl9kYXRhXCI7XG5cbmV4cG9ydCBjbGFzcyBMb2NhbGl6YXRpb25XZWF0aGVyRGF0YSB7XG5cbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nID0gXCJcIjtcbiAgICBwdWJsaWMgaXNNYWluOiBib29sZWFuID0gZmFsc2U7XG4gICAgcHVibGljIGN1cnJlbnQ6IFdlYXRoZXJEYXRhID0gbmV3IFdlYXRoZXJEYXRhKCk7XG4gICAgcHVibGljIGhvdXJseTogV2VhdGhlckRhdGFbXSA9IFtdIGFzIFdlYXRoZXJEYXRhW107XG4gICAgcHVibGljIGRhaWx5OiBXZWF0aGVyRGF0YVtdID0gW10gYXMgV2VhdGhlckRhdGFbXTtcblxuICAgIGNvbnN0cnVjdG9yKG5hbWU6IHN0cmluZywgaXNNYWluOiBib29sZWFuKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuaXNNYWluID0gaXNNYWluO1xuICAgIH1cblxuICAgIHVwZGF0ZVdlYXRoZXIoY3VycmVudDogV2VhdGhlckRhdGEsIGhvdXJseTogV2VhdGhlckRhdGFbXSwgZGFpbHk6IFdlYXRoZXJEYXRhW10pIHtcbiAgICAgICAgdGhpcy5jdXJyZW50ID0gY3VycmVudDtcbiAgICAgICAgdGhpcy5ob3VybHkgPSBob3VybHk7XG4gICAgICAgIHRoaXMuZGFpbHkgPSBkYWlseTtcbiAgICB9XG59IiwgImltcG9ydCB7IGZldGNoIH0gZnJvbSBcImFncy9mZXRjaFwiO1xuaW1wb3J0IHsgV2VhdGhlckxvY2FsaXphdGlvbiB9IGZyb20gXCIuL3dlYXRoZXJfbG9jYWxpemF0aW9uXCI7XG5pbXBvcnQgeyBXZWF0aGVyRGF0YSB9IGZyb20gXCIuL3dlYXRoZXJfZGF0YVwiO1xuaW1wb3J0IHsgY29uZmlndXJhdGlvbiB9IGZyb20gXCIuLi8uLi9hcHBcIjtcbmltcG9ydCB7IGludGVydmFsLCBUaW1lIH0gZnJvbSBcImFncy90aW1lXCI7XG5pbXBvcnQgeyBjcmVhdGVTdGF0ZSB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCB7IExvY2FsaXphdGlvbldlYXRoZXJEYXRhIH0gZnJvbSBcIi4vbG9jYWxpemF0aW9uX3dlYXRoZXJfZGF0YVwiO1xuaW1wb3J0IHsgQ29tbXVuaWNhdGlvbiB9IGZyb20gXCIuLi8uLi9tb2RlbHMvdXRpbHMvY29tbXVuaWNhdGlvblwiO1xuaW1wb3J0IHsgaWNvbnMgfSBmcm9tIFwiLi4vLi4vbW9kZWxzL3RleHRzL3RleHRfaWNvbnNcIjtcblxuY2xhc3MgV2VhdGhlckFwaSB7XG5cbiAgICBwcml2YXRlIGxvY2FsaXphdGlvbnM6IFdlYXRoZXJMb2NhbGl6YXRpb25bXSA9IFtdO1xuICAgIHByaXZhdGUgdGVtcGVyYXR1cmVVbml0OiBzdHJpbmcgPSBcIkNcIjtcblxuICAgIHByaXZhdGUgcmVhZG9ubHkgZmV0Y2hJbnRlcnZhbFRpbWVNczogbnVtYmVyID0gNSAqIDYwXzAwMDsgLy8gRXZlcnkgNW1pblxuICAgIHByaXZhdGUgZmV0Y2hJbnRlcnZhbDogVGltZTtcblxuICAgIHB1YmxpYyBsb2NhbGl6YXRpb25XZWF0aGVycyA9IGNyZWF0ZVN0YXRlKFtdIGFzIExvY2FsaXphdGlvbldlYXRoZXJEYXRhW10pO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZmV0Y2hJbnRlcnZhbCA9IGludGVydmFsKHRoaXMuZmV0Y2hJbnRlcnZhbFRpbWVNcywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5mZXRjaERhdGEoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIGluaXQoKSB7XG5cbiAgICAgICAgY29uc3Qgd2VhdGhlckNvbmZpZyA9IGNvbmZpZ3VyYXRpb24ud2VhdGhlcjtcbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb25zID0gd2VhdGhlckNvbmZpZy5sb2NhbGl6YXRpb25zO1xuICAgICAgICB0aGlzLnRlbXBlcmF0dXJlVW5pdCA9IHdlYXRoZXJDb25maWcudGVtcGVyYXR1cmVVbml0O1xuICAgICAgICB0aGlzLmxvY2FsaXphdGlvbldlYXRoZXJzWzFdKHdlYXRoZXJDb25maWcubG9jYWxpemF0aW9ucy5tYXAobCA9PiBuZXcgTG9jYWxpemF0aW9uV2VhdGhlckRhdGEobC5uYW1lLCBsLmlzTWFpbikpKTtcbiAgICAgICAgYXdhaXQgdGhpcy5mZXRjaERhdGEoKTtcblxuICAgICAgICBjb25maWd1cmF0aW9uLndlYXRoZXJTdGF0ZVswXS5zdWJzY3JpYmUoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgY3VycmVudFN0YXRlID0gY29uZmlndXJhdGlvbi53ZWF0aGVyU3RhdGVbMF0uZ2V0KCk7XG4gICAgICAgICAgICB0aGlzLmxvY2FsaXphdGlvbnMgPSBjdXJyZW50U3RhdGUubG9jYWxpemF0aW9ucztcbiAgICAgICAgICAgIHRoaXMudGVtcGVyYXR1cmVVbml0ID0gY3VycmVudFN0YXRlLnRlbXBlcmF0dXJlVW5pdDtcbiAgICAgICAgICAgIHRoaXMubG9jYWxpemF0aW9uV2VhdGhlcnNbMV0od2VhdGhlckNvbmZpZy5sb2NhbGl6YXRpb25zLm1hcChsID0+IG5ldyBMb2NhbGl6YXRpb25XZWF0aGVyRGF0YShsLm5hbWUsIGwuaXNNYWluKSkpO1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5mZXRjaERhdGEoKTtcbiAgICAgICAgfSlcbiAgICB9XG5cblxuICAgIHByaXZhdGUgYXN5bmMgZmV0Y2hEYXRhKCkge1xuXG4gICAgICAgIGlmICh0aGlzLmxvY2FsaXphdGlvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnd2VhdGhlcl9hcGkgLSBmZXRjaERhdGEoKSAtIG5vIGxvY2FsaXphdGlvbnMnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGJhc2VVcmwgPSBcImh0dHBzOi8vYXBpLm9wZW4tbWV0ZW8uY29tL3YxL2ZvcmVjYXN0XCI7XG5cbiAgICAgICAgY29uc3QgbGF0aXR1ZGVzID0gdGhpcy5sb2NhbGl6YXRpb25zLm1hcChsID0+IGwubGF0aXR1ZGUpLmpvaW4oJywnKTtcbiAgICAgICAgY29uc3QgbG9uZ2l0dWRlcyA9IHRoaXMubG9jYWxpemF0aW9ucy5tYXAobCA9PiBsLmxvbmdpdHVkZSkuam9pbignLCcpO1xuICAgICAgICBjb25zdCBjdXJyZW50UGFyYW1zID0gXCImY3VycmVudD13ZWF0aGVyX2NvZGUsdGVtcGVyYXR1cmVfMm0scHJlY2lwaXRhdGlvbl9wcm9iYWJpbGl0eSxpc19kYXlcIjtcbiAgICAgICAgY29uc3QgaG91cmx5UGFyYW1zID0gXCImZm9yZWNhc3RfaG91cnM9MjEmcGFzdF9ob3Vycz0wJmhvdXJseT13ZWF0aGVyX2NvZGUsdGVtcGVyYXR1cmVfMm0scHJlY2lwaXRhdGlvbl9wcm9iYWJpbGl0eSxpc19kYXlcIjsgLy8gU1RBUlRTIEZST00gQ1VSUkVOVCBIT1VSXG4gICAgICAgIGNvbnN0IGRhaWx5UGFyYW1zID0gXCImZGFpbHk9d2VhdGhlcl9jb2RlLHRlbXBlcmF0dXJlXzJtX21lYW4scHJlY2lwaXRhdGlvbl9wcm9iYWJpbGl0eV9tZWFuXCI7IC8vIFNUQVJUUyBGUk9NIENVUlJFTlQgREFZXG4gICAgICAgIGxldCB0ZW1wVW5pdFBhcmFtID0gdGhpcy50ZW1wZXJhdHVyZVVuaXQgPT09ICdGJyA/ICcmdGVtcGVyYXR1cmVfdW5pdD1mYWhyZW5oZWl0JyA6ICcnO1xuICAgICAgICBjb25zdCB0aW1lem9uZSA9ICcmdGltZXpvbmU9YXV0byc7XG5cbiAgICAgICAgY29uc3QgdXJsID0gYCR7YmFzZVVybH0/bGF0aXR1ZGU9JHtsYXRpdHVkZXN9JmxvbmdpdHVkZT0ke2xvbmdpdHVkZXN9JHtjdXJyZW50UGFyYW1zfSR7aG91cmx5UGFyYW1zfSR7ZGFpbHlQYXJhbXN9JHt0ZW1wVW5pdFBhcmFtfSR7dGltZXpvbmV9YDtcblxuICAgICAgICBsZXQganNvbiA9IHVuZGVmaW5lZDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcbiAgICAgICAgICAgIGpzb24gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBDb21tdW5pY2F0aW9uLnByaW50RXJyb3IoYENhbm5vdCBmZXRjaCB3ZWF0aGVyIGRhdGE6ICR7ZXJyb3J9YCwgXCJ3ZWF0aGVyX2FwaVwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheShqc29uKSkge1xuICAgICAgICAgICAganNvbiA9IFtqc29uXTtcbiAgICAgICAgfVxuXG5cbiAgICAgICAgaWYgKGpzb24ubGVuZ3RoICE9PSB0aGlzLmxvY2FsaXphdGlvbnMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhganNvbiBsZW5ndGggKCR7anNvbi5sZW5ndGh9KSBpcyBkaWZmZXJlbnQgdGhhbiBsb2NhbGl6YXRpb25zICgke3RoaXMubG9jYWxpemF0aW9ucy5sZW5ndGh9KSBgKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGpzb24pO1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgbG9jYWxpemF0aW9uV2VhdGhlcnM6IExvY2FsaXphdGlvbldlYXRoZXJEYXRhW10gPSBbXTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGpzb24ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnQgPSB0aGlzLmNyZWF0ZUN1cnJlbnRXZWF0aGVyRGF0YShqc29uW2ldLmN1cnJlbnQpO1xuICAgICAgICAgICAgY29uc3QgaG91cmx5ID0gdGhpcy5jcmVhdGVNdWx0aXBsZVdlYXRoZXJEYXRhKGpzb25baV0uaG91cmx5KTtcbiAgICAgICAgICAgIGNvbnN0IGRhaWx5ID0gdGhpcy5jcmVhdGVNdWx0aXBsZVdlYXRoZXJEYXRhKGpzb25baV0uZGFpbHkpO1xuXG4gICAgICAgICAgICAvLyBDaGVjayBpZiBpbiBsb2NhbGl6YXRpb24gYXJyYXkgYm91bmRzXG4gICAgICAgICAgICBjb25zdCBuYW1lID0gY29uZmlndXJhdGlvbi53ZWF0aGVyLmxvY2FsaXphdGlvbnMubGVuZ3RoID4gaSA/IGNvbmZpZ3VyYXRpb24ud2VhdGhlci5sb2NhbGl6YXRpb25zW2ldLm5hbWUgOiBcIlwiO1xuICAgICAgICAgICAgY29uc3QgaXNNYWluID0gY29uZmlndXJhdGlvbi53ZWF0aGVyLmxvY2FsaXphdGlvbnMubGVuZ3RoID4gaSA/IGNvbmZpZ3VyYXRpb24ud2VhdGhlci5sb2NhbGl6YXRpb25zW2ldLmlzTWFpbiA6IGZhbHNlO1xuICAgICAgICAgICAgY29uc3QgZm9yZWNhc3QgPSBuZXcgTG9jYWxpemF0aW9uV2VhdGhlckRhdGEobmFtZSwgaXNNYWluKTtcbiAgICAgICAgICAgIGZvcmVjYXN0LnVwZGF0ZVdlYXRoZXIoY3VycmVudCwgaG91cmx5LCBkYWlseSk7XG5cbiAgICAgICAgICAgIGxvY2FsaXphdGlvbldlYXRoZXJzLnB1c2goZm9yZWNhc3QpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5sb2NhbGl6YXRpb25XZWF0aGVyc1sxXShsb2NhbGl6YXRpb25XZWF0aGVycyk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjcmVhdGVDdXJyZW50V2VhdGhlckRhdGEoanNvbkZpZWxkOiBhbnkpOiBXZWF0aGVyRGF0YSB7XG4gICAgICAgIGNvbnN0IHdlYXRoZXIgPSBuZXcgV2VhdGhlckRhdGEoKTtcbiAgICAgICAgaWYgKGpzb25GaWVsZCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgcmV0dXJuIHdlYXRoZXI7XG5cbiAgICAgICAgd2VhdGhlci50aW1lID0ganNvbkZpZWxkLnRpbWU7XG4gICAgICAgIHdlYXRoZXIuY29kZSA9IGpzb25GaWVsZC53ZWF0aGVyX2NvZGU7XG4gICAgICAgIHdlYXRoZXIuaXNEYXkgPSBqc29uRmllbGQuaXNfZGF5O1xuICAgICAgICB3ZWF0aGVyLnRlbXBlcmF0dXJlID0ganNvbkZpZWxkLnRlbXBlcmF0dXJlXzJtO1xuICAgICAgICB3ZWF0aGVyLnByZWNpcGl0YXRpb25Qcm9iYWJpbGl0eSA9IGpzb25GaWVsZC5wcmVjaXBpdGF0aW9uX3Byb2JhYmlsaXR5O1xuICAgICAgICB3ZWF0aGVyLnRlbXBlcmF0dXJlVW5pdCA9IGNvbmZpZ3VyYXRpb24ud2VhdGhlci50ZW1wZXJhdHVyZVVuaXQgPT09IFwiRlwiID8gXCJcdTAwQjBGXCIgOiBcIlx1MDBCMENcIjtcbiAgICAgICAgd2VhdGhlci51cGRhdGVTdHlsZSgpO1xuXG4gICAgICAgIHJldHVybiB3ZWF0aGVyO1xuICAgIH1cblxuICAgIHByaXZhdGUgY3JlYXRlTXVsdGlwbGVXZWF0aGVyRGF0YShqc29uRmllbGQ6IGFueSk6IFdlYXRoZXJEYXRhW10ge1xuICAgICAgICBjb25zdCB3ZWF0aGVyRm9yZWNhc3Q6IFdlYXRoZXJEYXRhW10gPSBbXTtcbiAgICAgICAgaWYgKGpzb25GaWVsZCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgcmV0dXJuIHdlYXRoZXJGb3JlY2FzdDtcblxuICAgICAgICBpZiAoanNvbkZpZWxkLndlYXRoZXJfY29kZSA9PT0gdW5kZWZpbmVkIHx8ICFBcnJheS5pc0FycmF5KGpzb25GaWVsZC53ZWF0aGVyX2NvZGUpKVxuICAgICAgICAgICAgcmV0dXJuIHdlYXRoZXJGb3JlY2FzdDtcblxuICAgICAgICBjb25zdCBsZW5ndGggPSBqc29uRmllbGQud2VhdGhlcl9jb2RlLmxlbmd0aDtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCB3ZWF0aGVyID0gbmV3IFdlYXRoZXJEYXRhKCk7XG4gICAgICAgICAgICB3ZWF0aGVyLnRpbWUgPSBqc29uRmllbGQudGltZVtpXTtcbiAgICAgICAgICAgIHdlYXRoZXIuY29kZSA9IGpzb25GaWVsZC53ZWF0aGVyX2NvZGVbaV07XG4gICAgICAgICAgICB3ZWF0aGVyLmlzRGF5ID0ganNvbkZpZWxkLmlzX2RheSAhPT0gdW5kZWZpbmVkID8ganNvbkZpZWxkLmlzX2RheVtpXSA6IDE7XG4gICAgICAgICAgICB3ZWF0aGVyLnRlbXBlcmF0dXJlID0ganNvbkZpZWxkLnRlbXBlcmF0dXJlXzJtICE9PSB1bmRlZmluZWQgPyBqc29uRmllbGQudGVtcGVyYXR1cmVfMm1baV0gOiBqc29uRmllbGQudGVtcGVyYXR1cmVfMm1fbWVhbltpXTtcbiAgICAgICAgICAgIHdlYXRoZXIucHJlY2lwaXRhdGlvblByb2JhYmlsaXR5ID0ganNvbkZpZWxkLnByZWNpcGl0YXRpb25fcHJvYmFiaWxpdHkgIT09IHVuZGVmaW5lZCA/IGpzb25GaWVsZC5wcmVjaXBpdGF0aW9uX3Byb2JhYmlsaXR5W2ldIDoganNvbkZpZWxkLnByZWNpcGl0YXRpb25fcHJvYmFiaWxpdHlfbWVhbltpXTtcbiAgICAgICAgICAgIHdlYXRoZXIudGVtcGVyYXR1cmVVbml0ID0gY29uZmlndXJhdGlvbi53ZWF0aGVyLnRlbXBlcmF0dXJlVW5pdCA9PT0gXCJGXCIgPyBcIlx1MDBCMEZcIiA6IFwiXHUwMEIwQ1wiO1xuICAgICAgICAgICAgd2VhdGhlci51cGRhdGVTdHlsZSgpO1xuICAgICAgICAgICAgd2VhdGhlckZvcmVjYXN0LnB1c2god2VhdGhlcik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gd2VhdGhlckZvcmVjYXN0O1xuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IHdlYXRoZXJBcGk6IFdlYXRoZXJBcGkgPSBuZXcgV2VhdGhlckFwaSgpOyIsICJpbXBvcnQgeyBjb25maWd1cmF0aW9uIH0gZnJvbSBcIi4uLy4uL2FwcFwiO1xuXG5leHBvcnQgY2xhc3MgRGF0ZVRvb2xzIHtcbiAgICBwdWJsaWMgc3RhdGljIGZvcm1hdERhdGUoZGF0ZTogRGF0ZSwgZm9ybWF0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgICAgICBjb25zdCB5eXl5ID0gU3RyaW5nKGRhdGUuZ2V0RnVsbFllYXIoKSk7XG4gICAgICAgIGNvbnN0IG1tID0gU3RyaW5nKGRhdGUuZ2V0TW9udGgoKSArIDEpLnBhZFN0YXJ0KDIsIFwiMFwiKTtcbiAgICAgICAgY29uc3QgZGQgPSBTdHJpbmcoZGF0ZS5nZXREYXRlKCkpLnBhZFN0YXJ0KDIsIFwiMFwiKTtcblxuICAgICAgICBmb3JtYXQgPSBmb3JtYXQudG9VcHBlckNhc2UoKTtcbiAgICAgICAgLy8gc3ByYXdkemVuaWUgY3p5IGZvcm1hdCB6YXdpZXJhIDR4WSwgMnhNIGkgMnhEXG4gICAgICAgIGNvbnN0IGlzVmFsaWRGb3JtYXQgPVxuICAgICAgICAgICAgL1lZWVkvLnRlc3QoZm9ybWF0KSAmJlxuICAgICAgICAgICAgL01NLy50ZXN0KGZvcm1hdCkgJiZcbiAgICAgICAgICAgIC9ERC8udGVzdChmb3JtYXQpO1xuXG4gICAgICAgIGlmICghaXNWYWxpZEZvcm1hdCkge1xuICAgICAgICAgICAgZm9ybWF0ID0gXCJERC1NTS1ZWVlZXCI7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZm9ybWF0XG4gICAgICAgICAgICAucmVwbGFjZShcIllZWVlcIiwgeXl5eSlcbiAgICAgICAgICAgIC5yZXBsYWNlKFwiTU1cIiwgbW0pXG4gICAgICAgICAgICAucmVwbGFjZShcIkREXCIsIGRkKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIHRvU2hvcnRGb3JtYXREYXRlKGRhdGU6IERhdGUsIGZvcm1hdDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAgICAgY29uc3QgbW0gPSBTdHJpbmcoZGF0ZS5nZXRNb250aCgpICsgMSkucGFkU3RhcnQoMiwgXCIwXCIpO1xuICAgICAgICBjb25zdCBkZCA9IFN0cmluZyhkYXRlLmdldERhdGUoKSkucGFkU3RhcnQoMiwgXCIwXCIpO1xuICAgICAgICBmb3JtYXQgPSBmb3JtYXQudG9VcHBlckNhc2UoKTtcblxuICAgICAgICAvLyBzcHJhd2R6YW15IGN6eSBmb3JtYXQgemF3aWVyYSBZWVlZLCBNTSwgRERcbiAgICAgICAgY29uc3QgaXNWYWxpZEZvcm1hdCA9XG4gICAgICAgICAgICAvWVlZWS8udGVzdChmb3JtYXQpICYmXG4gICAgICAgICAgICAvTU0vLnRlc3QoZm9ybWF0KSAmJlxuICAgICAgICAgICAgL0RELy50ZXN0KGZvcm1hdCkgJiZcbiAgICAgICAgICAgIGZvcm1hdC5sZW5ndGggPT09IDEwO1xuXG4gICAgICAgIGlmICghaXNWYWxpZEZvcm1hdCkge1xuICAgICAgICAgICAgZm9ybWF0ID0gXCJERC1NTVwiOyAvLyBmYWxsYmFja1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgeWVhckluZGV4ID0gZm9ybWF0LmluZGV4T2YoXCJZWVlZXCIpXG4gICAgICAgIGlmICh5ZWFySW5kZXggPT09IDApIHsgLy8gWVlZWSBpcyBhdCB0aGUgYmVnZ2luaW5nXG4gICAgICAgICAgICBmb3JtYXQgPSBmb3JtYXQuc2xpY2UoNik7XG4gICAgICAgIH0gZWxzZSBpZiAoeWVhckluZGV4ID09PSBmb3JtYXQubGVuZ3RoIC0gNCkgeyAvLyBZWVlZIGlzIGF0IHRoZSBlbmRcbiAgICAgICAgICAgIGZvcm1hdCA9IGZvcm1hdC5zbGljZSgwLCBmb3JtYXQubGVuZ3RoIC0gNSk7XG4gICAgICAgIH0gZWxzZSB7IC8vIFlZWVkgaXMgaW4gdGhlIG1pZGRsZT8/Pz9cbiAgICAgICAgICAgIGZvcm1hdCA9IGZvcm1hdC5yZXBsYWNlKFwiWVlZWVwiLCBcIlwiKTtcbiAgICAgICAgICAgIGZvcm1hdCA9IGZvcm1hdC5zbGljZSgwLCAzKSArIGZvcm1hdC5zbGljZSg0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmb3JtYXRcbiAgICAgICAgICAgIC5yZXBsYWNlKFwiTU1cIiwgbW0pXG4gICAgICAgICAgICAucmVwbGFjZShcIkREXCIsIGRkKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldERheU5hbWUoZGF0ZTogRGF0ZSkge1xuICAgICAgICBjb25zdCBuYW1lcyA9IGNvbmZpZ3VyYXRpb24uZ2V0VGV4dHMoKS5nZW5lcmFsLmRheXNPZldlZWs7XG4gICAgICAgIGNvbnN0IGRheUluZGV4ID0gKGRhdGUuZ2V0RGF5KCkgKyA2KSAlIDc7XG4gICAgICAgIHJldHVybiBuYW1lc1tkYXlJbmRleF07XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBmb3JtYXRUaW1lKHRpbWU6IHN0cmluZywgZm9ybWF0OiBzdHJpbmcpIHtcblxuICAgICAgICBpZiAoZm9ybWF0ID09PSBcIjI0XCIpXG4gICAgICAgICAgICByZXR1cm4gdGltZTtcblxuICAgICAgICBjb25zdCB0aW1lUGFydHMgPSB0aW1lLnNwbGl0KCc6Jyk7XG4gICAgICAgIGNvbnN0IGhvdXIgPSBwYXJzZUludCh0aW1lUGFydHNbMF0pO1xuXG4gICAgICAgIGlmIChob3VyID49IDEyKSB7XG4gICAgICAgICAgICBjb25zdCBob3VyVGV4dCA9IGAke2hvdXIgLSAxMn1gLnBhZFN0YXJ0KDIsICcwJyk7XG4gICAgICAgICAgICByZXR1cm4gYCR7aG91clRleHR9OiR7dGltZVBhcnRzWzFdfSBQTWA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBob3VyVGV4dCA9IGAke2hvdXJ9YC5wYWRTdGFydCgyLCAnMCcpO1xuICAgICAgICAgICAgcmV0dXJuIGAke2hvdXJUZXh0fToke3RpbWVQYXJ0c1sxXX0gQU1gO1xuICAgICAgICB9XG5cbiAgICB9XG59IiwgImltcG9ydCB7IEFjY2Vzc29yLCBjcmVhdGVDb21wdXRlZCwgY3JlYXRlU3RhdGUsIEZvciwgb25DbGVhbnVwIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgeyBjb25maWd1cmF0aW9uIH0gZnJvbSBcIi4uLy4uL2FwcFwiO1xuaW1wb3J0IHsgV2VhdGhlckRhdGEgfSBmcm9tIFwiLi93ZWF0aGVyX2RhdGFcIjtcbmltcG9ydCB7IHdlYXRoZXJBcGkgfSBmcm9tIFwiLi93ZWF0aGVyX2FwaVwiO1xuaW1wb3J0IHsgVG9vbHMgfSBmcm9tIFwiLi4vLi4vbW9kZWxzL3V0aWxzL3Rvb2xzXCI7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25XZWF0aGVyRGF0YSB9IGZyb20gXCIuL2xvY2FsaXphdGlvbl93ZWF0aGVyX2RhdGFcIjtcbmltcG9ydCB7IERhdGVUb29scyB9IGZyb20gXCIuLi8uLi9tb2RlbHMvdXRpbHMvZGF0ZV90b29sc1wiO1xuaW1wb3J0IHsgaWNvbnMgfSBmcm9tIFwiLi4vLi4vbW9kZWxzL3RleHRzL3RleHRfaWNvbnNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIFdlYXRoZXJQb3BvdmVyKCkge1xuICBjb25zdCBjdXJyZW50TG9jYWxpemF0aW9uID0gY3JlYXRlU3RhdGUoXCJMb2NhbGl6YXRpb25UYWIwXCIpO1xuICBjb25zdCB0YWJOYW1lVGVtcGxhdGUgPSBcIkxvY2FsaXphdGlvblRhYnswfVwiO1xuXG4gIHJldHVybiAoXG4gICAgPHBvcG92ZXJcbiAgICAgIG5hbWU9e1wiV2VhdGhlciBwb3BvdmVyXCJ9XG4gICAgICBhdXRvaGlkZVxuICAgICAgaGFzQXJyb3c9e2ZhbHNlfVxuICAgICAgY2xhc3M9e1wid2lkZ2V0LXBvcG92ZXJcIn1cbiAgICAgIG1hcmdpbkJvdHRvbT17MzB9XG4gICAgPlxuICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTH0gbWFyZ2luQm90dG9tPXsxMH0+XG4gICAgICAgICAgICA8Rm9yIGVhY2g9e3dlYXRoZXJBcGkubG9jYWxpemF0aW9uV2VhdGhlcnNbMF19PlxuICAgICAgICAgICAgICB7KFxuICAgICAgICAgICAgICAgIGxvY2FsaXphdGlvbjogTG9jYWxpemF0aW9uV2VhdGhlckRhdGEsXG4gICAgICAgICAgICAgICAgaW5kZXg6IEFjY2Vzc29yPG51bWJlcj5cbiAgICAgICAgICAgICAgKSA9PiAoXG4gICAgICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgICAgICAgIHtjcmVhdGVXZWF0aGVyU3RhY2tQYWdlQnV0dG9uKGluZGV4LmdldCgpLCBsb2NhbGl6YXRpb24pfVxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9Gb3I+XG4gICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgPGJveD5cbiAgICAgICAgICAgIDxib3g+XG4gICAgICAgICAgICAgIDxGb3IgZWFjaD17d2VhdGhlckFwaS5sb2NhbGl6YXRpb25XZWF0aGVyc1swXX0+XG4gICAgICAgICAgICAgICAgeyhcbiAgICAgICAgICAgICAgICAgIGxvY2FsaXphdGlvbjogTG9jYWxpemF0aW9uV2VhdGhlckRhdGEsXG4gICAgICAgICAgICAgICAgICBpbmRleDogQWNjZXNzb3I8bnVtYmVyPlxuICAgICAgICAgICAgICAgICkgPT4gKFxuICAgICAgICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgICAgICB2aXNpYmxlPXtjcmVhdGVDb21wdXRlZChbaW5kZXgsIGN1cnJlbnRMb2NhbGl6YXRpb25bMF1dKShcbiAgICAgICAgICAgICAgICAgICAgICAodikgPT4gVG9vbHMuZm9ybWF0U3RyaW5nKHRhYk5hbWVUZW1wbGF0ZSwgdlswXSkgPT09IHZbMV1cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLkhPUklaT05UQUx9IHNwYWNpbmc9ezEyfT5cbiAgICAgICAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9IHNwYWNpbmc9ezR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIndlYXRoZXItcGFuZWwtbGFiZWxcIl19XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXtcIkN1cnJlbnRcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgeGFsaWduPXswfVxuICAgICAgICAgICAgICAgICAgICAgICAgPjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIndlYXRoZXItcGFuZWxcIl19IHZleHBhbmQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtjcmVhdGVDdXJyZW50V2VhdGhlcihsb2NhbGl6YXRpb24pfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgICAgICAgICAgb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNwYWNpbmc9ezEyfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmV4cGFuZFxuICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxib3hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3BhY2luZz17NH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmV4cGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJ3ZWF0aGVyLXBhbmVsLWxhYmVsXCJdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXtcIkhvdXJseVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhhbGlnbj17MH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxib3hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZXhwYW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wid2VhdGhlci1wYW5lbFwiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdz17R3RrLk92ZXJmbG93LkhJRERFTn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzY3JvbGxlZHdpbmRvd1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmV4cGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluQ29udGVudEhlaWdodD17MTAwfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluQ29udGVudFdpZHRoPXsxMDB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2c2Nyb2xsYmFyUG9saWN5PXtHdGsuUG9saWN5VHlwZS5ORVZFUn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhzY3JvbGxiYXJQb2xpY3k9e0d0ay5Qb2xpY3lUeXBlLkFMV0FZU31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y3JlYXRlSG91cmx5V2VhdGhlcihsb2NhbGl6YXRpb24uaG91cmx5KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Njcm9sbGVkd2luZG93PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfSBzcGFjaW5nPXs0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wid2VhdGhlci1wYW5lbC1sYWJlbFwiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17XCJEYWlseVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhhbGlnbj17MH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wid2VhdGhlci1wYW5lbFwiXX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2NyZWF0ZURhaWx5V2VhdGhlcihsb2NhbGl6YXRpb24uZGFpbHkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDwvRm9yPlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvYm94PlxuICAgICAgPC9ib3g+XG4gICAgPC9wb3BvdmVyPlxuICApO1xuXG4gIGZ1bmN0aW9uIGNyZWF0ZVdlYXRoZXJTdGFja1BhZ2VCdXR0b24oXG4gICAgaW5kZXg6IG51bWJlcixcbiAgICBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvbldlYXRoZXJEYXRhXG4gICk6IEd0ay5CdXR0b24ge1xuICAgIGNvbnN0IGJ1dHRvbiA9IG5ldyBHdGsuQnV0dG9uKHsgaGV4cGFuZDogdHJ1ZSB9KTtcbiAgICBjb25zdCB0YWJOYW1lID0gVG9vbHMuZm9ybWF0U3RyaW5nKHRhYk5hbWVUZW1wbGF0ZSwgaW5kZXgpO1xuXG4gICAgYnV0dG9uLmxhYmVsID1cbiAgICAgIGxvY2FsaXphdGlvbi5uYW1lLmxlbmd0aCA9PT0gMFxuICAgICAgICA/IGAke2NvbmZpZ3VyYXRpb24uZ2V0VGV4dHMoKS53ZWF0aGVyLmRlZmF1bHRMb2NhdGlvbk5hbWV9ICMke1xuICAgICAgICAgICAgaW5kZXggKyAxXG4gICAgICAgICAgfWBcbiAgICAgICAgOiBsb2NhbGl6YXRpb24ubmFtZTtcblxuICAgIGN1cnJlbnRMb2NhbGl6YXRpb25bMF0uc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgIGJ1dHRvbi5jc3NDbGFzc2VzID1cbiAgICAgICAgY3VycmVudExvY2FsaXphdGlvblswXS5nZXQoKSA9PT0gdGFiTmFtZVxuICAgICAgICAgID8gW1wid2VhdGhlci1sb2NhbGl6YXRpb24tYnV0dG9uXCIsIFwid2VhdGhlci1jdXJyZW50LWxvY2FsaXphdGlvblwiXVxuICAgICAgICAgIDogW1wid2VhdGhlci1sb2NhbGl6YXRpb24tYnV0dG9uXCJdO1xuICAgIH0pO1xuXG4gICAgYnV0dG9uLmNzc0NsYXNzZXMgPVxuICAgICAgY3VycmVudExvY2FsaXphdGlvblswXS5nZXQoKSA9PT0gdGFiTmFtZVxuICAgICAgICA/IFtcIndlYXRoZXItbG9jYWxpemF0aW9uLWJ1dHRvblwiLCBcIndlYXRoZXItY3VycmVudC1sb2NhbGl6YXRpb25cIl1cbiAgICAgICAgOiBbXCJ3ZWF0aGVyLWxvY2FsaXphdGlvbi1idXR0b25cIl07XG5cbiAgICBjb25zdCBjbGlja0hhbmRsZXIgPSBidXR0b24uY29ubmVjdChcImNsaWNrZWRcIiwgKCkgPT4ge1xuICAgICAgY3VycmVudExvY2FsaXphdGlvblsxXSh0YWJOYW1lKTtcbiAgICB9KTtcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICBidXR0b24uZGlzY29ubmVjdChjbGlja0hhbmRsZXIpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGJ1dHRvbjtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUN1cnJlbnRXZWF0aGVyKFxuICAgIGxvY2FsaXphdGlvbjogTG9jYWxpemF0aW9uV2VhdGhlckRhdGFcbiAgKTogR3RrLkJveCB7XG4gICAgY29uc3QgYm94ID0gbmV3IEd0ay5Cb3goe1xuICAgICAgb3JpZW50YXRpb246IEd0ay5PcmllbnRhdGlvbi5WRVJUSUNBTCxcbiAgICAgIHZhbGlnbjogR3RrLkFsaWduLkNFTlRFUixcbiAgICB9KTtcblxuICAgIGNvbnN0IGljb25MYWJlbCA9IG5ldyBHdGsuTGFiZWwoKTtcbiAgICBpY29uTGFiZWwubGFiZWwgPSBsb2NhbGl6YXRpb24uY3VycmVudC5pY29uO1xuICAgIGljb25MYWJlbC5jc3NDbGFzc2VzID0gW1xuICAgICAgXCJjdXJyZW50LXdlYXRoZXItaWNvblwiLFxuICAgICAgbG9jYWxpemF0aW9uLmN1cnJlbnQuZ2V0Q2xhc3MoKSxcbiAgICBdO1xuICAgIGJveC5hcHBlbmQoaWNvbkxhYmVsKTtcblxuICAgIGNvbnN0IHRlbXBlcmF0dXJlTGFiZWwgPSBuZXcgR3RrLkxhYmVsKCk7XG4gICAgdGVtcGVyYXR1cmVMYWJlbC5sYWJlbCA9IGAke2xvY2FsaXphdGlvbi5jdXJyZW50LnRlbXBlcmF0dXJlfSAke2xvY2FsaXphdGlvbi5jdXJyZW50LnRlbXBlcmF0dXJlVW5pdH1gO1xuICAgIGJveC5hcHBlbmQodGVtcGVyYXR1cmVMYWJlbCk7XG5cbiAgICBjb25zdCBwcmVjaXBpdGF0aW9uTGFiZWwgPSBuZXcgR3RrLkxhYmVsKCk7XG4gICAgcHJlY2lwaXRhdGlvbkxhYmVsLmxhYmVsID0gYCR7aWNvbnMucHJlY2lwaXRhdGlvblByb2JhYmlsaXR5fSAke2xvY2FsaXphdGlvbi5jdXJyZW50LnByZWNpcGl0YXRpb25Qcm9iYWJpbGl0eX0gJWA7XG4gICAgYm94LmFwcGVuZChwcmVjaXBpdGF0aW9uTGFiZWwpO1xuXG4gICAgcmV0dXJuIGJveDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhvdXJseVdlYXRoZXIoZm9yZWNhc3Q6IFdlYXRoZXJEYXRhW10pOiBHdGsuQm94IHtcbiAgICBjb25zdCBib3ggPSBuZXcgR3RrLkJveCh7XG4gICAgICBvcmllbnRhdGlvbjogR3RrLk9yaWVudGF0aW9uLkhPUklaT05UQUwsXG4gICAgICBzcGFjaW5nOiAxMixcbiAgICAgIGNzc0NsYXNzZXM6IFtcIlwiXSxcbiAgICB9KTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZm9yZWNhc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGhvdXJCb3ggPSBuZXcgR3RrLkJveCh7XG4gICAgICAgIG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uVkVSVElDQUwsXG4gICAgICAgIGNzc0NsYXNzZXM6IFtcIndlYXRoZXItdGltZS1wYW5lbFwiXSxcbiAgICAgIH0pO1xuXG4gICAgICAvLyBUaW1lIGlzIFlZWVktTU0tRERUSEg6TU0gZm9ybWF0XG4gICAgICBjb25zdCB0aW1lUGFydHM6IHN0cmluZ1tdID0gZm9yZWNhc3RbaV0udGltZS5zcGxpdChcIlRcIik7XG4gICAgICBpZiAodGltZVBhcnRzLmxlbmd0aCA9PSAyKSB7XG4gICAgICAgIGNvbnN0IHRpbWVMYWJlbCA9IG5ldyBHdGsuTGFiZWwoKTtcbiAgICAgICAgY29uc3QgdGltZTogc3RyaW5nID0gRGF0ZVRvb2xzLmZvcm1hdFRpbWUoXG4gICAgICAgICAgdGltZVBhcnRzWzFdLFxuICAgICAgICAgIGNvbmZpZ3VyYXRpb24uZ2VuZXJhbC50aW1lRm9ybWF0XG4gICAgICAgICk7XG4gICAgICAgIHRpbWVMYWJlbC5sYWJlbCA9IGAke3RpbWV9YDtcbiAgICAgICAgaG91ckJveC5hcHBlbmQodGltZUxhYmVsKTtcbiAgICAgIH0gLy8gZWxzZSAtIHNvbWV0aGluZyB3ZWlyZCBoYXBwZW5lZFxuXG4gICAgICBjb25zdCBpY29uTGFiZWwgPSBuZXcgR3RrLkxhYmVsKCk7XG4gICAgICBpY29uTGFiZWwubGFiZWwgPSBmb3JlY2FzdFtpXS5pY29uO1xuICAgICAgaWNvbkxhYmVsLmNzc0NsYXNzZXMgPSBbXCJ3ZWF0aGVyLWljb24taG91cmx5XCIsIGZvcmVjYXN0W2ldLmdldENsYXNzKCldO1xuICAgICAgaG91ckJveC5hcHBlbmQoaWNvbkxhYmVsKTtcblxuICAgICAgY29uc3QgdGVtcGVyYXR1cmVMYWJlbCA9IG5ldyBHdGsuTGFiZWwoKTtcbiAgICAgIHRlbXBlcmF0dXJlTGFiZWwubGFiZWwgPSBgJHtmb3JlY2FzdFtpXS50ZW1wZXJhdHVyZX0gJHtmb3JlY2FzdFtpXS50ZW1wZXJhdHVyZVVuaXR9YDtcbiAgICAgIGhvdXJCb3guYXBwZW5kKHRlbXBlcmF0dXJlTGFiZWwpO1xuXG4gICAgICBjb25zdCBwcmVjaXBpdGF0aW9uTGFiZWwgPSBuZXcgR3RrLkxhYmVsKCk7XG4gICAgICBwcmVjaXBpdGF0aW9uTGFiZWwubGFiZWwgPSBgJHtpY29ucy5wcmVjaXBpdGF0aW9uUHJvYmFiaWxpdHl9ICR7Zm9yZWNhc3RbaV0ucHJlY2lwaXRhdGlvblByb2JhYmlsaXR5fSAlYDtcbiAgICAgIGhvdXJCb3guYXBwZW5kKHByZWNpcGl0YXRpb25MYWJlbCk7XG5cbiAgICAgIGJveC5hcHBlbmQoaG91ckJveCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGJveDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZURhaWx5V2VhdGhlcihmb3JlY2FzdDogV2VhdGhlckRhdGFbXSk6IEd0ay5Cb3gge1xuICAgIGNvbnN0IGJveCA9IG5ldyBHdGsuQm94KHtcbiAgICAgIG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uSE9SSVpPTlRBTCxcbiAgICAgIHNwYWNpbmc6IDYsXG4gICAgfSk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZvcmVjYXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBkYXlCb3ggPSBuZXcgR3RrLkJveCh7XG4gICAgICAgIG9yaWVudGF0aW9uOiBHdGsuT3JpZW50YXRpb24uVkVSVElDQUwsXG4gICAgICAgIGNzc0NsYXNzZXM6IFtcIndlYXRoZXItdGltZS1wYW5lbFwiXSxcbiAgICAgICAgd2lkdGhfcmVxdWVzdDogMTAwLFxuICAgICAgfSk7XG5cbiAgICAgIC8vIFRpbWUgaXMgWVlZWS1NTS1ERCBmb3JtYXRcbiAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShmb3JlY2FzdFtpXS50aW1lKTtcbiAgICAgIGNvbnN0IGRheU5hbWUgPSBuZXcgR3RrLkxhYmVsKCk7XG4gICAgICBkYXlOYW1lLmxhYmVsID0gRGF0ZVRvb2xzLmdldERheU5hbWUoZGF0ZSk7XG4gICAgICBkYXlCb3guYXBwZW5kKGRheU5hbWUpO1xuXG4gICAgICBjb25zdCBkYXRlTGFiZWwgPSBuZXcgR3RrLkxhYmVsKCk7XG4gICAgICBkYXRlTGFiZWwubGFiZWwgPSBEYXRlVG9vbHMudG9TaG9ydEZvcm1hdERhdGUoXG4gICAgICAgIGRhdGUsXG4gICAgICAgIGNvbmZpZ3VyYXRpb24uZ2VuZXJhbC5kYXRlRm9ybWF0XG4gICAgICApO1xuICAgICAgZGF5Qm94LmFwcGVuZChkYXRlTGFiZWwpO1xuXG4gICAgICBjb25zdCBpY29uTGFiZWwgPSBuZXcgR3RrLkxhYmVsKCk7XG4gICAgICBpY29uTGFiZWwubGFiZWwgPSBmb3JlY2FzdFtpXS5pY29uO1xuICAgICAgaWNvbkxhYmVsLmNzc0NsYXNzZXMgPSBbXCJ3ZWF0aGVyLWljb24tZGFpbHlcIiwgZm9yZWNhc3RbaV0uZ2V0Q2xhc3MoKV07XG4gICAgICBkYXlCb3guYXBwZW5kKGljb25MYWJlbCk7XG5cbiAgICAgIGNvbnN0IHRlbXBlcmF0dXJlTGFiZWwgPSBuZXcgR3RrLkxhYmVsKCk7XG4gICAgICB0ZW1wZXJhdHVyZUxhYmVsLmxhYmVsID0gYCR7Zm9yZWNhc3RbaV0udGVtcGVyYXR1cmV9ICR7Zm9yZWNhc3RbaV0udGVtcGVyYXR1cmVVbml0fWA7XG4gICAgICBkYXlCb3guYXBwZW5kKHRlbXBlcmF0dXJlTGFiZWwpO1xuXG4gICAgICBjb25zdCBwcmVjaXBpdGF0aW9uTGFiZWwgPSBuZXcgR3RrLkxhYmVsKCk7XG4gICAgICBwcmVjaXBpdGF0aW9uTGFiZWwubGFiZWwgPSBgJHtpY29ucy5wcmVjaXBpdGF0aW9uUHJvYmFiaWxpdHl9ICR7Zm9yZWNhc3RbaV0ucHJlY2lwaXRhdGlvblByb2JhYmlsaXR5fSAlYDtcbiAgICAgIGRheUJveC5hcHBlbmQocHJlY2lwaXRhdGlvbkxhYmVsKTtcblxuICAgICAgYm94LmFwcGVuZChkYXlCb3gpO1xuICAgIH1cblxuICAgIHJldHVybiBib3g7XG4gIH1cbn1cbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgV2l0aCB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgaWNvbnMgfSBmcm9tIFwiLi4vLi4vbW9kZWxzL3RleHRzL3RleHRfaWNvbnNcIjtcbmltcG9ydCB7IFdlYXRoZXJQb3BvdmVyIH0gZnJvbSBcIi4vd2VhdGhlcl9wb3BvdmVyXCI7XG5pbXBvcnQgeyBXZWF0aGVyTG9jYWxpemF0aW9uIH0gZnJvbSBcIi4vd2VhdGhlcl9sb2NhbGl6YXRpb25cIjtcbmltcG9ydCB7IGNvbmZpZ3VyYXRpb24gfSBmcm9tIFwiLi4vLi4vYXBwXCI7XG5pbXBvcnQgeyB3ZWF0aGVyQXBpIH0gZnJvbSBcIi4vd2VhdGhlcl9hcGlcIjtcbmltcG9ydCBQYW5nbyBmcm9tIFwiZ2k6Ly9QYW5nb1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gV2VhdGhlcigpIHtcbiAgY29uc3QgbWFpbkxvY2FsaXphdGlvbiA9IHdlYXRoZXJBcGkubG9jYWxpemF0aW9uV2VhdGhlcnNbMF0oXG4gICAgKHYpID0+IHYuZmluZCgobCkgPT4gbC5pc01haW4pID8/IHZbMF1cbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxib3g+XG4gICAgICA8bWVudWJ1dHRvbj5cbiAgICAgICAgPGJveCBjc3NDbGFzc2VzPXtbXCJ3ZWF0aGVyLWJ1dHRvblwiXX0gb3ZlcmZsb3c9e0d0ay5PdmVyZmxvdy5ISURERU59PlxuICAgICAgICAgIDxib3hcbiAgICAgICAgICAgIGhlaWdodFJlcXVlc3Q9ezIwfVxuICAgICAgICAgICAgd2lkdGhSZXF1ZXN0PXsyMH1cbiAgICAgICAgICAgIGNzc0NsYXNzZXM9e21haW5Mb2NhbGl6YXRpb24oKHYpID0+IFtcbiAgICAgICAgICAgICAgXCJ3ZWF0aGVyLWJ1dHRvbi1sYWJlbC1jb250YWluZXJcIixcbiAgICAgICAgICAgICAgdi5jdXJyZW50LmdldENsYXNzKHRydWUpLFxuICAgICAgICAgICAgXSl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGJveCBvdmVyZmxvdz17R3RrLk92ZXJmbG93LkhJRERFTn0gbWFyZ2luRW5kPXs0fT5cbiAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJ3ZWF0aGVyLWJ1dHRvbi1zdGF0dXMtbGFiZWxcIl19XG4gICAgICAgICAgICAgICAgbGFiZWw9e21haW5Mb2NhbGl6YXRpb24oKHYpID0+IHYuY3VycmVudC5pY29uKX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgICAgPFdpdGggdmFsdWU9e2NvbmZpZ3VyYXRpb24ud2VhdGhlclN0YXRlWzBdfT5cbiAgICAgICAgICAgICAgICB7KHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBpZiAoc3RhdGUuc2hvd0xvY2F0aW9uTmFtZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luRW5kPXs2fVxuICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wid2VhdGhlci1idXR0b24tbmFtZS1sYWJlbFwiXX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXttYWluTG9jYWxpemF0aW9uKCh2KSA9PiB2Lm5hbWUpfVxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICB9IGVsc2UgcmV0dXJuIDxib3g+PC9ib3g+O1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIndlYXRoZXItYnV0dG9uLXRlbXBlcmF0dXJlLWxhYmVsXCJdfVxuICAgICAgICAgICAgICBsYWJlbD17bWFpbkxvY2FsaXphdGlvbihcbiAgICAgICAgICAgICAgICAodikgPT4gYCR7di5jdXJyZW50LnRlbXBlcmF0dXJlfSAke3YuY3VycmVudC50ZW1wZXJhdHVyZVVuaXR9YFxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC9ib3g+XG4gICAgICAgIDxXZWF0aGVyUG9wb3ZlciAvPlxuICAgICAgPC9tZW51YnV0dG9uPlxuICAgIDwvYm94PlxuICApO1xuXG4gIGZ1bmN0aW9uIGNoZWNrTG9jYWxpemF0aW9ucyhsb2NhbGl6YXRpb25zOiBXZWF0aGVyTG9jYWxpemF0aW9uW10pIHtcbiAgICBjb25zdCBiYWRMb2NhbGl6YXRpb25zOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsb2NhbGl6YXRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoIWxvY2FsaXphdGlvbklzR29vZChsb2NhbGl6YXRpb25zW2ldKSkge1xuICAgICAgICBiYWRMb2NhbGl6YXRpb25zLnB1c2gobG9jYWxpemF0aW9uc1tpXS5uYW1lID8/IGBMb2NhbGl6YXRpb24gJHtpICsgMX1gKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYmFkTG9jYWxpemF0aW9ucztcbiAgfVxuXG4gIGZ1bmN0aW9uIGxvY2FsaXphdGlvbklzR29vZChsb2NhbGl6YXRpb246IFdlYXRoZXJMb2NhbGl6YXRpb24pIHtcbiAgICBpZiAoTWF0aC5hYnMobG9jYWxpemF0aW9uLmxhdGl0dWRlKSA+IDkwKSByZXR1cm4gZmFsc2U7XG5cbiAgICBpZiAoTWF0aC5hYnMobG9jYWxpemF0aW9uLmxvbmdpdHVkZSkgPiAxODApIHJldHVybiBmYWxzZTtcblxuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG4iLCAiaW1wb3J0IHtcbiAgQWNjZXNzb3IsXG4gIGNyZWF0ZUJpbmRpbmcsXG4gIGNyZWF0ZUNvbXB1dGVkLFxuICBjcmVhdGVDb25uZWN0aW9uLFxuICBjcmVhdGVTdGF0ZSxcbiAgRm9yLFxuICBvbkNsZWFudXAsXG4gIFdpdGgsXG59IGZyb20gXCJhZ3NcIjtcbmltcG9ydCB7IEFzdGFsLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIjtcbmltcG9ydCBXcCBmcm9tIFwiZ2k6Ly9Bc3RhbFdwXCI7XG5pbXBvcnQgeyBpY29ucyB9IGZyb20gXCIuLi8uLi9tb2RlbHMvdGV4dHMvdGV4dF9pY29uc1wiO1xuaW1wb3J0IEFzdGFsV3AgZnJvbSBcImdpOi8vQXN0YWxXcD92ZXJzaW9uPTAuMVwiO1xuaW1wb3J0IFBhbmdvIGZyb20gXCJnaTovL1BhbmdvP3ZlcnNpb249MS4wXCI7XG5pbXBvcnQgeyBjb25maWd1cmF0aW9uIH0gZnJvbSBcIi4uLy4uL2FwcFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gQXVkaW9NYW5hZ2VyUG9wb3ZlcigpIHtcbiAgZW51bSBUYWJOYW1lIHtcbiAgICBPVVRQVVQsXG4gICAgSU5QVVQsXG4gIH1cblxuICBjb25zdCB3cFJlYWR5ID0gY3JlYXRlU3RhdGUoZmFsc2UpO1xuICBjb25zdCB3cCA9IFdwLmdldF9kZWZhdWx0KCk7XG5cbiAgY29uc3QgY3VycmVudFRhYk5hbWUgPSBjcmVhdGVTdGF0ZShUYWJOYW1lLk9VVFBVVCk7XG4gIGNvbnN0IHRleHRzID0gY29uZmlndXJhdGlvbi5nZXRUZXh0cygpLmF1ZGlvTWFuYWdlcjtcblxuICBjb25zdCByZWFkeUhhbmRsZXIgPSB3cC5jb25uZWN0KFwicmVhZHlcIiwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwicmVhZHlcIik7XG4gICAgd3BSZWFkeVsxXSh0cnVlKTtcbiAgfSk7XG5cbiAgb25DbGVhbnVwKCgpID0+IHtcbiAgICB3cC5kaXNjb25uZWN0KHJlYWR5SGFuZGxlcik7XG4gIH0pO1xuXG4gIHJldHVybiAoXG4gICAgPHBvcG92ZXJcbiAgICAgIG5hbWU9e1wiU291bmQgc3RhdHVzIHBvcG92ZXJcIn1cbiAgICAgIGF1dG9oaWRlPXtmYWxzZX1cbiAgICAgIGhhc0Fycm93PXtmYWxzZX1cbiAgICAgIGNsYXNzPXtcIndpZGdldC1wb3BvdmVyXCJ9XG4gICAgICBtYXJnaW5FbmQ9ezYwfVxuICAgICAgbWFyZ2luQm90dG9tPXszMH1cbiAgICA+XG4gICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICA8V2l0aCB2YWx1ZT17d3BSZWFkeVswXX0+XG4gICAgICAgICAgeyhyZWFkeSkgPT4ge1xuICAgICAgICAgICAgaWYgKCFyZWFkeSkge1xuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxib3g+XG4gICAgICAgICAgICAgICAgICA8bGFiZWwgbGFiZWw9e3RleHRzLndhaXRpbmdGb3JEZXZpY2V9PjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2Ake2ljb25zLnNwZWFrZXJUYWJ9ICR7dGV4dHMub3V0cHV0fWB9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPXtjdXJyZW50VGFiTmFtZVswXSgodCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICB0ID09PSBUYWJOYW1lLk9VVFBVVFxuICAgICAgICAgICAgICAgICAgICAgICAgPyBcImF1ZGlvLWJ1dHRvbiBhY3RpdmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgOiBcImF1ZGlvLWJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICAgICAgICAgICAgb25DbGlja2VkPXsoKSA9PiBjdXJyZW50VGFiTmFtZVsxXShUYWJOYW1lLk9VVFBVVCl9XG4gICAgICAgICAgICAgICAgICA+PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsPXtgJHtpY29ucy5taWNyb3Bob25lVGFifSAke3RleHRzLmlucHV0fWB9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPXtjdXJyZW50VGFiTmFtZVswXSgodCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICB0ID09PSBUYWJOYW1lLklOUFVUXG4gICAgICAgICAgICAgICAgICAgICAgICA/IFwiYXVkaW8tYnV0dG9uIGFjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICA6IFwiYXVkaW8tYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrZWQ9eygpID0+IGN1cnJlbnRUYWJOYW1lWzFdKFRhYk5hbWUuSU5QVVQpfVxuICAgICAgICAgICAgICAgICAgPjwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgIDxib3ggd2lkdGhSZXF1ZXN0PXszMDB9IGhlaWdodFJlcXVlc3Q9ezQwMH0+XG4gICAgICAgICAgICAgICAgICA8Ym94XG4gICAgICAgICAgICAgICAgICAgIHZpc2libGU9e2N1cnJlbnRUYWJOYW1lWzBdKCh0KSA9PiB0ID09PSBUYWJOYW1lLk9VVFBVVCl9XG4gICAgICAgICAgICAgICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9XG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHtjcmVhdGVPdXRwdXRTdHJlYW1zQ3VzdG9taXphdGlvbigpfVxuICAgICAgICAgICAgICAgICAgICB7Y3JlYXRlT3V0cHV0RGV2aWNlc0N1c3RvbWl6YXRpb24oKX1cbiAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgICAgICB2aXNpYmxlPXtjdXJyZW50VGFiTmFtZVswXSgodCkgPT4gdCA9PT0gVGFiTmFtZS5JTlBVVCl9XG4gICAgICAgICAgICAgICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9XG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHtjcmVhdGVJbnB1dFN0cmVhbXNDdXN0b21pemF0aW9uKCl9XG4gICAgICAgICAgICAgICAgICAgIHtjcmVhdGVJbnB1dERldmljZXNDdXN0b21pemF0aW9uKCl9XG4gICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH19XG4gICAgICAgIDwvV2l0aD5cbiAgICAgIDwvYm94PlxuICAgIDwvcG9wb3Zlcj5cbiAgKTtcblxuICAvLyNyZWdpb24gT3V0cHV0XG4gIGZ1bmN0aW9uIGdldFZvbHVtZUljb24oaXNNdXRlZDogYm9vbGVhbiwgdm9sdW1lOiBudW1iZXIpIHtcbiAgICBpZiAoaXNNdXRlZCA9PT0gdHJ1ZSkgcmV0dXJuIGljb25zLnZvbHVtZU11dGU7XG4gICAgaWYgKHZvbHVtZSA8IDAuMykgcmV0dXJuIGljb25zLnZvbHVtZUxvdztcbiAgICBpZiAodm9sdW1lIDwgMC43KSByZXR1cm4gaWNvbnMudm9sdW1lTWlkO1xuICAgIHJldHVybiBpY29ucy52b2x1bWVIaWdoO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlT3V0cHV0U3RyZWFtc0N1c3RvbWl6YXRpb24oKSB7XG4gICAgY29uc3Qgc3RyZWFtcyA9IGNyZWF0ZUJpbmRpbmcoXG4gICAgICB3cC5hdWRpbyxcbiAgICAgIFwic3RyZWFtc1wiXG4gICAgKSgoYWxsKSA9PlxuICAgICAgYWxsXG4gICAgICAgIC5maWx0ZXIoKHMpID0+IHMubWVkaWFSb2xlICE9PSBBc3RhbFdwLk1lZGlhUm9sZS5OT1RJRklDQVRJT04pXG4gICAgICAgIC5zb3J0KChhLCBiKSA9PiBhLmlkIC0gYi5pZClcbiAgICApO1xuXG4gICAgY29uc3Qgc3BlYWtlcnMgPSBjcmVhdGVCaW5kaW5nKHdwLmF1ZGlvLCBcInNwZWFrZXJzXCIpO1xuICAgIGNvbnN0IHNwZWFrZXJzTGlzdE1vZGVsID0gc3BlYWtlcnMoXG4gICAgICAoYWxsKSA9PlxuICAgICAgICBuZXcgR3RrLlN0cmluZ0xpc3Qoe1xuICAgICAgICAgIHN0cmluZ3M6IGFsbC5tYXAoKHMpID0+IGAke3MuZGVzY3JpcHRpb259YCksXG4gICAgICAgIH0pXG4gICAgKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9IG1hcmdpblRvcD17MjB9PlxuICAgICAgICA8bGFiZWwgY3NzPXtcImZvbnQtc2l6ZTogMjhweDtcIn0gbGFiZWw9e3RleHRzLnN0cmVhbXN9PjwvbGFiZWw+XG4gICAgICAgIDxsYWJlbFxuICAgICAgICAgIGNzcz17XCJmb250LXNpemU6IDE2cHg7XCJ9XG4gICAgICAgICAgbGFiZWw9e3RleHRzLm5vU3RyZWFtc31cbiAgICAgICAgICB2aXNpYmxlPXtzdHJlYW1zKChhbGwpID0+IGFsbC5sZW5ndGggPT09IDApfVxuICAgICAgICA+PC9sYWJlbD5cbiAgICAgICAgPHNjcm9sbGVkd2luZG93XG4gICAgICAgICAgdmV4cGFuZFxuICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICBwcm9wYWdhdGVOYXR1cmFsSGVpZ2h0XG4gICAgICAgICAgbWluQ29udGVudEhlaWdodD17MjAwfVxuICAgICAgICAgIG1heENvbnRlbnRIZWlnaHQ9ezMwMH1cbiAgICAgICAgICBtaW5Db250ZW50V2lkdGg9ezEwMH1cbiAgICAgICAgICB2c2Nyb2xsYmFyUG9saWN5PXtHdGsuUG9saWN5VHlwZS5BVVRPTUFUSUN9XG4gICAgICAgICAgaHNjcm9sbGJhclBvbGljeT17R3RrLlBvbGljeVR5cGUuTkVWRVJ9XG4gICAgICAgID5cbiAgICAgICAgICA8Ym94XG4gICAgICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICAgICAgdmV4cGFuZFxuICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICAgbWFyZ2luRW5kPXszMH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8Rm9yIGVhY2g9e3N0cmVhbXN9PlxuICAgICAgICAgICAgICB7KHN0cmVhbSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG11dGUgPSBjcmVhdGVCaW5kaW5nKHN0cmVhbSwgXCJtdXRlXCIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZvbHVtZSA9IGNyZWF0ZUJpbmRpbmcoc3RyZWFtLCBcInZvbHVtZVwiKTtcbiAgICAgICAgICAgICAgICBjb25zdCBtdXRlVm9sdW1lQ29udHJvbCA9IGNyZWF0ZUNvbXB1dGVkKFttdXRlLCB2b2x1bWVdKTtcbiAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXRFbmRwb2ludCA9IGNyZWF0ZUJpbmRpbmcoc3RyZWFtLCBcInRhcmdldEVuZHBvaW50XCIpO1xuICAgICAgICAgICAgICAgIGxldCBhdXRvQ2hhbmdlID0gZmFsc2U7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPGJveFxuICAgICAgICAgICAgICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICAgICAgICAgICAgICBtYXJnaW5Ub3A9ezIwfVxuICAgICAgICAgICAgICAgICAgICB2ZXhwYW5kXG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgIHhhbGlnbj17MC4wfVxuICAgICAgICAgICAgICAgICAgICAgIHdpZHRoQ2hhcnM9ezMwfVxuICAgICAgICAgICAgICAgICAgICAgIG1heFdpZHRoQ2hhcnM9ezMwfVxuICAgICAgICAgICAgICAgICAgICAgIGVsbGlwc2l6ZT17UGFuZ28uRWxsaXBzaXplTW9kZS5FTkR9XG4gICAgICAgICAgICAgICAgICAgICAgdG9vbHRpcFRleHQ9e2Ake2NvbmZpZ3VyYXRpb24uZ2V0VGV4dHMoKS5nZW5lcmFsLm5hbWV9OiAke1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFtLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICB9XFxuJHtjb25maWd1cmF0aW9uLmdldFRleHRzKCkuZ2VuZXJhbC5kZXNjcmlwdGlvbn06ICR7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJlYW0uZGVzY3JpcHRpb25cbiAgICAgICAgICAgICAgICAgICAgICB9YH1cbiAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17YCR7c3RyZWFtLmRlc2NyaXB0aW9ufSAtICR7c3RyZWFtLm5hbWV9YH1cbiAgICAgICAgICAgICAgICAgICAgPjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxib3g+XG4gICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrZWQ9eygpID0+IHN0cmVhbS5zZXRfbXV0ZSghc3RyZWFtLm11dGUpfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxXaXRoIHZhbHVlPXttdXRlVm9sdW1lQ29udHJvbH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHsodmFsdWUpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM9e1tcInNvdW5kLWxldmVsLW11dGUtYnV0dG9uXCJdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2dldFZvbHVtZUljb24odmFsdWVbMF0sIHZhbHVlWzFdKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvV2l0aD5cbiAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICA8c2xpZGVyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZW5zaXRpdmU9e211dGUoKG0pID0+ICFtKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbj17MH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG1heD17MX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt2b2x1bWV9XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz17XCJ2b2x1bWUtc2xpZGVyXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZVZhbHVlPXsoeyB2YWx1ZSB9KSA9PiBzdHJlYW0uc2V0X3ZvbHVtZSh2YWx1ZSl9XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW5FbmQ9ezZ9XG4gICAgICAgICAgICAgICAgICAgICAgPjwvc2xpZGVyPlxuICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGhDaGFycz17M31cbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXt2b2x1bWUuYXMoKHYpID0+ICh2ICogMTAwKS50b0ZpeGVkKCkpfVxuICAgICAgICAgICAgICAgICAgICAgID48L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgICAgICAgICAgICA8V2l0aCB2YWx1ZT17dGFyZ2V0RW5kcG9pbnR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgeyh0YXJnZXQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRhcmdldCA9PSB1bmRlZmluZWQpIHRhcmdldCA9IHdwLmRlZmF1bHRTcGVha2VyO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0ID09IHVuZGVmaW5lZCkgcmV0dXJuIDxib3g+PC9ib3g+O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9DaGFuZ2UgPSB0cnVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkSW5kZXggPSBzcGVha2VycygoYWxsKSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbC5maW5kSW5kZXgoKHMpID0+IHMuaWQgPT09IHRhcmdldC5pZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IChhdXRvQ2hhbmdlID0gZmFsc2UpLCAwKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxib3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgbGFiZWw9e2Ake3RleHRzLm91dHB1dERldmljZX06YH0+PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxHdGsuRHJvcERvd25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw9e3NwZWFrZXJzTGlzdE1vZGVsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJkZXZpY2VzLWRyb3Bkb3duXCJdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZD17c2VsZWN0ZWRJbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25Ob3RpZnlTZWxlY3RlZD17KGRyb3Bkb3duLCB5KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGF1dG9DaGFuZ2UpIHJldHVybjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkID0gZHJvcGRvd24uc2VsZWN0ZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYWxsID0gc3BlYWtlcnMuZ2V0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFsbC5sZW5ndGggPD0gc2VsZWN0ZWQgfHwgc2VsZWN0ZWQgPCAwKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkRGV2aWNlID0gYWxsW3NlbGVjdGVkXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXNlbGVjdGVkRGV2aWNlKSByZXR1cm47XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJlYW0udGFyZ2V0RW5kcG9pbnQgPT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJlYW0udGFyZ2V0RW5kcG9pbnQuaWQgIT09XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkRGV2aWNlLmlkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJlYW0uc2V0X3RhcmdldF9lbmRwb2ludChzZWxlY3RlZERldmljZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvR3RrLkRyb3BEb3duPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICA8L1dpdGg+XG4gICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIDwvRm9yPlxuICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L3Njcm9sbGVkd2luZG93PlxuICAgICAgPC9ib3g+XG4gICAgKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZU91dHB1dERldmljZXNDdXN0b21pemF0aW9uKCkge1xuICAgIGNvbnN0IHNwZWFrZXJzID0gY3JlYXRlQmluZGluZyh3cC5hdWRpbywgXCJzcGVha2Vyc1wiKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8Ym94XG4gICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9XG4gICAgICAgIG1hcmdpblRvcD17MzB9XG4gICAgICAgIG1hcmdpbkJvdHRvbT17MTV9XG4gICAgICA+XG4gICAgICAgIDxsYWJlbCBjc3M9e1wiZm9udC1zaXplOiAyOHB4O1wifSBsYWJlbD17dGV4dHMuZGV2aWNlc30+PC9sYWJlbD5cbiAgICAgICAgPHNjcm9sbGVkd2luZG93XG4gICAgICAgICAgdmV4cGFuZFxuICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICBwcm9wYWdhdGVOYXR1cmFsSGVpZ2h0XG4gICAgICAgICAgbWluQ29udGVudEhlaWdodD17MTIwfVxuICAgICAgICAgIG1heENvbnRlbnRIZWlnaHQ9ezE4MH1cbiAgICAgICAgICBtaW5Db250ZW50V2lkdGg9ezEwMH1cbiAgICAgICAgICB2c2Nyb2xsYmFyUG9saWN5PXtHdGsuUG9saWN5VHlwZS5BVVRPTUFUSUN9XG4gICAgICAgICAgaHNjcm9sbGJhclBvbGljeT17R3RrLlBvbGljeVR5cGUuTkVWRVJ9XG4gICAgICAgID5cbiAgICAgICAgICA8Ym94XG4gICAgICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICAgICAgdmV4cGFuZFxuICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICAgbWFyZ2luRW5kPXszMH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8Rm9yIGVhY2g9e3NwZWFrZXJzKChzKSA9PiBzLnNvcnQoKGEsIGIpID0+IGEuaWQgLSBiLmlkKSl9PlxuICAgICAgICAgICAgICB7KHNwZWFrZXI6IEFzdGFsV3AuRW5kcG9pbnQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2b2x1bWUgPSBjcmVhdGVCaW5kaW5nKHNwZWFrZXIsIFwidm9sdW1lXCIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG11dGUgPSBjcmVhdGVCaW5kaW5nKHNwZWFrZXIsIFwibXV0ZVwiKTtcbiAgICAgICAgICAgICAgICBjb25zdCBtdXRlVm9sdW1lQ29udHJvbCA9IGNyZWF0ZUNvbXB1dGVkKFttdXRlLCB2b2x1bWVdKTtcblxuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9IG1hcmdpblRvcD17MTB9PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICB3aWR0aENoYXJzPXszMH1cbiAgICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aENoYXJzPXszMH1cbiAgICAgICAgICAgICAgICAgICAgICBlbGxpcHNpemU9e1BhbmdvLkVsbGlwc2l6ZU1vZGUuRU5EfVxuICAgICAgICAgICAgICAgICAgICAgIHRvb2x0aXBUZXh0PXtgJHtjb25maWd1cmF0aW9uLmdldFRleHRzKCkuZ2VuZXJhbC5uYW1lfTogJHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwZWFrZXIubmFtZVxuICAgICAgICAgICAgICAgICAgICAgIH1cXG4ke2NvbmZpZ3VyYXRpb24uZ2V0VGV4dHMoKS5nZW5lcmFsLmRlc2NyaXB0aW9ufTogJHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwZWFrZXIuZGVzY3JpcHRpb25cbiAgICAgICAgICAgICAgICAgICAgICB9YH1cbiAgICAgICAgICAgICAgICAgICAgICB4YWxpZ249ezB9XG4gICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2Ake3NwZWFrZXIuZGVzY3JpcHRpb259YH1cbiAgICAgICAgICAgICAgICAgICAgPjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxib3g+XG4gICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrZWQ9eygpID0+IHNwZWFrZXIuc2V0X211dGUoIXNwZWFrZXIubXV0ZSl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFdpdGggdmFsdWU9e211dGVWb2x1bWVDb250cm9sfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgeyh2YWx1ZSkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wic291bmQtbGV2ZWwtbXV0ZS1idXR0b25cIl19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17Z2V0Vm9sdW1lSWNvbih2YWx1ZVswXSwgdmFsdWVbMV0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9XaXRoPlxuICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgIDxzbGlkZXJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbnNpdGl2ZT17bXV0ZSgobSkgPT4gIW0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9e1widm9sdW1lLXNsaWRlclwifVxuICAgICAgICAgICAgICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgbWluPXswfVxuICAgICAgICAgICAgICAgICAgICAgICAgbWF4PXsxfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3ZvbHVtZS5hcygodikgPT4gTWF0aC5yb3VuZCh2ICogMTAwKSAvIDEwMCl9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZVZhbHVlPXsoeyB2YWx1ZSB9KSA9PiBzcGVha2VyLnNldF92b2x1bWUodmFsdWUpfVxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luRW5kPXs2fVxuICAgICAgICAgICAgICAgICAgICAgID48L3NsaWRlcj5cblxuICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGhDaGFycz17M31cbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXt2b2x1bWUuYXMoKHYpID0+ICh2ICogMTAwKS50b0ZpeGVkKCkpfVxuICAgICAgICAgICAgICAgICAgICAgID48L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA8L0Zvcj5cbiAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC9zY3JvbGxlZHdpbmRvdz5cbiAgICAgIDwvYm94PlxuICAgICk7XG4gIH1cbiAgLy8jZW5kcmVnaW9uXG5cbiAgLy8jcmVnaW9uIElucHV0XG4gIGZ1bmN0aW9uIGNyZWF0ZUlucHV0U3RyZWFtc0N1c3RvbWl6YXRpb24oKSB7XG4gICAgY29uc3QgcmVjb3JkZXJzID0gY3JlYXRlQmluZGluZyhcbiAgICAgIHdwLmF1ZGlvLFxuICAgICAgXCJyZWNvcmRlcnNcIlxuICAgICkoKGFsbCkgPT5cbiAgICAgIGFsbFxuICAgICAgICAuZmlsdGVyKChzKSA9PiBzLm1lZGlhUm9sZSAhPT0gQXN0YWxXcC5NZWRpYVJvbGUuTk9USUZJQ0FUSU9OKVxuICAgICAgICAuc29ydCgoYSwgYikgPT4gYS5pZCAtIGIuaWQpXG4gICAgKTtcblxuICAgIGNvbnN0IG1pY3JvcGhvbmVzID0gY3JlYXRlQmluZGluZyh3cC5hdWRpbywgXCJtaWNyb3Bob25lc1wiKTtcbiAgICBjb25zdCBtaWNyb3Bob25lc0xpc3RNb2RlbCA9IG1pY3JvcGhvbmVzKFxuICAgICAgKGFsbCkgPT5cbiAgICAgICAgbmV3IEd0ay5TdHJpbmdMaXN0KHtcbiAgICAgICAgICBzdHJpbmdzOiBhbGwubWFwKChtKSA9PiBgJHttLmRlc2NyaXB0aW9ufWApLFxuICAgICAgICB9KVxuICAgICk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfSBtYXJnaW5Ub3A9ezIwfT5cbiAgICAgICAgPGxhYmVsIGNzcz17XCJmb250LXNpemU6IDI4cHg7XCJ9IGxhYmVsPXt0ZXh0cy5yZWNvcmRzfT48L2xhYmVsPlxuICAgICAgICA8bGFiZWxcbiAgICAgICAgICBjc3M9e1wiZm9udC1zaXplOiAxNnB4O1wifVxuICAgICAgICAgIGxhYmVsPXt0ZXh0cy5ub1JlY29yZHN9XG4gICAgICAgICAgdmlzaWJsZT17cmVjb3JkZXJzKChhbGwpID0+IGFsbC5sZW5ndGggPT09IDApfVxuICAgICAgICA+PC9sYWJlbD5cbiAgICAgICAgPHNjcm9sbGVkd2luZG93XG4gICAgICAgICAgdmV4cGFuZFxuICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICBwcm9wYWdhdGVOYXR1cmFsSGVpZ2h0XG4gICAgICAgICAgbWluQ29udGVudEhlaWdodD17MjAwfVxuICAgICAgICAgIG1heENvbnRlbnRIZWlnaHQ9ezMwMH1cbiAgICAgICAgICBtaW5Db250ZW50V2lkdGg9ezEwMH1cbiAgICAgICAgICB2c2Nyb2xsYmFyUG9saWN5PXtHdGsuUG9saWN5VHlwZS5BVVRPTUFUSUN9XG4gICAgICAgICAgaHNjcm9sbGJhclBvbGljeT17R3RrLlBvbGljeVR5cGUuTkVWRVJ9XG4gICAgICAgID5cbiAgICAgICAgICA8Ym94XG4gICAgICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICAgICAgdmV4cGFuZFxuICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICAgbWFyZ2luRW5kPXszMH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8Rm9yIGVhY2g9e3JlY29yZGVyc30+XG4gICAgICAgICAgICAgIHsocmVjb3JkKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbXV0ZSA9IGNyZWF0ZUJpbmRpbmcocmVjb3JkLCBcIm11dGVcIik7XG4gICAgICAgICAgICAgICAgY29uc3Qgdm9sdW1lID0gY3JlYXRlQmluZGluZyhyZWNvcmQsIFwidm9sdW1lXCIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldEVuZHBvaW50ID0gY3JlYXRlQmluZGluZyhyZWNvcmQsIFwidGFyZ2V0RW5kcG9pbnRcIik7XG4gICAgICAgICAgICAgICAgbGV0IGF1dG9DaGFuZ2UgPSBmYWxzZTtcblxuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9IG1hcmdpblRvcD17MjB9PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICB4YWxpZ249ezAuMH1cbiAgICAgICAgICAgICAgICAgICAgICB3aWR0aENoYXJzPXszMH1cbiAgICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aENoYXJzPXszMH1cbiAgICAgICAgICAgICAgICAgICAgICBlbGxpcHNpemU9e1BhbmdvLkVsbGlwc2l6ZU1vZGUuRU5EfVxuICAgICAgICAgICAgICAgICAgICAgIHRvb2x0aXBUZXh0PXtgJHtjb25maWd1cmF0aW9uLmdldFRleHRzKCkuZ2VuZXJhbC5uYW1lfTogJHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgfVxcbiR7Y29uZmlndXJhdGlvbi5nZXRUZXh0cygpLmdlbmVyYWwuZGVzY3JpcHRpb259OiAke1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3JkLmRlc2NyaXB0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2Ake3JlY29yZC5kZXNjcmlwdGlvbn0gLSAke3JlY29yZC5uYW1lfWB9XG4gICAgICAgICAgICAgICAgICAgID48L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8Ym94PlxuICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGlja2VkPXsoKSA9PiByZWNvcmQuc2V0X211dGUoIXJlY29yZC5tdXRlKX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wic291bmQtbGV2ZWwtbXV0ZS1idXR0b25cIl19XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXttdXRlKChtKSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG0gPT09IHRydWUgPyBpY29ucy5taWNyb3Bob25lTXV0ZSA6IGljb25zLm1pY3JvcGhvbmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgID48L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgIDxzbGlkZXJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbnNpdGl2ZT17bXV0ZSgobSkgPT4gIW0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9e1widm9sdW1lLXNsaWRlclwifVxuICAgICAgICAgICAgICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgbWluPXswfVxuICAgICAgICAgICAgICAgICAgICAgICAgbWF4PXsxfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3ZvbHVtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlVmFsdWU9eyh7IHZhbHVlIH0pID0+IHJlY29yZC5zZXRfdm9sdW1lKHZhbHVlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbkVuZD17Nn1cbiAgICAgICAgICAgICAgICAgICAgICA+PC9zbGlkZXI+XG4gICAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aENoYXJzPXszfVxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3ZvbHVtZS5hcygodikgPT4gKHYgKiAxMDApLnRvRml4ZWQoKSl9XG4gICAgICAgICAgICAgICAgICAgICAgPjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICA8Ym94PlxuICAgICAgICAgICAgICAgICAgICAgIDxXaXRoIHZhbHVlPXt0YXJnZXRFbmRwb2ludH0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7KHRhcmdldCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0ID09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQgPSB3cC5kZWZhdWx0TWljcm9waG9uZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRhcmdldCA9PSB1bmRlZmluZWQpIHJldHVybiA8Ym94PjwvYm94PjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvQ2hhbmdlID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RlZEluZGV4ID0gbWljcm9waG9uZXMoKGFsbCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGwuZmluZEluZGV4KChzKSA9PiBzLmlkID09PSB0YXJnZXQuaWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiAoYXV0b0NoYW5nZSA9IGZhbHNlKSwgMCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Ym94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGxhYmVsPXtgJHt0ZXh0cy5pbnB1dERldmljZX06YH0+PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxHdGsuRHJvcERvd25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw9e21pY3JvcGhvbmVzTGlzdE1vZGVsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbXCJkZXZpY2VzLWRyb3Bkb3duXCJdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZD17c2VsZWN0ZWRJbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25Ob3RpZnlTZWxlY3RlZD17KGRyb3Bkb3duLCB5KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGF1dG9DaGFuZ2UpIHJldHVybjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkID0gZHJvcGRvd24uc2VsZWN0ZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYWxsID0gbWljcm9waG9uZXMuZ2V0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFsbC5sZW5ndGggPD0gc2VsZWN0ZWQgfHwgc2VsZWN0ZWQgPCAwKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkRGV2aWNlID0gYWxsW3NlbGVjdGVkXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXNlbGVjdGVkRGV2aWNlKSByZXR1cm47XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWNvcmQudGFyZ2V0RW5kcG9pbnQgPT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWNvcmQudGFyZ2V0RW5kcG9pbnQuaWQgIT09XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkRGV2aWNlLmlkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWNvcmQuc2V0X3RhcmdldF9lbmRwb2ludChzZWxlY3RlZERldmljZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvR3RrLkRyb3BEb3duPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICA8L1dpdGg+XG4gICAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIDwvRm9yPlxuICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L3Njcm9sbGVkd2luZG93PlxuICAgICAgPC9ib3g+XG4gICAgKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUlucHV0RGV2aWNlc0N1c3RvbWl6YXRpb24oKSB7XG4gICAgY29uc3QgbWljcm9waG9uZXMgPSBjcmVhdGVCaW5kaW5nKHdwLmF1ZGlvLCBcIm1pY3JvcGhvbmVzXCIpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxib3hcbiAgICAgICAgb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH1cbiAgICAgICAgbWFyZ2luVG9wPXszMH1cbiAgICAgICAgbWFyZ2luQm90dG9tPXsxNX1cbiAgICAgID5cbiAgICAgICAgPGxhYmVsIGNzcz17XCJmb250LXNpemU6IDI4cHg7XCJ9IGxhYmVsPXt0ZXh0cy5kZXZpY2VzfT48L2xhYmVsPlxuICAgICAgICA8c2Nyb2xsZWR3aW5kb3dcbiAgICAgICAgICB2ZXhwYW5kXG4gICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgIHByb3BhZ2F0ZU5hdHVyYWxIZWlnaHRcbiAgICAgICAgICBtaW5Db250ZW50SGVpZ2h0PXsxMjB9XG4gICAgICAgICAgbWF4Q29udGVudEhlaWdodD17MTgwfVxuICAgICAgICAgIG1pbkNvbnRlbnRXaWR0aD17MTAwfVxuICAgICAgICAgIHZzY3JvbGxiYXJQb2xpY3k9e0d0ay5Qb2xpY3lUeXBlLkFVVE9NQVRJQ31cbiAgICAgICAgICBoc2Nyb2xsYmFyUG9saWN5PXtHdGsuUG9saWN5VHlwZS5ORVZFUn1cbiAgICAgICAgPlxuICAgICAgICAgIDxib3hcbiAgICAgICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9XG4gICAgICAgICAgICB2ZXhwYW5kXG4gICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICBtYXJnaW5FbmQ9ezMwfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxGb3IgZWFjaD17bWljcm9waG9uZXMoKHMpID0+IHMuc29ydCgoYSwgYikgPT4gYS5pZCAtIGIuaWQpKX0+XG4gICAgICAgICAgICAgIHsoc3BlYWtlcjogQXN0YWxXcC5FbmRwb2ludCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZvbHVtZSA9IGNyZWF0ZUJpbmRpbmcoc3BlYWtlciwgXCJ2b2x1bWVcIik7XG4gICAgICAgICAgICAgICAgY29uc3QgbXV0ZSA9IGNyZWF0ZUJpbmRpbmcoc3BlYWtlciwgXCJtdXRlXCIpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0gbWFyZ2luVG9wPXsyMH0+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgIHdpZHRoQ2hhcnM9ezMwfVxuICAgICAgICAgICAgICAgICAgICAgIG1heFdpZHRoQ2hhcnM9ezMwfVxuICAgICAgICAgICAgICAgICAgICAgIGVsbGlwc2l6ZT17UGFuZ28uRWxsaXBzaXplTW9kZS5FTkR9XG4gICAgICAgICAgICAgICAgICAgICAgdG9vbHRpcFRleHQ9e2Ake2NvbmZpZ3VyYXRpb24uZ2V0VGV4dHMoKS5nZW5lcmFsLm5hbWV9OiAke1xuICAgICAgICAgICAgICAgICAgICAgICAgc3BlYWtlci5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgfVxcbiR7Y29uZmlndXJhdGlvbi5nZXRUZXh0cygpLmdlbmVyYWwuZGVzY3JpcHRpb259OiAke1xuICAgICAgICAgICAgICAgICAgICAgICAgc3BlYWtlci5kZXNjcmlwdGlvblxuICAgICAgICAgICAgICAgICAgICAgIH1gfVxuICAgICAgICAgICAgICAgICAgICAgIHhhbGlnbj17MH1cbiAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17YCR7c3BlYWtlci5kZXNjcmlwdGlvbn1gfVxuICAgICAgICAgICAgICAgICAgICA+PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPGJveD5cbiAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2tlZD17KCkgPT4gc3BlYWtlci5zZXRfbXV0ZSghc3BlYWtlci5tdXRlKX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzQ2xhc3Nlcz17W1wic291bmQtbGV2ZWwtbXV0ZS1idXR0b25cIl19XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXttdXRlKChtKSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG0gPT09IHRydWUgPyBpY29ucy5taWNyb3Bob25lTXV0ZSA6IGljb25zLm1pY3JvcGhvbmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgID48L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgIDxzbGlkZXJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbnNpdGl2ZT17bXV0ZSgobSkgPT4gIW0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgaGV4cGFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9e1widm9sdW1lLXNsaWRlclwifVxuICAgICAgICAgICAgICAgICAgICAgICAgbWluPXswfVxuICAgICAgICAgICAgICAgICAgICAgICAgbWF4PXsxfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3ZvbHVtZS5hcygodikgPT4gTWF0aC5yb3VuZCh2ICogMTAwKSAvIDEwMCl9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZVZhbHVlPXsoeyB2YWx1ZSB9KSA9PiBzcGVha2VyLnNldF92b2x1bWUodmFsdWUpfVxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luRW5kPXs2fVxuICAgICAgICAgICAgICAgICAgICAgID48L3NsaWRlcj5cblxuICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGhDaGFycz17M31cbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXt2b2x1bWUuYXMoKHYpID0+ICh2ICogMTAwKS50b0ZpeGVkKCkpfVxuICAgICAgICAgICAgICAgICAgICAgID48L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICAgICAgICAgIDwvYm94PlxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA8L0Zvcj5cbiAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC9zY3JvbGxlZHdpbmRvdz5cbiAgICAgIDwvYm94PlxuICAgICk7XG4gIH1cbiAgLy8jZW5kcmVnaW9uXG59XG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IsIGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZVN0YXRlLCBXaXRoIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgeyBUb29scyB9IGZyb20gXCIuLi8uLi9tb2RlbHMvdXRpbHMvdG9vbHNcIjtcbmltcG9ydCB7IEF1ZGlvTWFuYWdlclBvcG92ZXIgfSBmcm9tIFwiLi9hdWRpb19tYW5hZ2VyX3BvcG92ZXJcIjtcbmltcG9ydCB7IGljb25zIH0gZnJvbSBcIi4uLy4uL21vZGVscy90ZXh0cy90ZXh0X2ljb25zXCI7XG5pbXBvcnQgV3AgZnJvbSBcImdpOi8vQXN0YWxXcFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gQXVkaW9NYW5hZ2VyKCkge1xuICBjb25zdCB3cCA9IFdwLmdldF9kZWZhdWx0KCk7XG4gIGNvbnN0IGRlZmF1bHRfc3BlYWtlciA9IHdwLmF1ZGlvLmRlZmF1bHRfc3BlYWtlcjtcbiAgbGV0IHN5c3RlbVZvbHVtZTogQWNjZXNzb3I8bnVtYmVyPiA9IGNyZWF0ZUJpbmRpbmcoZGVmYXVsdF9zcGVha2VyLCBcInZvbHVtZVwiKTtcblxuICB3cC5jb25uZWN0KFwicmVhZHlcIiwgKCkgPT4ge1xuICAgIHN5c3RlbVZvbHVtZSA9IGNyZWF0ZUJpbmRpbmcoZGVmYXVsdF9zcGVha2VyLCBcInZvbHVtZVwiKTtcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8bWVudWJ1dHRvbj5cbiAgICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wic291bmQtc3RhdHVzLWJ1dHRvblwiXX0gb3ZlcmZsb3c9e0d0ay5PdmVyZmxvdy5ISURERU59PlxuICAgICAgICA8V2l0aCB2YWx1ZT17c3lzdGVtVm9sdW1lfT57KHZvbHVtZSkgPT4gY3JlYXRlTGFiZWwodm9sdW1lKX08L1dpdGg+XG4gICAgICA8L2JveD5cbiAgICAgIDxBdWRpb01hbmFnZXJQb3BvdmVyIC8+XG4gICAgPC9tZW51YnV0dG9uPlxuICApO1xuXG4gIGZ1bmN0aW9uIGNyZWF0ZUxhYmVsKHZvbHVtZTogbnVtYmVyKSB7XG4gICAgY29uc3Qgdm9sdW1lSW50ID0gKHZvbHVtZSAqIDEwMCkudG9GaXhlZCgpO1xuXG4gICAgaWYgKHZvbHVtZSA8IDAuMylcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxib3g+XG4gICAgICAgICAgPGxhYmVsIGNsYXNzPXtcImJhci1idXR0b24tbGFiZWxcIn0gbGFiZWw9e2Ake2ljb25zLnZvbHVtZUxvd31gfSAvPlxuICAgICAgICAgIDxsYWJlbCBsYWJlbD17dm9sdW1lSW50fT48L2xhYmVsPlxuICAgICAgICA8L2JveD5cbiAgICAgICk7XG5cbiAgICBpZiAodm9sdW1lIDwgMC43KVxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGJveD5cbiAgICAgICAgICA8bGFiZWwgY2xhc3M9e1wiYmFyLWJ1dHRvbi1sYWJlbFwifSBsYWJlbD17YCR7aWNvbnMudm9sdW1lTWlkfWB9IC8+XG4gICAgICAgICAgPGxhYmVsIGxhYmVsPXt2b2x1bWVJbnR9PjwvbGFiZWw+XG4gICAgICAgIDwvYm94PlxuICAgICAgKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8Ym94PlxuICAgICAgICA8bGFiZWwgY2xhc3M9e1wiYmFyLWJ1dHRvbi1sYWJlbFwifSBsYWJlbD17YCR7aWNvbnMudm9sdW1lSGlnaH1gfSAvPlxuICAgICAgICA8bGFiZWwgbGFiZWw9e3ZvbHVtZUludH0+PC9sYWJlbD5cbiAgICAgIDwvYm94PlxuICAgICk7XG4gIH1cbn1cbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgY3JlYXRlQmluZGluZywgRm9yIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgTm90aWZkIGZyb20gXCJnaTovL0FzdGFsTm90aWZkXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBOb3RpZmljYXRpb25IaXN0b3J5UG9wb3ZlcigpIHtcbiAgY29uc3Qgbm90aWZkID0gTm90aWZkLmdldF9kZWZhdWx0KCk7XG4gIGNvbnN0IG5vdGlmaWNhdGlvbnMgPSBjcmVhdGVCaW5kaW5nKG5vdGlmZCwgXCJub3RpZmljYXRpb25zXCIpO1xuXG4gIHJldHVybiAoXG4gICAgPHBvcG92ZXJcbiAgICAgIG5hbWU9e1wibm90aWZpY2F0aW9uIGhpc3RvcnkgcG9wb3ZlclwifVxuICAgICAgYXV0b2hpZGU9e2ZhbHNlfVxuICAgICAgaGFzQXJyb3c9e2ZhbHNlfVxuICAgICAgY2xhc3M9e1wid2lkZ2V0LXBvcG92ZXJcIn1cbiAgICAgIG1hcmdpbkVuZD17NjB9XG4gICAgICBtYXJnaW5Cb3R0b209ezMwfVxuICAgID5cbiAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgIDxsYWJlbCBsYWJlbD17XCJOT1RJRklDQVRJT05TIExJU1RcIn0+PC9sYWJlbD5cbiAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICA8Rm9yIGVhY2g9e25vdGlmaWNhdGlvbnMoKG4pID0+IG4uc29ydCgoYSwgYikgPT4gYS50aW1lIC0gYi50aW1lKSl9PlxuICAgICAgICAgICAgeyhub3RpZmljYXRpb246IE5vdGlmZC5Ob3RpZmljYXRpb24pID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgICAgICAgPGxhYmVsIGxhYmVsPXtub3RpZmljYXRpb24uYm9keX0+PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17bm90aWZpY2F0aW9uLnN1bW1hcnl9PjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgIDwvRm9yPlxuICAgICAgICA8L2JveD5cbiAgICAgIDwvYm94PlxuICAgIDwvcG9wb3Zlcj5cbiAgKTtcbn1cbiIsICJpbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uSGlzdG9yeVBvcG92ZXIgfSBmcm9tIFwiLi9ub3RpZmljYXRpb25faGlzdG9yeV9wb3BvdmVyXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBOb3RpZmljYXRpb25IaXN0b3J5KCkge1xuICAvLyBjb25zdCBub3RpZmQgPSBOb3RpZmQuZ2V0X2RlZmF1bHQoKTtcblxuICAvLyBub3RpZmQuY29ubmVjdChcIm5vdGlmaWVkXCIsIChfLCBpZCkgPT4ge1xuICAvLyAgIGNvbnN0IG4gPSBub3RpZmQuZ2V0X25vdGlmaWNhdGlvbihpZCk7XG4gIC8vICAgcHJpbnQobi5zdW1tYXJ5LCBuLmJvZHkpO1xuICAvLyB9KTtcblxuICByZXR1cm4gKFxuICAgIDxib3g+XG4gICAgICA8bWVudWJ1dHRvbj5cbiAgICAgICAgPGJveFxuICAgICAgICAgIGNzc0NsYXNzZXM9e1tcIm5vdGlmaWNhdGlvbi1oaXN0b3J5LWJ1dHRvblwiXX1cbiAgICAgICAgICBvdmVyZmxvdz17R3RrLk92ZXJmbG93LkhJRERFTn1cbiAgICAgICAgPlxuICAgICAgICAgIDxib3g+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9e1wiYmFyLWJ1dHRvbi1sYWJlbFwifSBsYWJlbD17YFx1REI4MFx1REUxQWB9IC8+XG4gICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvYm94PlxuICAgICAgICA8Tm90aWZpY2F0aW9uSGlzdG9yeVBvcG92ZXIgLz5cbiAgICAgIDwvbWVudWJ1dHRvbj5cbiAgICA8L2JveD5cbiAgKTtcbn1cbiIsICJpbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIjtcbmltcG9ydCB7IEFzdGFsLCBHdGssIEdkayB9IGZyb20gXCJhZ3MvZ3RrNFwiO1xuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcImFncy9wcm9jZXNzXCI7XG5pbXBvcnQgeyBjcmVhdGVQb2xsIH0gZnJvbSBcImFncy90aW1lXCI7XG5pbXBvcnQgeyBUaW1lciB9IGZyb20gXCIuL3RpbWVyL3RpbWVyXCI7XG5pbXBvcnQgeyBOZXR3b3JrU3RhdHVzIH0gZnJvbSBcIi4vbmV0d29ya19zdGF0dXMvbmV0d29ya19zdGF0dXNcIjtcbmltcG9ydCB7IFdlYXRoZXIgfSBmcm9tIFwiLi93ZWF0aGVyL3dlYXRoZXJcIjtcbmltcG9ydCB7IEF1ZGlvTWFuYWdlciB9IGZyb20gXCIuL2F1ZGlvX21hbmFnZXIvYXVkaW9fbWFuYWdlclwiO1xuaW1wb3J0IE5vdGlmaWNhdGlvbk1hbmFnZXIgZnJvbSBcIi4vbm90aWZpY2F0aW9uX21hbmFnZXIvbm90aWZpY2F0aW9uX21hbmFnZXJcIjtcbmltcG9ydCB7IE5vdGlmaWNhdGlvbkhpc3RvcnkgfSBmcm9tIFwiLi9ub3RpZmljYXRpb25faGlzdG9yeS9ub3RpZmljYXRpb25faGlzdG9yeVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gYmFyKG1vbml0b3I6IEdkay5Nb25pdG9yKSB7XG4gIGlmIChtb25pdG9yLmRlc2NyaXB0aW9uLmluY2x1ZGVzKFwiQVczNDIzRFdGXCIpKSB7XG4gICAgcmV0dXJuIG1haW5CYXIobW9uaXRvcik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHNlY29uZEJhcihtb25pdG9yKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBtYWluQmFyKG1vbml0b3I6IEdkay5Nb25pdG9yKSB7XG4gIGNvbnN0IHRpbWUgPSBjcmVhdGVQb2xsKFwiXCIsIDEwMDAsIFwiZGF0ZVwiKTtcbiAgY29uc3QgeyBCT1RUT00sIExFRlQsIFJJR0hUIH0gPSBBc3RhbC5XaW5kb3dBbmNob3I7XG5cbiAgcmV0dXJuIChcbiAgICA8d2luZG93XG4gICAgICB2aXNpYmxlXG4gICAgICBuYW1lPVwiYmFyXCJcbiAgICAgIGNsYXNzPVwiQmFyXCJcbiAgICAgIGdka21vbml0b3I9e21vbml0b3J9XG4gICAgICBleGNsdXNpdml0eT17QXN0YWwuRXhjbHVzaXZpdHkuRVhDTFVTSVZFfVxuICAgICAgYW5jaG9yPXtCT1RUT00gfCBMRUZUIHwgUklHSFR9XG4gICAgICBhcHBsaWNhdGlvbj17YXBwfVxuICAgID5cbiAgICAgIDxjZW50ZXJib3ggY3NzTmFtZT1cImNlbnRlcmJveFwiPlxuICAgICAgICA8Ym94ICR0eXBlPVwic3RhcnRcIiBoYWxpZ249e0d0ay5BbGlnbi5TVEFSVH0+XG4gICAgICAgICAgPFdlYXRoZXIgLz5cbiAgICAgICAgICA8VGltZXIgLz5cbiAgICAgICAgPC9ib3g+XG5cbiAgICAgICAgPGJveCAkdHlwZT1cImNlbnRlclwiPlxuICAgICAgICAgIDxtZW51YnV0dG9uIGNsYXNzPVwiY2xvY2tcIiBoZXhwYW5kIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0+XG4gICAgICAgICAgICA8bGFiZWwgbGFiZWw9e3RpbWV9IC8+XG4gICAgICAgICAgICA8cG9wb3Zlcj5cbiAgICAgICAgICAgICAgPEd0ay5DYWxlbmRhciAvPlxuICAgICAgICAgICAgPC9wb3BvdmVyPlxuICAgICAgICAgIDwvbWVudWJ1dHRvbj5cbiAgICAgICAgPC9ib3g+XG5cbiAgICAgICAgPGJveCAkdHlwZT1cImVuZFwiIGhhbGlnbj17R3RrLkFsaWduLkVORH0+XG4gICAgICAgICAgPE5vdGlmaWNhdGlvbkhpc3RvcnkgLz5cbiAgICAgICAgICA8QXVkaW9NYW5hZ2VyIC8+XG4gICAgICAgICAgPE5ldHdvcmtTdGF0dXMgLz5cbiAgICAgICAgPC9ib3g+XG4gICAgICA8L2NlbnRlcmJveD5cbiAgICA8L3dpbmRvdz5cbiAgKTtcbn1cblxuZnVuY3Rpb24gc2Vjb25kQmFyKG1vbml0b3I6IEdkay5Nb25pdG9yKSB7XG4gIGNvbnN0IHRpbWUgPSBjcmVhdGVQb2xsKFwiXCIsIDEwMDAsIFwiZGF0ZVwiKTtcbiAgY29uc3QgeyBCT1RUT00sIExFRlQsIFJJR0hUIH0gPSBBc3RhbC5XaW5kb3dBbmNob3I7XG4gIGxldCBjb250ZW50ID0gYCR7bW9uaXRvci5tb2RlbH0gJHttb25pdG9yLmRlc2NyaXB0aW9ufWA7XG5cbiAgcmV0dXJuIChcbiAgICA8d2luZG93XG4gICAgICB2aXNpYmxlXG4gICAgICBuYW1lPVwiYmFyXCJcbiAgICAgIGNsYXNzPVwiQmFyXCJcbiAgICAgIGdka21vbml0b3I9e21vbml0b3J9XG4gICAgICBleGNsdXNpdml0eT17QXN0YWwuRXhjbHVzaXZpdHkuRVhDTFVTSVZFfVxuICAgICAgYW5jaG9yPXtCT1RUT00gfCBMRUZUIHwgUklHSFR9XG4gICAgICBhcHBsaWNhdGlvbj17YXBwfVxuICAgID5cbiAgICAgIDxjZW50ZXJib3ggY3NzTmFtZT1cImNlbnRlcmJveFwiPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgJHR5cGU9XCJzdGFydFwiXG4gICAgICAgICAgb25DbGlja2VkPXsoKSA9PiBleGVjQXN5bmMoXCJlY2hvIGhlbGxvXCIpLnRoZW4oY29uc29sZS5sb2cpfVxuICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgID5cbiAgICAgICAgICA8bGFiZWwgbGFiZWw9XCJXZWxjb21lIHRvIEFHUyFcIiAvPlxuICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICA8Ym94XG4gICAgICAgICAgJHR5cGU9XCJjZW50ZXJcIlxuICAgICAgICAgIGNsYXNzPVwibW9uaXRvci1pbmZvXCJcbiAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICA+XG4gICAgICAgICAgPGxhYmVsIGxhYmVsPXtjb250ZW50fSAvPlxuICAgICAgICA8L2JveD5cblxuICAgICAgICA8bWVudWJ1dHRvbiAkdHlwZT1cImVuZFwiIGhleHBhbmQgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfT5cbiAgICAgICAgICA8bGFiZWwgbGFiZWw9e3RpbWV9IC8+XG4gICAgICAgICAgPHBvcG92ZXI+XG4gICAgICAgICAgICA8R3RrLkNhbGVuZGFyIC8+XG4gICAgICAgICAgPC9wb3BvdmVyPlxuICAgICAgICA8L21lbnVidXR0b24+XG4gICAgICA8L2NlbnRlcmJveD5cbiAgICA8L3dpbmRvdz5cbiAgKTtcbn1cbiIsICJleHBvcnQgY2xhc3MgVGltZXJDb25maWd1cmF0aW9uIHtcbiAgICBwdWJsaWMgZGVmYXVsdFRpbWVyVGltZVNlY29uZHM6IG51bWJlciA9IDYwMDtcbiAgICBwdWJsaWMgbWF4UnVubmluZ1RpbWVyczogbnVtYmVyID0gMTA7XG4gICAgcHVibGljIHNhdmVkVGltZXJzRmlsZVBhdGg6IHN0cmluZyA9IGBkYXRhL3RpbWVyL3NhdmVkX3RpbWVycy5qc29uYDtcbiAgICBwdWJsaWMgYWxhcm1Tb3VuZEZpbGVQYXRoOiBzdHJpbmcgPSBcImRhdGEvdGltZXIvdGltZXJfYWxhcm1fc291bmQubXAzXCI7XG4gICAgcHVibGljIGFsYXJtU291bmRMZW5ndGhJblNlY29uZHM6IG51bWJlciA9IDYwO1xufSIsICJleHBvcnQgY2xhc3MgR2VuZXJhbENvbmZpZ3VyYXRpb24ge1xuICAgIHB1YmxpYyBsYW5ndWFnZUNvZGU6IHN0cmluZyA9IFwiZW5cIjtcbiAgICBwdWJsaWMgdGltZUZvcm1hdDogXCIyNFwiIHwgXCIxMlwiID0gXCIyNFwiO1xuICAgIHB1YmxpYyBkYXRlRm9ybWF0OiBzdHJpbmcgPSBcIkRELU1NLVlZWVlcIlxufSIsICJleHBvcnQgY2xhc3MgVGltZXJUZXh0cyB7XG5cbiAgICAvLyBUaW1lciBwb3BvdmVyXG4gICAgcHVibGljIHJlYWRvbmx5IGFkZDogc3RyaW5nID0gXCJBZGQgdGltZXJcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgcnVuOiBzdHJpbmcgPSBcIlJ1blwiO1xuICAgIHB1YmxpYyByZWFkb25seSBlbnRlckVkaXRNb2RlOiBzdHJpbmcgPSBcIkVudGVyIGVkaXQgbW9kZVwiO1xuICAgIHB1YmxpYyByZWFkb25seSBleGl0RWRpdE1vZGU6IHN0cmluZyA9IFwiRXhpdCBlZGl0IG1vZGVcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgc2F2ZWQ6IHN0cmluZyA9IFwiU2F2ZWQgdGltZXJzXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IHJ1bm5pbmc6IHN0cmluZyA9IFwiUnVubmluZ3MgdGltZXJzXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IHN0YXRlUnVubmluZzogc3RyaW5nID0gXCJUaW1lciBpcyBjdXJyZW50bHkgcnVubmluZ1wiO1xuICAgIHB1YmxpYyByZWFkb25seSBzdGF0ZVBhdXNlZDogc3RyaW5nID0gXCJUaW1lciBpcyBjdXJyZW50bHkgcGF1c2VkXCI7XG5cbiAgICAvLyBTYXZlIHRpbWVyIHdpbmRvd1xuICAgIHB1YmxpYyByZWFkb25seSBzYXZlQXNrTGFiZWw6IHN0cmluZyA9IFwiU2V0IHRpbWVyJ3MgdGltZSBhbmQgbmFtZSB0byBzYXZlIGl0LiBNQVggMTYgQ0hBUkFDVEVSUy5cIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgc2F2ZU5hbWVQbGFjZWhvbGRlcjogc3RyaW5nID0gXCJQcm92aWRlIHRpbWVyIG5hbWUgZWcuIHBpenphLCBsZXNzb24sIG5hcFwiO1xuXG4gICAgLy8gVGltZXIgbm90aWZpY2F0aW9uXG4gICAgcHVibGljIHJlYWRvbmx5IGVuZE5vbmFtZU5vdGlmaWNhdGlvblRpdGxlOiBzdHJpbmcgPSBcIlRpbWVyIGZpbmlzaGVkIVwiO1xuICAgIHB1YmxpYyByZWFkb25seSBlbmROYW1lZE5vdGlmaWNhdGlvblRpdGxlOiBzdHJpbmcgPSBcIlRpbWVyIHswfSBmaW5pc2hlZCFcIjtcbn0iLCAiZXhwb3J0IGNsYXNzIEdlbmVyYWxUZXh0cyB7XG4gICAgcHVibGljIHJlYWRvbmx5IGFkZDogc3RyaW5nID0gXCJBZGRcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgY2FuY2VsOiBzdHJpbmcgPSBcIkNhbmNlbFwiO1xuXG4gICAgcHVibGljIHJlYWRvbmx5IG5hbWU6IHN0cmluZyA9IFwiTmFtZVwiO1xuICAgIHB1YmxpYyByZWFkb25seSBkZXNjcmlwdGlvbjogc3RyaW5nID0gXCJEZXNjcmlwdGlvblwiO1xuXG4gICAgcHVibGljIHJlYWRvbmx5IGRheXNPZldlZWs6IHN0cmluZ1tdID0gW1xuICAgICAgICBcIk1vbmRheVwiLFxuICAgICAgICBcIlR1ZXNkYXlcIixcbiAgICAgICAgXCJXZWRuZXNkYXlcIixcbiAgICAgICAgXCJUaHVyc2RheVwiLFxuICAgICAgICBcIkZyaWRheVwiLFxuICAgICAgICBcIlNhdHVyZGF5XCIsXG4gICAgICAgIFwiU3VuZGF5XCJcbiAgICBdO1xufSIsICJleHBvcnQgY2xhc3MgTmV0d29ya1RleHRzIHtcblxuICAgIHB1YmxpYyByZWFkb25seSBhdmFpbGFibGVOZXR3b3Jrc0xhYmVsOiBzdHJpbmcgPSBcIkF2YWlsYWJsZSB3aXJlbGVzcyBuZXR3b3Jrc1wiO1xuICAgIHB1YmxpYyByZWFkb25seSBzZWFyY2hOZXR3b3Jrczogc3RyaW5nID0gXCJTZWFyY2hpbmdcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgY29ubmVjdEJ1dHRvbkxhYmVsOiBzdHJpbmcgPSBcIkNvbm5lY3RcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgd2lmaVVuYXZhaWxhYmxlOiBzdHJpbmcgPSBcIldpZmkgaXMgY3VycmVudGx5IHVuYXZhaWxhYmxlXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IGRvd25sb2FkU3BlZWQ6IHN0cmluZyA9IFwiQ3VycmVudCBkb3dubG9hZCBzcGVlZFwiO1xuICAgIHB1YmxpYyByZWFkb25seSB1cGxvYWRTcGVlZDogc3RyaW5nID0gXCJDdXJyZW50IHVwbG9hZCBzcGVlZFwiO1xuICAgIHB1YmxpYyByZWFkb25seSBub0N1cnJlbnRDb25uZWN0aW9uOiBzdHJpbmcgPSBcIk5vIEludGVybmV0IGNvbm5lY3Rpb25cIjtcblxufSIsICJleHBvcnQgY2xhc3MgV2VhdGhlclRleHRzIHtcbiAgICBwdWJsaWMgYmFkTG9jYWxpemF0aW9uc1Rvb2x0aXA6IHN0cmluZyA9IFwiWW91ciBjb25maWd1cmF0aW9uIGZpbGUgY29udGFpbnMgYmFkIGxvY2FsaXphdGlvbnMgY29vcmRpbmF0ZXM6IFwiO1xuICAgIHB1YmxpYyBkZWZhdWx0TG9jYXRpb25OYW1lOiBzdHJpbmcgPSBcIkxvY2FsaXphdGlvblwiO1xufSIsICJleHBvcnQgY2xhc3MgQXVkaW9NYW5hZ2VyVGV4dHMge1xuXG4gICAgcHVibGljIHJlYWRvbmx5IHdhaXRpbmdGb3JEZXZpY2U6IHN0cmluZyA9IFwiV2FpdGluZyBmb3IgYXVkaW8gZGV2aWNlXCI7XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgc3RyZWFtczogc3RyaW5nID0gXCJTdHJlYW1zXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IHJlY29yZHM6IHN0cmluZyA9IFwiUmVjb3Jkc1wiO1xuICAgIHB1YmxpYyByZWFkb25seSBkZXZpY2VzOiBzdHJpbmcgPSBcIkRldmljZXNcIjtcblxuICAgIHB1YmxpYyByZWFkb25seSBvdXRwdXQ6IHN0cmluZyA9IFwiT3V0cHV0XCI7XG4gICAgcHVibGljIHJlYWRvbmx5IGlucHV0OiBzdHJpbmcgPSBcIklucHV0XCI7XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgb3V0cHV0RGV2aWNlOiBzdHJpbmcgPSBcIk91dHB1dCBkZXZpY2VcIjtcbiAgICBwdWJsaWMgcmVhZG9ubHkgaW5wdXREZXZpY2U6IHN0cmluZyA9IFwiSW5wdXQgZGV2aWNlXCI7XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgbm9TdHJlYW1zOiBzdHJpbmcgPSBcIk5vdGhpbmcgaXMgc3RyZWFtaW5nIGF1ZGlvXCI7XG4gICAgcHVibGljIHJlYWRvbmx5IG5vUmVjb3Jkczogc3RyaW5nID0gXCJOb3RoaW5nIGlzIHJlY29yZGluZyBhdWRpb1wiO1xufSIsICJpbXBvcnQgeyByZWFkRmlsZSB9IGZyb20gXCJhZ3MvZmlsZVwiO1xuaW1wb3J0IHsgVGltZXJUZXh0cyB9IGZyb20gXCIuL3RpbWVyX3RleHRzXCI7XG5pbXBvcnQgeyBHZW5lcmFsVGV4dHMgfSBmcm9tIFwiLi9nZW5lcmFsX3RleHRzXCI7XG5pbXBvcnQgeyBOZXR3b3JrVGV4dHMgfSBmcm9tIFwiLi9uZXR3b3JrX3RleHRzXCI7XG5pbXBvcnQgeyBXZWF0aGVyVGV4dHMgfSBmcm9tIFwiLi93ZWF0aGVyX3RleHRzXCI7XG5pbXBvcnQgeyBBdWRpb01hbmFnZXJUZXh0cyB9IGZyb20gXCIuL2F1ZGlvX21hbmFnZXJfdGV4dHNcIjtcblxuZXhwb3J0IGNsYXNzIExvY2FsaXp0aW9uVGV4dHMge1xuXG4gICAgcHVibGljIHJlYWRvbmx5IGdlbmVyYWw6IEdlbmVyYWxUZXh0cyA9IG5ldyBHZW5lcmFsVGV4dHMoKTtcbiAgICBwdWJsaWMgcmVhZG9ubHkgdGltZXI6IFRpbWVyVGV4dHMgPSBuZXcgVGltZXJUZXh0cygpO1xuICAgIHB1YmxpYyByZWFkb25seSBuZXR3b3JrOiBOZXR3b3JrVGV4dHMgPSBuZXcgTmV0d29ya1RleHRzKCk7XG4gICAgcHVibGljIHJlYWRvbmx5IHdlYXRoZXI6IFdlYXRoZXJUZXh0cyA9IG5ldyBXZWF0aGVyVGV4dHMoKTtcbiAgICBwdWJsaWMgcmVhZG9ubHkgYXVkaW9NYW5hZ2VyOiBBdWRpb01hbmFnZXJUZXh0cyA9IG5ldyBBdWRpb01hbmFnZXJUZXh0cygpO1xuXG5cbiAgICBjb25zdHJ1Y3RvcihsYW5ndWFnZTogc3RyaW5nID0gXCJlblwiKSB7XG5cbiAgICAgICAgaWYgKGxhbmd1YWdlLmxlbmd0aCAhPT0gMilcbiAgICAgICAgICAgIHJldHVybjtcblxuICAgICAgICBjb25zdCB0ZXh0cyA9IHJlYWRGaWxlKGBkYXRhL2xvY2FsaXphdGlvbi8ke2xhbmd1YWdlfS5qc29uYCk7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKHRleHRzKSBhcyBMb2NhbGl6dGlvblRleHRzO1xuICAgIH1cbn0iLCAiaW1wb3J0IHsgbW9uaXRvckZpbGUsIHJlYWRGaWxlQXN5bmMgfSBmcm9tIFwiYWdzL2ZpbGVcIjtcbmltcG9ydCB7IFRpbWVyQ29uZmlndXJhdGlvbiB9IGZyb20gXCIuL3RpbWVyX2NvbmZpZ3VyYXRpb25cIjtcbmltcG9ydCB7IEdlbmVyYWxDb25maWd1cmF0aW9uIH0gZnJvbSBcIi4vZ2VuZXJhbF9jb25maWd1cmF0aW9uXCI7XG5pbXBvcnQgeyBMb2NhbGl6dGlvblRleHRzIH0gZnJvbSBcIi4uL3RleHRzL2xvY2FsaXphdGlvbl90ZXh0c1wiO1xuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW9cIjtcbmltcG9ydCB7IENvbW11bmljYXRpb24gfSBmcm9tIFwiLi4vdXRpbHMvY29tbXVuaWNhdGlvblwiO1xuaW1wb3J0IHsgY3JlYXRlU3RhdGUsIFN0YXRlIH0gZnJvbSBcImFnc1wiO1xuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcImFncy9wcm9jZXNzXCI7XG5pbXBvcnQgeyBXZWF0aGVyQ29uZmlndXJhdGlvbiB9IGZyb20gXCIuL3dlYXRoZXJfY29uZmlndXJhdGlvblwiO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uQ29uZmlndXJhdGlvbiB9IGZyb20gXCIuL25vdGlmaWNhdGlvbl9jb25maWd1cmF0aW9uXCI7XG5cbmNvbnN0IENPTkZJR19QQVRIID0gXCJjb25maWcvY29uZmlnLmpzb25cIlxuXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhdGlvbiB7XG5cbiAgICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogQ29uZmlndXJhdGlvbiB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcblxuICAgIHByaXZhdGUgcHdkOiBzdHJpbmcgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG5cbiAgICBwdWJsaWMgZ2VuZXJhbDogR2VuZXJhbENvbmZpZ3VyYXRpb24gPSBuZXcgR2VuZXJhbENvbmZpZ3VyYXRpb24oKTtcbiAgICBwdWJsaWMgdGltZXI6IFRpbWVyQ29uZmlndXJhdGlvbiA9IG5ldyBUaW1lckNvbmZpZ3VyYXRpb24oKTtcbiAgICBwdWJsaWMgd2VhdGhlcjogV2VhdGhlckNvbmZpZ3VyYXRpb24gPSBuZXcgV2VhdGhlckNvbmZpZ3VyYXRpb24oKTtcbiAgICBwdWJsaWMgd2VhdGhlclN0YXRlOiBTdGF0ZTxXZWF0aGVyQ29uZmlndXJhdGlvbj4gPSBjcmVhdGVTdGF0ZShuZXcgV2VhdGhlckNvbmZpZ3VyYXRpb24oKSk7XG4gICAgcHVibGljIG5vdGlmaWFjdGlvbjogTm90aWZpY2F0aW9uQ29uZmlndXJhdGlvbiA9IG5ldyBOb3RpZmljYXRpb25Db25maWd1cmF0aW9uKCk7XG5cbiAgICBwdWJsaWMgdGV4dHM6IFN0YXRlPExvY2FsaXp0aW9uVGV4dHM+ID0gY3JlYXRlU3RhdGUobmV3IExvY2FsaXp0aW9uVGV4dHMoXCJcIikpO1xuICAgIHB1YmxpYyBnZXRUZXh0cygpIHsgcmV0dXJuIHRoaXMudGV4dHNbMF0uZ2V0KCk7IH07XG5cbiAgICBwcml2YXRlIGZpbGVNb25pdG9yOiBHaW8uRmlsZU1vbml0b3IgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG5cbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge1xuXG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBhc3luYyBjcmVhdGUoKTogUHJvbWlzZTxDb25maWd1cmF0aW9uPiB7XG4gICAgICAgIGlmIChDb25maWd1cmF0aW9uLmluc3RhbmNlICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm4gQ29uZmlndXJhdGlvbi5pbnN0YW5jZTtcblxuICAgICAgICBjb25zdCBjb25maWdKc29uID0gYXdhaXQgcmVhZEZpbGVBc3luYyhgJHtDT05GSUdfUEFUSH1gKTtcbiAgICAgICAgY29uc3QgZmlsZUNvbmZpZyA9IEpTT04ucGFyc2UoY29uZmlnSnNvbikgYXMgQ29uZmlndXJhdGlvbjtcblxuICAgICAgICBjb25zdCBjb25maWcgPSBuZXcgQ29uZmlndXJhdGlvbigpO1xuXG4gICAgICAgIC8vIFRleHRzXG4gICAgICAgIGNvbmZpZy50ZXh0c1sxXShuZXcgTG9jYWxpenRpb25UZXh0cyhjb25maWcuZ2VuZXJhbC5sYW5ndWFnZUNvZGUpKTtcblxuICAgICAgICAvLyBHZW5lcmFsXG4gICAgICAgIGNvbmZpZy5nZW5lcmFsLmxhbmd1YWdlQ29kZSA9IGZpbGVDb25maWcuZ2VuZXJhbC5sYW5ndWFnZUNvZGU7XG4gICAgICAgIGNvbmZpZy5nZW5lcmFsLmRhdGVGb3JtYXQgPSBmaWxlQ29uZmlnLmdlbmVyYWwuZGF0ZUZvcm1hdDtcbiAgICAgICAgY29uZmlnLmdlbmVyYWwudGltZUZvcm1hdCA9IGZpbGVDb25maWcuZ2VuZXJhbC50aW1lRm9ybWF0O1xuXG4gICAgICAgIC8vIFRpbWVyXG4gICAgICAgIGNvbmZpZy50aW1lci5kZWZhdWx0VGltZXJUaW1lU2Vjb25kcyA9IGZpbGVDb25maWcudGltZXIuZGVmYXVsdFRpbWVyVGltZVNlY29uZHM7XG4gICAgICAgIGNvbmZpZy50aW1lci5tYXhSdW5uaW5nVGltZXJzID0gZmlsZUNvbmZpZy50aW1lci5tYXhSdW5uaW5nVGltZXJzO1xuICAgICAgICBjb25maWcudGltZXIuYWxhcm1Tb3VuZEZpbGVQYXRoID0gZmlsZUNvbmZpZy50aW1lci5hbGFybVNvdW5kRmlsZVBhdGg7XG4gICAgICAgIGNvbmZpZy50aW1lci5hbGFybVNvdW5kTGVuZ3RoSW5TZWNvbmRzID0gZmlsZUNvbmZpZy50aW1lci5hbGFybVNvdW5kTGVuZ3RoSW5TZWNvbmRzO1xuXG4gICAgICAgIC8vIFdlYXRoZXJcbiAgICAgICAgY29uc3Qgd2VhdGhlckNvbmZpZyA9IFdlYXRoZXJDb25maWd1cmF0aW9uLmZyb21Db25maWdGaWxlKGZpbGVDb25maWcud2VhdGhlcik7XG4gICAgICAgIHdlYXRoZXJDb25maWcuY2hlY2tMb2NhbGl6YXRpb25OYW1lcygpOyAvLyBJZ25vcmUgYXdhaXQsIHdlIGRvbid0IG5lZWQgdGhpcyBpbW1lZGlhdGVseVxuICAgICAgICBjb25maWcud2VhdGhlciA9IHdlYXRoZXJDb25maWc7XG4gICAgICAgIGNvbmZpZy53ZWF0aGVyU3RhdGUgPSBjcmVhdGVTdGF0ZSh3ZWF0aGVyQ29uZmlnKTtcblxuXG4gICAgICAgIC8vIE5vdGlmaWNhdGlvblxuICAgICAgICBjb25maWcubm90aWZpYWN0aW9uLmhpc3RvcnlFbnRyaWVzID0gY29uZmlnLm5vdGlmaWFjdGlvbi5oaXN0b3J5RW50cmllcztcbiAgICAgICAgY29uZmlnLm5vdGlmaWFjdGlvbi5oaXN0b3J5UGF0aCA9IGNvbmZpZy5ub3RpZmlhY3Rpb24uaGlzdG9yeVBhdGg7XG5cbiAgICAgICAgY29uZmlnLmFkZEZpbGVNb25pdG9ySGFuZGxlcigpO1xuICAgICAgICBDb25maWd1cmF0aW9uLmluc3RhbmNlID0gY29uZmlnO1xuXG4gICAgICAgIHJldHVybiBjb25maWc7XG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIGdldFB3ZCgpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgICAgICBpZiAodGhpcy5wd2QgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnB3ZDtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3Qgb3V0cHV0ID0gYXdhaXQgZXhlY0FzeW5jKFtcInB3ZFwiXSk7XG4gICAgICAgICAgICBpZiAob3V0cHV0ID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiXCI7XG5cbiAgICAgICAgICAgIHRoaXMucHdkID0gb3V0cHV0LnRyaW0oKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnB3ZDtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBDb21tdW5pY2F0aW9uLnByaW50RXJyb3IoXCJDYW5ub3QgZ2V0IHB3ZFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cblxuICAgIHByaXZhdGUgYWRkRmlsZU1vbml0b3JIYW5kbGVyKCkge1xuXG4gICAgICAgIGlmICh0aGlzLmZpbGVNb25pdG9yICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICByZXR1cm47XG5cblxuICAgICAgICB0aGlzLmZpbGVNb25pdG9yID0gbW9uaXRvckZpbGUoYCR7Q09ORklHX1BBVEh9YCwgYXN5bmMgKGZpbGU6IHN0cmluZywgZXZlbnQ6IEdpby5GaWxlTW9uaXRvckV2ZW50KSA9PiB7XG4gICAgICAgICAgICBzd2l0Y2ggKGV2ZW50KSB7XG5cbiAgICAgICAgICAgICAgICAvLyBDYW4gcmVhZCBmaWxlLCB1cGRhdGUgY29uZmlndXJhdGlvblxuICAgICAgICAgICAgICAgIGNhc2UgR2lvLkZpbGVNb25pdG9yRXZlbnQuQ0hBTkdFU19ET05FX0hJTlQ6XG4gICAgICAgICAgICAgICAgY2FzZSBHaW8uRmlsZU1vbml0b3JFdmVudC5DUkVBVEVEOlxuICAgICAgICAgICAgICAgIGNhc2UgR2lvLkZpbGVNb25pdG9yRXZlbnQuTU9WRURfSU46XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMudXBkYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgLy8gRG8gbm90aGluZ1xuICAgICAgICAgICAgICAgIGNhc2UgR2lvLkZpbGVNb25pdG9yRXZlbnQuQ0hBTkdFRDpcbiAgICAgICAgICAgICAgICBjYXNlIEdpby5GaWxlTW9uaXRvckV2ZW50LkFUVFJJQlVURV9DSEFOR0VEOlxuICAgICAgICAgICAgICAgIGNhc2UgR2lvLkZpbGVNb25pdG9yRXZlbnQuREVMRVRFRDpcbiAgICAgICAgICAgICAgICBjYXNlIEdpby5GaWxlTW9uaXRvckV2ZW50Lk1PVkVEOlxuICAgICAgICAgICAgICAgIGNhc2UgR2lvLkZpbGVNb25pdG9yRXZlbnQuTU9WRURfT1VUOlxuICAgICAgICAgICAgICAgIGNhc2UgR2lvLkZpbGVNb25pdG9yRXZlbnQuUFJFX1VOTU9VTlQ6XG4gICAgICAgICAgICAgICAgY2FzZSBHaW8uRmlsZU1vbml0b3JFdmVudC5SRU5BTUVEOlxuICAgICAgICAgICAgICAgIGNhc2UgR2lvLkZpbGVNb25pdG9yRXZlbnQuVU5NT1VOVEVEOlxuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgQ29tbXVuaWNhdGlvbi5wcmludFdhcm5pbmcoXCJDb25maWcgZmlsZSBjaGFuZ2VkIGJ1dCBldmVudCBpcyBub3QgaGFuZGxlZC5cIik7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHByaXZhdGUgYXN5bmMgdXBkYXRlKCkge1xuICAgICAgICB0cnkge1xuXG4gICAgICAgICAgICBjb25zdCBjb25maWdKc29uID0gYXdhaXQgcmVhZEZpbGVBc3luYyhgJHtDT05GSUdfUEFUSH1gKTtcbiAgICAgICAgICAgIGNvbnN0IGZpbGVDb25maWcgPSBKU09OLnBhcnNlKGNvbmZpZ0pzb24pIGFzIENvbmZpZ3VyYXRpb247XG4gICAgICAgICAgICB0aGlzLnRleHRzWzFdKG5ldyBMb2NhbGl6dGlvblRleHRzKGZpbGVDb25maWcuZ2VuZXJhbC5sYW5ndWFnZUNvZGUpKTtcblxuICAgICAgICAgICAgLy8gV2VhdGhlclxuICAgICAgICAgICAgY29uc3Qgd2VhdGhlckNvbmZpZyA9IFdlYXRoZXJDb25maWd1cmF0aW9uLmZyb21Db25maWdGaWxlKGZpbGVDb25maWcud2VhdGhlcik7XG4gICAgICAgICAgICBhd2FpdCB3ZWF0aGVyQ29uZmlnLmNoZWNrTG9jYWxpemF0aW9uTmFtZXMoKTtcbiAgICAgICAgICAgIHRoaXMud2VhdGhlciA9IHdlYXRoZXJDb25maWc7XG4gICAgICAgICAgICB0aGlzLndlYXRoZXJTdGF0ZVsxXSh3ZWF0aGVyQ29uZmlnKTtcblxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgQ29tbXVuaWNhdGlvbi5wcmludEVycm9yKFwiQ2Fubm90IHVwZGF0ZSBjb25maWd1cmF0aW9uLCBwbGVhc2UgcmVsb2FkIEFHU1wiKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgZmV0Y2ggZnJvbSBcImFncy9mZXRjaFwiO1xuaW1wb3J0IHsgV2VhdGhlckxvY2FsaXphdGlvbiB9IGZyb20gXCIuLi8uLi93aWRnZXQvd2VhdGhlci93ZWF0aGVyX2xvY2FsaXphdGlvblwiO1xuaW1wb3J0IHsgcmVhZEZpbGVBc3luYywgd3JpdGVGaWxlQXN5bmMgfSBmcm9tIFwiYWdzL2ZpbGVcIjtcbmltcG9ydCB7IENvbW11bmljYXRpb24gfSBmcm9tIFwiLi4vdXRpbHMvY29tbXVuaWNhdGlvblwiO1xuXG5leHBvcnQgY2xhc3MgV2VhdGhlckNvbmZpZ3VyYXRpb24ge1xuICAgIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IE1BWF9MT0NBTElaQVRJT05TID0gMTA7XG4gICAgcHVibGljIHRlbXBlcmF0dXJlVW5pdDogc3RyaW5nID0gXCJDXCI7IC8vIEMgb3IgRlxuICAgIHB1YmxpYyBzaG93TG9jYXRpb25OYW1lOiBib29sZWFuID0gdHJ1ZTtcbiAgICBwdWJsaWMgYXV0b2dldExvY2FsaXphdGlvbk5hbWU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwdWJsaWMgc2F2ZWRBdXRvZ2V0TmFtZXNQYXRoOiBzdHJpbmcgPSBgZGF0YS93ZWF0aGVyL2ZvdW5kX2xvY2FsaXphdGlvbnMuanNvbmA7XG4gICAgcHVibGljIGxvY2FsaXphdGlvbnM6IFdlYXRoZXJMb2NhbGl6YXRpb25bXSA9IFtdO1xuXG4gICAgcHVibGljIHN0YXRpYyBmcm9tQ29uZmlnRmlsZShjb25maWdGaWxlV2VhdGhlcjogV2VhdGhlckNvbmZpZ3VyYXRpb24pOiBXZWF0aGVyQ29uZmlndXJhdGlvbiB7XG4gICAgICAgIGNvbnN0IHdlYXRoZXIgPSBuZXcgV2VhdGhlckNvbmZpZ3VyYXRpb24oKTtcbiAgICAgICAgd2VhdGhlci5zaG93TG9jYXRpb25OYW1lID0gY29uZmlnRmlsZVdlYXRoZXIuc2hvd0xvY2F0aW9uTmFtZTtcbiAgICAgICAgd2VhdGhlci5hdXRvZ2V0TG9jYWxpemF0aW9uTmFtZSA9IGNvbmZpZ0ZpbGVXZWF0aGVyLmF1dG9nZXRMb2NhbGl6YXRpb25OYW1lO1xuICAgICAgICB3ZWF0aGVyLmxvY2FsaXphdGlvbnMgPSBjb25maWdGaWxlV2VhdGhlci5sb2NhbGl6YXRpb25zO1xuXG4gICAgICAgIGNvbnN0IE1BWCA9IFdlYXRoZXJDb25maWd1cmF0aW9uLk1BWF9MT0NBTElaQVRJT05TO1xuICAgICAgICBpZiAod2VhdGhlci5sb2NhbGl6YXRpb25zLmxlbmd0aCA+IE1BWCkge1xuICAgICAgICAgICAgd2VhdGhlci5sb2NhbGl6YXRpb25zLnNwbGljZShNQVgsIHdlYXRoZXIubG9jYWxpemF0aW9ucy5sZW5ndGggLSBNQVgpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gd2VhdGhlcjtcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgY2hlY2tMb2NhbGl6YXRpb25OYW1lcygpIHtcblxuICAgICAgICB0cnkge1xuXG4gICAgICAgICAgICBpZiAodGhpcy5hdXRvZ2V0TG9jYWxpemF0aW9uTmFtZSA9PT0gZmFsc2UpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgICAgICBjb25zdCBhdXRvZ2V0TG9jYWxpemF0aW9uczogQXV0b2dldExvY2FsaXphdGlvbltdID0gYXdhaXQgdGhpcy5jaGVja0xvY2FsaXphdGlvbk5hbWVzRnJvbUZpbGUoKTtcblxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmxvY2FsaXphdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCBsb2MgPSB0aGlzLmxvY2FsaXphdGlvbnNbaV07XG4gICAgICAgICAgICAgICAgaWYgKGxvYy5uYW1lLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gaHR0cHM6Ly9ub21pbmF0aW0ub3BlbnN0cmVldG1hcC5vcmcvcmV2ZXJzZT9sYXQ9TEFUJmxvbj1MT04mZm9ybWF0PWpzb25cblxuICAgICAgICAgICAgICAgIGNvbnN0IGJhc2VVcmwgPSBcImh0dHBzOi8vbm9taW5hdGltLm9wZW5zdHJlZXRtYXAub3JnL3JldmVyc2VcIjtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJhbXMgPSBgbGF0PSR7bG9jLmxhdGl0dWRlfSZsb249JHtsb2MubG9uZ2l0dWRlfSZmb3JtYXQ9anNvbmA7XG4gICAgICAgICAgICAgICAgY29uc3QgdXJsID0gYCR7YmFzZVVybH0/JHtwYXJhbXN9YDtcblxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7IGhlYWRlcnM6IHsgXCJVc2VyLUFnZW50XCI6IFwib3ZyYWVsLWFzdGFsLWJhclwiIH0gfSk7XG4gICAgICAgICAgICAgICAgY29uc3QganNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgICAgICAgICAgICAgIGlmIChqc29uID09PSB1bmRlZmluZWQgfHwganNvbi5lcnJvciAhPT0gdW5kZWZpbmVkICYmIGpzb24uZXJyb3IubGVuZ3RoID4gMCB8fCBqc29uLmFkZHJlc3MgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjb25zdCBhZGRyZXNzID0ganNvbi5hZGRyZXNzO1xuICAgICAgICAgICAgICAgIGlmIChhZGRyZXNzLmNpdHkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2NhbGl6YXRpb25zW2ldLm5hbWUgPSBhZGRyZXNzLmNpdHk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhZGRyZXNzLnRvd24pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2NhbGl6YXRpb25zW2ldLm5hbWUgPSBhZGRyZXNzLnRvd247XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhZGRyZXNzLnZpbGxhZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2NhbGl6YXRpb25zW2ldLm5hbWUgPSBhZGRyZXNzLnZpbGxhZ2U7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubG9jYWxpemF0aW9uc1tpXS5uYW1lLmxlbmd0aCA+IDApXG4gICAgICAgICAgICAgICAgICAgIGF1dG9nZXRMb2NhbGl6YXRpb25zLnB1c2gobmV3IEF1dG9nZXRMb2NhbGl6YXRpb24odGhpcy5sb2NhbGl6YXRpb25zW2ldLCBpKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGF3YWl0IHRoaXMuc2F2ZU5hbWVzVG9GaWxlKGF1dG9nZXRMb2NhbGl6YXRpb25zKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjaGVja0xvY2FsaXphdGlvbk5hbWVzJyk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGFzeW5jIGNoZWNrTG9jYWxpemF0aW9uTmFtZXNGcm9tRmlsZSgpIHtcbiAgICAgICAgY29uc3QgYXV0b2dldExvY2FsaXphdGlvbnM6IEF1dG9nZXRMb2NhbGl6YXRpb25bXSA9IGF3YWl0IHRoaXMubG9hZE5hbWVzRnJvbUZpbGUoKTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubG9jYWxpemF0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgbG9jID0gdGhpcy5sb2NhbGl6YXRpb25zW2ldO1xuICAgICAgICAgICAgaWYgKGxvYy5uYW1lLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgYXV0b2dldExvY2FsaXphdGlvbiA9IGF1dG9nZXRMb2NhbGl6YXRpb25zLmZpbmQobCA9PiBsLmluZGV4ID09PSBpKTtcbiAgICAgICAgICAgIGlmIChhdXRvZ2V0TG9jYWxpemF0aW9uID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgIGlmIChhdXRvZ2V0TG9jYWxpemF0aW9uLmxhdGl0dWRlID09PSBsb2MubGF0aXR1ZGUgJiYgYXV0b2dldExvY2FsaXphdGlvbi5sb25naXR1ZGUgPT09IGxvYy5sb25naXR1ZGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvY2FsaXphdGlvbnNbaV0ubmFtZSA9IGF1dG9nZXRMb2NhbGl6YXRpb24ubmFtZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYXV0b2dldExvY2FsaXphdGlvbnMuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGF1dG9nZXRMb2NhbGl6YXRpb25zO1xuICAgIH1cblxuICAgIHByaXZhdGUgYXN5bmMgc2F2ZU5hbWVzVG9GaWxlKGF1dG9nZXRMb2NhbGl6YXRpb25zOiBBdXRvZ2V0TG9jYWxpemF0aW9uW10pIHtcbiAgICAgICAgYXdhaXQgd3JpdGVGaWxlQXN5bmMoXG4gICAgICAgICAgICB0aGlzLnNhdmVkQXV0b2dldE5hbWVzUGF0aCxcbiAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KGF1dG9nZXRMb2NhbGl6YXRpb25zLCB1bmRlZmluZWQsIFwiXFx0XCIpXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhc3luYyBsb2FkTmFtZXNGcm9tRmlsZSgpOiBQcm9taXNlPEF1dG9nZXRMb2NhbGl6YXRpb25bXT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3Qgc2F2ZWROYW1lcyA9IGF3YWl0IHJlYWRGaWxlQXN5bmModGhpcy5zYXZlZEF1dG9nZXROYW1lc1BhdGgpO1xuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2Uoc2F2ZWROYW1lcykgYXMgQXV0b2dldExvY2FsaXphdGlvbltdO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgQ29tbXVuaWNhdGlvbi5wcmludEVycm9yKFxuICAgICAgICAgICAgICAgIFwiQ2Fubm90IGxvYWQgYXV0b2dldCBsb2NhbGl6YXRpb24gbmFtZXMgZnJvbSBmaWxlID0+IGVycm9yOiBcIiArIGVycm9yLFxuICAgICAgICAgICAgICAgIFwiV2VhdGhlckNvbmZpZ3VyYXRpb25cIlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW107XG4gICAgfVxufVxuXG5jbGFzcyBBdXRvZ2V0TG9jYWxpemF0aW9uIHtcblxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmcgPSBcIlwiO1xuICAgIHB1YmxpYyBpbmRleDogbnVtYmVyID0gLTE7XG4gICAgcHVibGljIGxhdGl0dWRlOiBudW1iZXIgPSAtMTtcbiAgICBwdWJsaWMgbG9uZ2l0dWRlOiBudW1iZXIgPSAtMTtcblxuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbjogV2VhdGhlckxvY2FsaXphdGlvbiwgaW5kZXg6IG51bWJlcikge1xuICAgICAgICB0aGlzLm5hbWUgPSBsb2NhbGl6YXRpb24ubmFtZTtcbiAgICAgICAgdGhpcy5pbmRleCA9IGluZGV4O1xuICAgICAgICB0aGlzLmxhdGl0dWRlID0gbG9jYWxpemF0aW9uLmxhdGl0dWRlO1xuICAgICAgICB0aGlzLmxvbmdpdHVkZSA9IGxvY2FsaXphdGlvbi5sb25naXR1ZGU7XG4gICAgfVxufSIsICJleHBvcnQgY2xhc3MgTm90aWZpY2F0aW9uQ29uZmlndXJhdGlvbiB7XG4gICAgcHVibGljIGhpc3RvcnlFbnRyaWVzOiBudW1iZXIgPSAxMDA7XG4gICAgcHVibGljIGhpc3RvcnlQYXRoOiBzdHJpbmcgPSBgZGF0YS9ub3RpZmljYXRpb24vaGlzdG9yeS5qc29uYDtcbn0iLCAiaW1wb3J0IGFwcCBmcm9tIFwiYWdzL2d0azQvYXBwXCI7XG5pbXBvcnQgeyBBc3RhbCwgR3RrIH0gZnJvbSBcImFncy9ndGs0XCI7XG5pbXBvcnQgQXN0YWxOb3RpZmQgZnJvbSBcImdpOi8vQXN0YWxOb3RpZmRcIjtcbmltcG9ydCBOb3RpZmljYXRpb25Qb3B1cCBmcm9tIFwiLi9ub3RpZmljYXRpb25fcG9wdXBcIjtcbmltcG9ydCB7IGNyZWF0ZUJpbmRpbmcsIEZvciwgY3JlYXRlU3RhdGUsIG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWJcIjtcbmltcG9ydCBBZHcgZnJvbSBcImdpOi8vQWR3XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5vdGlmaWNhdGlvbk1hbmFnZXIoKSB7XG4gIGNvbnN0IG1vbml0b3JzID0gY3JlYXRlQmluZGluZyhhcHAsIFwibW9uaXRvcnNcIik7XG5cbiAgY29uc3Qgbm90aWZkID0gQXN0YWxOb3RpZmQuZ2V0X2RlZmF1bHQoKTtcbiAgbm90aWZkLmlnbm9yZVRpbWVvdXQgPSBmYWxzZTtcblxuICBjb25zdCBbbm90aWZpY2F0aW9ucywgc2V0Tm90aWZpY2F0aW9uc10gPSBjcmVhdGVTdGF0ZShcbiAgICBuZXcgQXJyYXk8QXN0YWxOb3RpZmQuTm90aWZpY2F0aW9uPigpXG4gICk7XG5cbiAgY29uc3Qgbm90aWZpZWRIYW5kbGVyID0gbm90aWZkLmNvbm5lY3QoXCJub3RpZmllZFwiLCAoXywgaWQsIHJlcGxhY2VkKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJOT1RJRklFRFwiKTtcbiAgICBjb25zdCBub3RpZmljYXRpb24gPSBub3RpZmQuZ2V0X25vdGlmaWNhdGlvbihpZCk7XG4gICAgY29uc29sZS5sb2coYCR7bm90aWZpY2F0aW9uLnN1bW1hcnl9ICR7bm90aWZpY2F0aW9uLmJvZHl9YCk7XG5cbiAgICBpZiAocmVwbGFjZWQgJiYgbm90aWZpY2F0aW9ucy5nZXQoKS5zb21lKChuKSA9PiBuLmlkID09PSBpZCkpIHtcbiAgICAgIHNldE5vdGlmaWNhdGlvbnMoKG5zKSA9PiBucy5tYXAoKG4pID0+IChuLmlkID09PSBpZCA/IG5vdGlmaWNhdGlvbiA6IG4pKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldE5vdGlmaWNhdGlvbnMoKG5zKSA9PiBbbm90aWZpY2F0aW9uLCAuLi5uc10pO1xuICAgIH1cbiAgfSk7XG5cbiAgZnVuY3Rpb24gZ2V0UmVhc29uKHJlYXNvbjogQXN0YWxOb3RpZmQuQ2xvc2VkUmVhc29uKSB7XG4gICAgc3dpdGNoIChyZWFzb24pIHtcbiAgICAgIGNhc2UgQXN0YWxOb3RpZmQuQ2xvc2VkUmVhc29uLkNMT1NFRDpcbiAgICAgICAgcmV0dXJuIFwiY2xvc2VkXCI7XG4gICAgICBjYXNlIEFzdGFsTm90aWZkLkNsb3NlZFJlYXNvbi5ESVNNSVNTRURfQllfVVNFUjpcbiAgICAgICAgcmV0dXJuIFwiZGlzbWlzc2VkXCI7XG4gICAgICBjYXNlIEFzdGFsTm90aWZkLkNsb3NlZFJlYXNvbi5FWFBJUkVEOlxuICAgICAgICByZXR1cm4gXCJleHBpcmVkXCI7XG4gICAgICBjYXNlIEFzdGFsTm90aWZkLkNsb3NlZFJlYXNvbi5VTkRFRklORUQ6XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gXCJ1bmRlZmluZWRcIjtcbiAgICB9XG4gIH1cblxuICBjb25zdCByZXNvbHZlZEhhbmRsZXIgPSBub3RpZmQuY29ubmVjdChcInJlc29sdmVkXCIsIChuLCBpZCwgcmVhc29uKSA9PiB7XG4gICAgY29uc29sZS5sb2coXG4gICAgICBgUmVhc29uOiAke2dldFJlYXNvbihcbiAgICAgICAgcmVhc29uXG4gICAgICApfSwgUmVzb2x2aW5nIGlkOiAke2lkfSwgbm90aWZpY2F0aW9uczogJHtuLm5vdGlmaWNhdGlvbnNcbiAgICAgICAgLm1hcCgobikgPT4gbi5pZClcbiAgICAgICAgLmpvaW4oXCIsIFwiKX1gXG4gICAgKTtcbiAgICBjb25zdCB4ID0gbm90aWZpY2F0aW9ucygobikgPT4gbi5maW5kKChuMikgPT4gbjIuaWQgPT09IGlkKSk7XG4gICAgY29uc3QgbjIgPSB4LmdldCgpO1xuICAgIGNvbnNvbGUubG9nKGAke24yPy5zdW1tYXJ5fSAke24yPy5ib2R5fWApO1xuXG4gICAgc2V0Tm90aWZpY2F0aW9ucygobnMpID0+IG5zLmZpbHRlcigobikgPT4gbi5pZCAhPT0gaWQpKTtcbiAgfSk7XG5cbiAgb25DbGVhbnVwKCgpID0+IHtcbiAgICBub3RpZmQuZGlzY29ubmVjdChub3RpZmllZEhhbmRsZXIpO1xuICAgIG5vdGlmZC5kaXNjb25uZWN0KHJlc29sdmVkSGFuZGxlcik7XG4gIH0pO1xuXG4gIHJldHVybiAoXG4gICAgPEZvciBlYWNoPXttb25pdG9yc30+XG4gICAgICB7KG1vbml0b3IpID0+IChcbiAgICAgICAgPHdpbmRvd1xuICAgICAgICAgICQ9eyhzZWxmKSA9PiBvbkNsZWFudXAoKCkgPT4gc2VsZi5kZXN0cm95KCkpfVxuICAgICAgICAgIGdka21vbml0b3I9e21vbml0b3J9XG4gICAgICAgICAgY3NzPXtgXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICBgfVxuICAgICAgICAgIHZpc2libGU9e25vdGlmaWNhdGlvbnMoKG5zKSA9PiBucy5sZW5ndGggPiAwKX1cbiAgICAgICAgICBhbmNob3I9e0FzdGFsLldpbmRvd0FuY2hvci5UT1AgfCBBc3RhbC5XaW5kb3dBbmNob3IuUklHSFR9XG4gICAgICAgID5cbiAgICAgICAgICA8Ym94XG4gICAgICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgICAgICAgY3NzPXtgXG4gICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICAgIHNwYWNpbmc9ezEwfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxGb3IgZWFjaD17bm90aWZpY2F0aW9uc30+XG4gICAgICAgICAgICAgIHsobm90aWZpY2F0aW9uKSA9PiAoXG4gICAgICAgICAgICAgICAgPE5vdGlmaWNhdGlvblBvcHVwIG5vdGlmaWNhdGlvbj17bm90aWZpY2F0aW9ufSAvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9Gb3I+XG4gICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvd2luZG93PlxuICAgICAgKX1cbiAgICA8L0Zvcj5cbiAgKTtcbn1cbiIsICJpbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiO1xuaW1wb3J0IEdkayBmcm9tIFwiZ2k6Ly9HZGs/dmVyc2lvbj00LjBcIjtcbmltcG9ydCBBZHcgZnJvbSBcImdpOi8vQWR3XCI7XG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCI7XG5pbXBvcnQgQXN0YWxOb3RpZmQgZnJvbSBcImdpOi8vQXN0YWxOb3RpZmRcIjtcbmltcG9ydCBQYW5nbyBmcm9tIFwiZ2k6Ly9QYW5nb1wiO1xuaW1wb3J0IHsgY3JlYXRlQmluZGluZywgY3JlYXRlU3RhdGUsIG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIjtcbmltcG9ydCB7IGludGVydmFsLCB0aW1lb3V0IH0gZnJvbSBcImFncy90aW1lXCI7XG5pbXBvcnQgQXN0YWxJTyBmcm9tIFwiZ2k6Ly9Bc3RhbElPXCI7XG5pbXBvcnQgeyBpY29ucyB9IGZyb20gXCIuLi8uLi9tb2RlbHMvdGV4dHMvdGV4dF9pY29uc1wiO1xuXG5mdW5jdGlvbiBpc0ljb24oaWNvbj86IHN0cmluZyB8IG51bGwpIHtcbiAgY29uc3QgaWNvblRoZW1lID0gR3RrLkljb25UaGVtZS5nZXRfZm9yX2Rpc3BsYXkoR2RrLkRpc3BsYXkuZ2V0X2RlZmF1bHQoKSEpO1xuICByZXR1cm4gaWNvbiAmJiBpY29uVGhlbWUuaGFzX2ljb24oaWNvbik7XG59XG5cbmZ1bmN0aW9uIGZpbGVFeGlzdHMocGF0aDogc3RyaW5nKSB7XG4gIHJldHVybiBHTGliLmZpbGVfdGVzdChwYXRoLCBHTGliLkZpbGVUZXN0LkVYSVNUUyk7XG59XG5cbmZ1bmN0aW9uIHRpbWUodGltZTogbnVtYmVyLCBmb3JtYXQgPSBcIiVIOiVNXCIpIHtcbiAgcmV0dXJuIEdMaWIuRGF0ZVRpbWUubmV3X2Zyb21fdW5peF9sb2NhbCh0aW1lKS5mb3JtYXQoZm9ybWF0KSE7XG59XG5cbmZ1bmN0aW9uIGdldFVyZ2VuY3kobjogQXN0YWxOb3RpZmQuTm90aWZpY2F0aW9uKSB7XG4gIGNvbnN0IHsgTE9XLCBOT1JNQUwsIENSSVRJQ0FMIH0gPSBBc3RhbE5vdGlmZC5VcmdlbmN5O1xuICBzd2l0Y2ggKG4udXJnZW5jeSkge1xuICAgIGNhc2UgTE9XOlxuICAgICAgcmV0dXJuIFwibG93XCI7XG4gICAgY2FzZSBOT1JNQUw6XG4gICAgICByZXR1cm4gXCJub3JtYWxcIjtcbiAgICBjYXNlIENSSVRJQ0FMOlxuICAgICAgcmV0dXJuIFwiY3JpdGljYWxcIjtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFwibm9ybWFsXCI7XG4gIH1cbn1cblxuaW50ZXJmYWNlIE5vdGlmaWNhdGlvblByb3BzIHtcbiAgbm90aWZpY2F0aW9uOiBBc3RhbE5vdGlmZC5Ob3RpZmljYXRpb247XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5vdGlmaWNhdGlvblBvcHVwKHtcbiAgbm90aWZpY2F0aW9uOiBuLFxufTogTm90aWZpY2F0aW9uUHJvcHMpIHtcbiAgY29uc3QgdXJnZW5jeSA9IGdldFVyZ2VuY3kobik7XG5cbiAgbGV0IHRpbWVvdXRJbnRlcnZhbDogQXN0YWxJTy5UaW1lIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuICBsZXQgW2dldExlZnRUaW1lb3V0LCBzZXRMZWZ0VGltZW91dF0gPSBjcmVhdGVTdGF0ZSgtMSk7XG5cbiAgaWYgKG4uZXhwaXJlVGltZW91dCA+IDApIHtcbiAgICBzZXRMZWZ0VGltZW91dChuLmV4cGlyZVRpbWVvdXQpO1xuICAgIHRpbWVvdXRJbnRlcnZhbCA9IGludGVydmFsKDIwLCAoKSA9PiB7XG4gICAgICBzZXRMZWZ0VGltZW91dCgodikgPT4gdiAtIDIwKTtcbiAgICB9KTtcblxuICAgIHRpbWVvdXQobi5leHBpcmVUaW1lb3V0LCAoKSA9PiB7XG4gICAgICBpZiAodGltZW91dEludGVydmFsKSB0aW1lb3V0SW50ZXJ2YWwuY2FuY2VsKCk7XG4gICAgfSk7XG4gIH1cblxuICAvLyBvbkNsZWFudXAoKCkgPT4ge1xuICAvLyAgIGlmICh0aW1lb3V0SW50ZXJ2YWwpIHRpbWVvdXRJbnRlcnZhbC5jYW5jZWwoKTtcbiAgLy8gfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8QWR3LkNsYW1wIG1heGltdW1TaXplPXs0MDB9PlxuICAgICAgPGJveFxuICAgICAgICB3aWR0aFJlcXVlc3Q9ezQwMH1cbiAgICAgICAgY2xhc3M9e2Bub3RpZmljYXRpb24gbm90aWZpY2F0aW9uLSR7dXJnZW5jeX1gfVxuICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgPlxuICAgICAgICA8Ym94IGNsYXNzPVwiaGVhZGVyXCI+XG4gICAgICAgICAgeyhuLmFwcEljb24gfHwgaXNJY29uKG4uZGVza3RvcEVudHJ5KSkgJiYgKFxuICAgICAgICAgICAgPGltYWdlXG4gICAgICAgICAgICAgIGNsYXNzPVwiYXBwLWljb25cIlxuICAgICAgICAgICAgICB2aXNpYmxlPXtCb29sZWFuKG4uYXBwSWNvbiB8fCBuLmRlc2t0b3BFbnRyeSl9XG4gICAgICAgICAgICAgIGljb25OYW1lPXtuLmFwcEljb24gfHwgbi5kZXNrdG9wRW50cnl9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICl9XG4gICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICBjbGFzcz1cImFwcC1uYW1lXCJcbiAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgZWxsaXBzaXplPXtQYW5nby5FbGxpcHNpemVNb2RlLkVORH1cbiAgICAgICAgICAgIGxhYmVsPXtuLmFwcE5hbWUgfHwgXCJVbmtub3duXCJ9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgIGNsYXNzPVwidGltZVwiXG4gICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5FTkR9XG4gICAgICAgICAgICBsYWJlbD17dGltZShuLnRpbWUpfVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrZWQ9eygpID0+IG4uZGlzbWlzcygpfSBsYWJlbD17aWNvbnMuY2xvc2V9PjwvYnV0dG9uPlxuICAgICAgICA8L2JveD5cbiAgICAgICAgPEd0ay5TZXBhcmF0b3JcbiAgICAgICAgICB2aXNpYmxlXG4gICAgICAgICAgaGVpZ2h0UmVxdWVzdD17Mn1cbiAgICAgICAgICBtYXJnaW5Cb3R0b209ezZ9XG4gICAgICAgICAgY2xhc3M9e2BzZXBhcmF0ZS1iYXItJHt1cmdlbmN5fWB9XG4gICAgICAgIC8+XG4gICAgICAgIDxib3ggY2xhc3M9XCJjb250ZW50XCI+XG4gICAgICAgICAge24uaW1hZ2UgJiYgZmlsZUV4aXN0cyhuLmltYWdlKSAmJiAoXG4gICAgICAgICAgICA8aW1hZ2UgdmFsaWduPXtHdGsuQWxpZ24uU1RBUlR9IGNsYXNzPVwiaW1hZ2VcIiBmaWxlPXtuLmltYWdlfSAvPlxuICAgICAgICAgICl9XG4gICAgICAgICAge24uaW1hZ2UgJiYgaXNJY29uKG4uaW1hZ2UpICYmIChcbiAgICAgICAgICAgIDxib3ggdmFsaWduPXtHdGsuQWxpZ24uU1RBUlR9IGNsYXNzPVwiaWNvbi1pbWFnZVwiPlxuICAgICAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgICAgICBpY29uTmFtZT17bi5pbWFnZX1cbiAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgIGNsYXNzPVwic3VtbWFyeVwiXG4gICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgICB4YWxpZ249ezB9XG4gICAgICAgICAgICAgIGxhYmVsPXtuLnN1bW1hcnl9XG4gICAgICAgICAgICAgIGVsbGlwc2l6ZT17UGFuZ28uRWxsaXBzaXplTW9kZS5FTkR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAge24uYm9keSAmJiAoXG4gICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgIGNsYXNzPVwiYm9keVwiXG4gICAgICAgICAgICAgICAgd3JhcFxuICAgICAgICAgICAgICAgIHVzZU1hcmt1cFxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgICAgIHhhbGlnbj17MH1cbiAgICAgICAgICAgICAgICBqdXN0aWZ5PXtHdGsuSnVzdGlmaWNhdGlvbi5GSUxMfVxuICAgICAgICAgICAgICAgIGxhYmVsPXtuLmJvZHl9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAge24uZXhwaXJlVGltZW91dCA+IDAgJiYgKFxuICAgICAgICAgICAgICA8Ym94IG1hcmdpblRvcD17NX0+XG4gICAgICAgICAgICAgICAgPGxldmVsYmFyXG4gICAgICAgICAgICAgICAgICBjc3NDbGFzc2VzPXtbYHRpbWVvdXQtYmFyLSR7dXJnZW5jeX1gXX1cbiAgICAgICAgICAgICAgICAgIGhlaWdodFJlcXVlc3Q9ezd9XG4gICAgICAgICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICAgICAgICBtaW5WYWx1ZT17MH1cbiAgICAgICAgICAgICAgICAgIG1heFZhbHVlPXtuLmV4cGlyZVRpbWVvdXR9XG4gICAgICAgICAgICAgICAgICB2YWx1ZT17Z2V0TGVmdFRpbWVvdXR9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L2JveD5cbiAgICAgICAge24uYWN0aW9ucy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICA8Ym94IGNsYXNzPVwiYWN0aW9uc1wiIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgPEd0ay5TZXBhcmF0b3JcbiAgICAgICAgICAgICAgdmlzaWJsZVxuICAgICAgICAgICAgICBoZWlnaHRSZXF1ZXN0PXsyfVxuICAgICAgICAgICAgICBtYXJnaW5Cb3R0b209ezZ9XG4gICAgICAgICAgICAgIGNsYXNzPXtgc2VwYXJhdGUtYmFyLSR7dXJnZW5jeX1gfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIHtuLmFjdGlvbnMubWFwKCh7IGxhYmVsLCBpZCB9KSA9PiAoXG4gICAgICAgICAgICAgIDxidXR0b24gaGV4cGFuZCBvbkNsaWNrZWQ9eygpID0+IG4uaW52b2tlKGlkKX0+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGxhYmVsPXtsYWJlbH0gaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfSBoZXhwYW5kIC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9ib3g+XG4gICAgICAgICl9XG4gICAgICA8L2JveD5cbiAgICA8L0Fkdy5DbGFtcD5cbiAgKTtcbn1cbiIsICJpbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIlxuaW1wb3J0IG1haW5TdHlsZSBmcm9tIFwiLi9zdHlsZXMvbWFpbi5zY3NzXCJcbmltcG9ydCB7IGJhciB9IGZyb20gXCIuL3dpZGdldC9iYXJcIlxuaW1wb3J0IHsgVGltZXJVdGlscyB9IGZyb20gXCIuL3dpZGdldC90aW1lci90aW1lcl91dGlsc1wiO1xuaW1wb3J0IHsgU291bmRQbGF5ZXIgfSBmcm9tIFwiLi9tb2RlbHMvdXRpbHMvc291bmRfcGxheWVyXCI7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uIH0gZnJvbSBcIi4vbW9kZWxzL2NvbmZpZ3VyYXRpb24vY29uZmlndXJhdGlvblwiO1xuaW1wb3J0IEFkdyBmcm9tIFwiZ2k6Ly9BZHdcIjtcbmltcG9ydCB7IHdlYXRoZXJBcGkgfSBmcm9tIFwiLi93aWRnZXQvd2VhdGhlci93ZWF0aGVyX2FwaVwiO1xuaW1wb3J0IE5vdGlmaWNhdGlvbk1hbmFnZXIgZnJvbSBcIi4vd2lkZ2V0L25vdGlmaWNhdGlvbl9tYW5hZ2VyL25vdGlmaWNhdGlvbl9tYW5hZ2VyXCI7XG5cbmNvbnN0IG1vbml0b3JzID0gYXBwLmdldF9tb25pdG9ycygpO1xubGV0IG1haW5Nb25pdG9yID0gbW9uaXRvcnMuZmlsdGVyKG0gPT4gbS5kZXNjcmlwdGlvbj8uaW5jbHVkZXMoXCJBVzM0MjNEV0ZcIikpWzBdO1xuaWYgKG1haW5Nb25pdG9yID09IHVuZGVmaW5lZClcbiAgbWFpbk1vbml0b3IgPSBtb25pdG9yc1ttb25pdG9ycy5sZW5ndGggLSAxXTtcblxuZXhwb3J0IGxldCBjb25maWd1cmF0aW9uOiBDb25maWd1cmF0aW9uID0gYXdhaXQgQ29uZmlndXJhdGlvbi5jcmVhdGUoKTtcbmF3YWl0IHdlYXRoZXJBcGkuaW5pdCgpO1xuYXdhaXQgVGltZXJVdGlscy5sb2FkVGltZXJzRnJvbUZpbGUoKTtcbmF3YWl0IFNvdW5kUGxheWVyLmluaXQoKTtcblxuXG4vLyBjb25zdCBzdHlsZU1hbmFnZXIgPSBBZHcuU3R5bGVNYW5hZ2VyLmdldF9kZWZhdWx0KCk7XG4vLyBzdHlsZU1hbmFnZXIuY29sb3JTY2hlbWUgPSBBZHcuQ29sb3JTY2hlbWUuRk9SQ0VfREFSSztcblxuYXBwLnN0YXJ0KHtcbiAgY3NzOiBtYWluU3R5bGUsXG4gIG1haW4oKSB7XG4gICAgYmFyKG1haW5Nb25pdG9yKVxuICAgIE5vdGlmaWNhdGlvbk1hbmFnZXIoKVxuICAgIC8vIEJhcihhcHAuZ2V0X21vbml0b3JzKClbMV0pXG4gICAgLy8gYXBwLmdldF9tb25pdG9ycygpLm1hcChNYWluQmFyKVxuICB9LFxufSkiXSwKICAibWFwcGluZ3MiOiAiO0FBQUEsT0FBTyxVQUFVO0FBQ2pCLE9BQU8sU0FBUztBQUNoQixPQUFPLFdBQVc7OztBQ0lsQixTQUFTLFNBQVMsS0FBYTtBQUMzQixTQUFPLElBQ0YsUUFBUSxtQkFBbUIsT0FBTyxFQUNsQyxXQUFXLEtBQUssR0FBRyxFQUNuQixZQUFZO0FBQ3JCO0FBRUEsZUFBZSxTQUFZQSxNQUE4QkMsUUFBdUI7QUFDNUUsU0FBT0QsS0FBSSxLQUFLLENBQUMsTUFBTUMsT0FBTSxFQUFFLE9BQU8sQ0FBQyxFQUFFLE1BQU0sTUFBTSxNQUFNO0FBQy9EO0FBRUEsU0FBUyxNQUF3QixPQUFVLE1BQWdDO0FBQ3ZFLFNBQU8sZUFBZSxPQUFPLE1BQU07QUFBQSxJQUMvQixNQUFNO0FBQ0YsYUFBTyxLQUFLLE9BQU8sU0FBUyxJQUFJLENBQUMsRUFBRSxFQUFFO0FBQUEsSUFDekM7QUFBQSxFQUNKLENBQUM7QUFDTDtBQUVBLE1BQU0sU0FBUyxPQUFPLGdCQUFnQixHQUFHLENBQUMsRUFBRSxNQUFNLFlBQVksTUFBTTtBQUNoRSxRQUFNLEtBQUssV0FBVyxNQUFNO0FBQzVCLFFBQU0sWUFBWSxXQUFXLFVBQVU7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Ikd0ayIsICJHT2JqZWN0IiwgIkdPYmplY3QiLCAiR0xpYiIsICJzbmFrZWlmeSIsICJzbmFrZWlmeSIsICJHT2JqZWN0IiwgInNldCIsICJHT2JqZWN0IiwgImtleSIsICJvYmplY3QiLCAiR09iamVjdCIsICJtb2QiLCAiR09iamVjdCIsICJyZW1vdmUiLCAiQXN0YWxJTyIsICJBc3RhbElPIiwgImludGVydmFsIiwgInRpbWVvdXQiLCAic2V0IiwgIkFzdGFsIiwgIkFzdGFsIiwgIkd0ayIsICJBc3RhbCIsICJHdGsiLCAiR2lvIiwgIkdPYmplY3QiLCAiR3RrIiwgIkdpbyIsICJjc3MiLCAiR09iamVjdCIsICJpbmRleCIsICJHdGsiLCAiQXN0YWwiLCAiR3RrIiwgIkd0ayIsICJHdGsiLCAiR3RrIiwgIkd0ayIsICJOZXR3b3JrIiwgIk5ldHdvcmsiLCAibmV0d29yayIsICJHdGsiLCAiTmV0d29yayIsICJHdGsiLCAid2lmaSIsICJ1c2VXaWZpIiwgIk5ldHdvcmsiLCAiR3RrIiwgIkdMaWIiLCAiR2lvIiwgInRpbWUiLCAiR3RrIiwgInRpbWUiLCAiR3RrIiwgIlRhYk5hbWUiLCAiR3RrIiwgIldwIiwgIldwIiwgIkd0ayIsICJHdGsiLCAiR3RrIiwgInRpbWUiLCAiQXN0YWwiLCAiR3RrIiwgIkdpbyIsICJHaW8iLCAiQXN0YWxOb3RpZmQiLCAiR3RrIiwgIkdkayIsICJHTGliIiwgIlBhbmdvIiwgIkd0ayIsICJHZGsiLCAiR0xpYiIsICJ0aW1lIiwgIlBhbmdvIiwgIm1vbml0b3JzIiwgIkFzdGFsTm90aWZkIiwgIm4iLCAibjIiLCAiQXN0YWwiLCAiR3RrIl0KfQo=

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@